~/DevOps/kubespray release-2.20 ansible-playbook -i inventory/mycluster/inventory.ini --become --user=serhieiev --become-user=root cluster.yml --key-file "~/.ssh/gcp_key"
[WARNING]: Skipping callback plugin 'ara_default', unable to load

PLAY [localhost] ***********************************************************************************
Monday 20 February 2023  14:04:14 +0200 (0:00:00.033)       0:00:00.033 *******

TASK [Check 2.11.0 <= Ansible version < 2.13.0] ****************************************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:14 +0200 (0:00:00.044)       0:00:00.077 *******

TASK [Check that python netaddr is installed] ******************************************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:14 +0200 (0:00:00.109)       0:00:00.187 *******

TASK [Check that jinja is not too old (install via pip)] *******************************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
[WARNING]: Could not match supplied host pattern, ignoring: kube-master

PLAY [Add kube-master nodes to kube_control_plane] *************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: kube-node

PLAY [Add kube-node nodes to kube_node] ************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: k8s-cluster

PLAY [Add k8s-cluster nodes to k8s_cluster] ********************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: calico-rr

PLAY [Add calico-rr nodes to calico_rr] ************************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: no-floating

PLAY [Add no-floating nodes to no_floating] ********************************************************
skipping: no hosts matched
[WARNING]: Could not match supplied host pattern, ignoring: bastion

PLAY [bastion[0]] **********************************************************************************
skipping: no hosts matched

PLAY [k8s_cluster:etcd] ****************************************************************************
Monday 20 February 2023  14:04:14 +0200 (0:00:00.112)       0:00:00.299 *******
Monday 20 February 2023  14:04:14 +0200 (0:00:00.057)       0:00:00.356 *******
Monday 20 February 2023  14:04:14 +0200 (0:00:00.058)       0:00:00.415 *******
Monday 20 February 2023  14:04:14 +0200 (0:00:00.053)       0:00:00.469 *******
Monday 20 February 2023  14:04:14 +0200 (0:00:00.052)       0:00:00.522 *******
Monday 20 February 2023  14:04:14 +0200 (0:00:00.051)       0:00:00.574 *******
Monday 20 February 2023  14:04:14 +0200 (0:00:00.054)       0:00:00.628 *******
Monday 20 February 2023  14:04:15 +0200 (0:00:00.057)       0:00:00.685 *******
Monday 20 February 2023  14:04:15 +0200 (0:00:00.054)       0:00:00.740 *******
Monday 20 February 2023  14:04:15 +0200 (0:00:00.053)       0:00:00.793 *******
Monday 20 February 2023  14:04:16 +0200 (0:00:00.976)       0:00:01.770 *******

TASK [kubespray-defaults : Configure defaults] *****************************************************
ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
Monday 20 February 2023  14:04:16 +0200 (0:00:00.117)       0:00:01.887 *******
Monday 20 February 2023  14:04:16 +0200 (0:00:00.065)       0:00:01.953 *******
Monday 20 February 2023  14:04:16 +0200 (0:00:00.041)       0:00:01.995 *******
Monday 20 February 2023  14:04:16 +0200 (0:00:00.045)       0:00:02.040 *******
Monday 20 February 2023  14:04:16 +0200 (0:00:00.043)       0:00:02.084 *******
Monday 20 February 2023  14:04:16 +0200 (0:00:00.040)       0:00:02.124 *******
Monday 20 February 2023  14:04:16 +0200 (0:00:00.066)       0:00:02.191 *******
[WARNING]: raw module does not support the environment keyword

TASK [bootstrap-os : Fetch /etc/os-release] ********************************************************
ok: [node1]
Monday 20 February 2023  14:04:17 +0200 (0:00:01.276)       0:00:03.468 *******
Monday 20 February 2023  14:04:17 +0200 (0:00:00.045)       0:00:03.513 *******
Monday 20 February 2023  14:04:17 +0200 (0:00:00.041)       0:00:03.554 *******
Monday 20 February 2023  14:04:17 +0200 (0:00:00.043)       0:00:03.598 *******
Monday 20 February 2023  14:04:17 +0200 (0:00:00.041)       0:00:03.639 *******
Monday 20 February 2023  14:04:18 +0200 (0:00:00.042)       0:00:03.681 *******
Monday 20 February 2023  14:04:18 +0200 (0:00:00.040)       0:00:03.722 *******

TASK [bootstrap-os : include_tasks] ****************************************************************
included: /Users/max/DevOps/kubespray/roles/bootstrap-os/tasks/bootstrap-debian.yml for node1
Monday 20 February 2023  14:04:18 +0200 (0:00:00.074)       0:00:03.797 *******
[WARNING]: raw module does not support the environment keyword

TASK [bootstrap-os : Check if bootstrap is needed] *************************************************
ok: [node1]
Monday 20 February 2023  14:04:18 +0200 (0:00:00.282)       0:00:04.080 *******
[WARNING]: raw module does not support the environment keyword

TASK [bootstrap-os : Check http::proxy in apt configuration files] *********************************
ok: [node1]
Monday 20 February 2023  14:04:18 +0200 (0:00:00.198)       0:00:04.278 *******
Monday 20 February 2023  14:04:18 +0200 (0:00:00.047)       0:00:04.326 *******
[WARNING]: raw module does not support the environment keyword

TASK [bootstrap-os : Check https::proxy in apt configuration files] ********************************
ok: [node1]
Monday 20 February 2023  14:04:18 +0200 (0:00:00.190)       0:00:04.517 *******
Monday 20 February 2023  14:04:18 +0200 (0:00:00.051)       0:00:04.568 *******
Monday 20 February 2023  14:04:18 +0200 (0:00:00.041)       0:00:04.609 *******
Monday 20 February 2023  14:04:18 +0200 (0:00:00.041)       0:00:04.651 *******

TASK [bootstrap-os : Set the ansible_python_interpreter fact] **************************************
ok: [node1]
Monday 20 February 2023  14:04:19 +0200 (0:00:00.067)       0:00:04.718 *******

TASK [bootstrap-os : Install dbus for the hostname module] *****************************************
ok: [node1]
Monday 20 February 2023  14:04:21 +0200 (0:00:02.127)       0:00:06.846 *******
Monday 20 February 2023  14:04:21 +0200 (0:00:00.041)       0:00:06.887 *******
Monday 20 February 2023  14:04:21 +0200 (0:00:00.043)       0:00:06.931 *******

TASK [bootstrap-os : Create remote_tmp for it is used by another module] ***************************
changed: [node1]
Monday 20 February 2023  14:04:22 +0200 (0:00:01.529)       0:00:08.460 *******

TASK [bootstrap-os : Gather host facts to get ansible_os_family] ***********************************
ok: [node1]
Monday 20 February 2023  14:04:24 +0200 (0:00:01.987)       0:00:10.448 *******

TASK [bootstrap-os : Assign inventory name to unconfigured hostnames (non-CoreOS, non-Flatcar, Suse and ClearLinux, non-Fedora)] ***
changed: [node1]
Monday 20 February 2023  14:04:26 +0200 (0:00:02.141)       0:00:12.590 *******
Monday 20 February 2023  14:04:26 +0200 (0:00:00.042)       0:00:12.632 *******
Monday 20 February 2023  14:04:27 +0200 (0:00:00.042)       0:00:12.675 *******
Monday 20 February 2023  14:04:27 +0200 (0:00:00.151)       0:00:12.827 *******

TASK [bootstrap-os : Ensure bash_completion.d folder exists] ***************************************
ok: [node1]

PLAY [Gather facts] ********************************************************************************
Monday 20 February 2023  14:04:28 +0200 (0:00:01.428)       0:00:14.256 *******

TASK [Gather minimal facts] ************************************************************************
ok: [node1]
Monday 20 February 2023  14:04:30 +0200 (0:00:01.624)       0:00:15.881 *******

TASK [Gather necessary facts (network)] ************************************************************
ok: [node1]
Monday 20 February 2023  14:04:31 +0200 (0:00:01.566)       0:00:17.447 *******

TASK [Gather necessary facts (hardware)] ***********************************************************
ok: [node1]

PLAY [k8s_cluster:etcd] ****************************************************************************
Monday 20 February 2023  14:04:34 +0200 (0:00:02.245)       0:00:19.692 *******
Monday 20 February 2023  14:04:34 +0200 (0:00:00.061)       0:00:19.754 *******
Monday 20 February 2023  14:04:34 +0200 (0:00:00.060)       0:00:19.815 *******
Monday 20 February 2023  14:04:34 +0200 (0:00:00.115)       0:00:19.930 *******
Monday 20 February 2023  14:04:34 +0200 (0:00:00.054)       0:00:19.984 *******
Monday 20 February 2023  14:04:34 +0200 (0:00:00.056)       0:00:20.041 *******
Monday 20 February 2023  14:04:34 +0200 (0:00:00.056)       0:00:20.097 *******
Monday 20 February 2023  14:04:34 +0200 (0:00:00.062)       0:00:20.160 *******
Monday 20 February 2023  14:04:34 +0200 (0:00:00.057)       0:00:20.217 *******
Monday 20 February 2023  14:04:34 +0200 (0:00:00.055)       0:00:20.273 *******
Monday 20 February 2023  14:04:35 +0200 (0:00:00.895)       0:00:21.168 *******

TASK [kubespray-defaults : Configure defaults] *****************************************************
ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
Monday 20 February 2023  14:04:35 +0200 (0:00:00.074)       0:00:21.242 *******
Monday 20 February 2023  14:04:35 +0200 (0:00:00.125)       0:00:21.368 *******

TASK [kubespray-defaults : create fallback_ips_base] ***********************************************
ok: [node1 -> localhost]
Monday 20 February 2023  14:04:35 +0200 (0:00:00.093)       0:00:21.462 *******

TASK [kubespray-defaults : set fallback_ips] *******************************************************
ok: [node1]
Monday 20 February 2023  14:04:35 +0200 (0:00:00.085)       0:00:21.548 *******
Monday 20 February 2023  14:04:35 +0200 (0:00:00.051)       0:00:21.600 *******
Monday 20 February 2023  14:04:35 +0200 (0:00:00.054)       0:00:21.654 *******
Monday 20 February 2023  14:04:36 +0200 (0:00:00.067)       0:00:21.722 *******

TASK [adduser : User | Create User Group] **********************************************************
changed: [node1]
Monday 20 February 2023  14:04:37 +0200 (0:00:01.623)       0:00:23.346 *******

TASK [adduser : User | Create User] ****************************************************************
changed: [node1]
Monday 20 February 2023  14:04:39 +0200 (0:00:02.050)       0:00:25.396 *******

TASK [kubernetes/preinstall : Remove swapfile from /etc/fstab] *************************************
ok: [node1] => (item=swap)
ok: [node1] => (item=none)
Monday 20 February 2023  14:04:42 +0200 (0:00:02.895)       0:00:28.292 *******

TASK [kubernetes/preinstall : check swap] **********************************************************
ok: [node1]
Monday 20 February 2023  14:04:44 +0200 (0:00:01.597)       0:00:29.889 *******
Monday 20 February 2023  14:04:44 +0200 (0:00:00.047)       0:00:29.937 *******
Monday 20 February 2023  14:04:44 +0200 (0:00:00.047)       0:00:29.984 *******

TASK [kubernetes/preinstall : Stop if either kube_control_plane or kube_node group is empty] *******
ok: [node1] => (item=kube_control_plane) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "kube_control_plane",
    "msg": "All assertions passed"
}
ok: [node1] => (item=kube_node) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "kube_node",
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:44 +0200 (0:00:00.098)       0:00:30.083 *******

TASK [kubernetes/preinstall : Stop if etcd group is empty in external etcd mode] *******************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:44 +0200 (0:00:00.079)       0:00:30.162 *******

TASK [kubernetes/preinstall : Stop if non systemd OS type] *****************************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:44 +0200 (0:00:00.076)       0:00:30.238 *******

TASK [kubernetes/preinstall : Stop if unknown OS] **************************************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:44 +0200 (0:00:00.077)       0:00:30.316 *******

TASK [kubernetes/preinstall : Stop if unknown network plugin] **************************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:44 +0200 (0:00:00.079)       0:00:30.396 *******

TASK [kubernetes/preinstall : Stop if unsupported version of Kubernetes] ***************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:44 +0200 (0:00:00.076)       0:00:30.473 *******

TASK [kubernetes/preinstall : Stop if known booleans are set as strings (Use JSON format on CLI: -e "{'key': true }")] ***
ok: [node1] => (item={'name': 'download_run_once', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "download_run_once",
        "value": false
    },
    "msg": "All assertions passed"
}
ok: [node1] => (item={'name': 'deploy_netchecker', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "deploy_netchecker",
        "value": false
    },
    "msg": "All assertions passed"
}
ok: [node1] => (item={'name': 'download_always_pull', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "download_always_pull",
        "value": false
    },
    "msg": "All assertions passed"
}
ok: [node1] => (item={'name': 'helm_enabled', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "helm_enabled",
        "value": false
    },
    "msg": "All assertions passed"
}
ok: [node1] => (item={'name': 'openstack_lbaas_enabled', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "openstack_lbaas_enabled",
        "value": false
    },
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:44 +0200 (0:00:00.149)       0:00:30.622 *******

TASK [kubernetes/preinstall : Stop if even number of etcd hosts] ***********************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:45 +0200 (0:00:00.080)       0:00:30.703 *******

TASK [kubernetes/preinstall : Stop if memory is too small for masters] *****************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:45 +0200 (0:00:00.077)       0:00:30.780 *******

TASK [kubernetes/preinstall : Stop if memory is too small for nodes] *******************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:45 +0200 (0:00:00.178)       0:00:30.958 *******
Monday 20 February 2023  14:04:45 +0200 (0:00:00.059)       0:00:31.018 *******
Monday 20 February 2023  14:04:45 +0200 (0:00:00.058)       0:00:31.077 *******
Monday 20 February 2023  14:04:45 +0200 (0:00:00.051)       0:00:31.128 *******
Monday 20 February 2023  14:04:45 +0200 (0:00:00.057)       0:00:31.186 *******
Monday 20 February 2023  14:04:45 +0200 (0:00:00.044)       0:00:31.230 *******
Monday 20 February 2023  14:04:45 +0200 (0:00:00.054)       0:00:31.285 *******
Monday 20 February 2023  14:04:45 +0200 (0:00:00.057)       0:00:31.343 *******

TASK [kubernetes/preinstall : Stop if bad hostname] ************************************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:45 +0200 (0:00:00.080)       0:00:31.423 *******
Monday 20 February 2023  14:04:45 +0200 (0:00:00.052)       0:00:31.476 *******

TASK [kubernetes/preinstall : Check that kube_service_addresses is a network range] ****************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:45 +0200 (0:00:00.129)       0:00:31.606 *******

TASK [kubernetes/preinstall : Check that kube_pods_subnet is a network range] **********************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:46 +0200 (0:00:00.130)       0:00:31.737 *******

TASK [kubernetes/preinstall : Check that kube_pods_subnet does not collide with kube_service_addresses] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:46 +0200 (0:00:00.129)       0:00:31.867 *******

TASK [kubernetes/preinstall : Check that IP range is enough for the nodes] *************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:46 +0200 (0:00:00.130)       0:00:31.997 *******

TASK [kubernetes/preinstall : Stop if unknown dns mode] ********************************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:46 +0200 (0:00:00.078)       0:00:32.075 *******

TASK [kubernetes/preinstall : Stop if unknown kube proxy mode] *************************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:46 +0200 (0:00:00.076)       0:00:32.151 *******

TASK [kubernetes/preinstall : Stop if unknown cert_management] *************************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:46 +0200 (0:00:00.075)       0:00:32.227 *******

TASK [kubernetes/preinstall : Stop if unknown resolvconf_mode] *************************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:46 +0200 (0:00:00.077)       0:00:32.304 *******

TASK [kubernetes/preinstall : Stop if etcd deployment type is not host, docker or kubeadm] *********
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:46 +0200 (0:00:00.076)       0:00:32.380 *******

TASK [kubernetes/preinstall : Stop if container manager is not docker, crio or containerd] *********
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:46 +0200 (0:00:00.073)       0:00:32.454 *******

TASK [kubernetes/preinstall : Stop if etcd deployment type is not host or kubeadm when container_manager != docker] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:46 +0200 (0:00:00.138)       0:00:32.593 *******
Monday 20 February 2023  14:04:46 +0200 (0:00:00.051)       0:00:32.645 *******
Monday 20 February 2023  14:04:47 +0200 (0:00:00.054)       0:00:32.699 *******
Monday 20 February 2023  14:04:47 +0200 (0:00:00.044)       0:00:32.744 *******
Monday 20 February 2023  14:04:47 +0200 (0:00:00.046)       0:00:32.790 *******
Monday 20 February 2023  14:04:47 +0200 (0:00:00.045)       0:00:32.836 *******
Monday 20 February 2023  14:04:47 +0200 (0:00:00.044)       0:00:32.881 *******

TASK [kubernetes/preinstall : Ensure minimum containerd version] ***********************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:04:47 +0200 (0:00:00.081)       0:00:32.963 *******
Monday 20 February 2023  14:04:47 +0200 (0:00:00.053)       0:00:33.016 *******
Monday 20 February 2023  14:04:47 +0200 (0:00:00.045)       0:00:33.061 *******
Monday 20 February 2023  14:04:47 +0200 (0:00:00.043)       0:00:33.106 *******
Monday 20 February 2023  14:04:47 +0200 (0:00:00.044)       0:00:33.150 *******

TASK [kubernetes/preinstall : check if booted with ostree] *****************************************
ok: [node1]
Monday 20 February 2023  14:04:49 +0200 (0:00:01.598)       0:00:34.748 *******

TASK [kubernetes/preinstall : set is_fedora_coreos] ************************************************
ok: [node1]
Monday 20 February 2023  14:04:50 +0200 (0:00:01.585)       0:00:36.335 *******

TASK [kubernetes/preinstall : set is_fedora_coreos] ************************************************
ok: [node1]
Monday 20 February 2023  14:04:50 +0200 (0:00:00.072)       0:00:36.407 *******

TASK [kubernetes/preinstall : check resolvconf] ****************************************************
ok: [node1]
Monday 20 February 2023  14:04:52 +0200 (0:00:01.304)       0:00:37.711 *******

TASK [kubernetes/preinstall : check existence of /etc/resolvconf/resolv.conf.d] ********************
ok: [node1]
Monday 20 February 2023  14:04:53 +0200 (0:00:01.282)       0:00:38.993 *******

TASK [kubernetes/preinstall : check status of /etc/resolv.conf] ************************************
ok: [node1]
Monday 20 February 2023  14:04:54 +0200 (0:00:01.491)       0:00:40.485 *******

TASK [kubernetes/preinstall : get content of /etc/resolv.conf] *************************************
ok: [node1]
Monday 20 February 2023  14:04:56 +0200 (0:00:01.411)       0:00:41.896 *******

TASK [kubernetes/preinstall : get currently configured nameservers] ********************************
ok: [node1]
Monday 20 February 2023  14:04:56 +0200 (0:00:00.133)       0:00:42.029 *******

TASK [kubernetes/preinstall : NetworkManager | Check if host has NetworkManager] *******************
ok: [node1]
Monday 20 February 2023  14:04:57 +0200 (0:00:01.266)       0:00:43.296 *******

TASK [kubernetes/preinstall : check systemd-resolved] **********************************************
ok: [node1]
Monday 20 February 2023  14:04:58 +0200 (0:00:01.275)       0:00:44.572 *******

TASK [kubernetes/preinstall : set default dns if remove_default_searchdomains is false] ************
ok: [node1]
Monday 20 February 2023  14:04:58 +0200 (0:00:00.076)       0:00:44.648 *******

TASK [kubernetes/preinstall : set dns facts] *******************************************************
ok: [node1]
Monday 20 February 2023  14:04:59 +0200 (0:00:00.078)       0:00:44.727 *******

TASK [kubernetes/preinstall : check if kubelet is configured] **************************************
ok: [node1]
Monday 20 February 2023  14:05:00 +0200 (0:00:01.301)       0:00:46.028 *******

TASK [kubernetes/preinstall : check if early DNS configuration stage] ******************************
ok: [node1]
Monday 20 February 2023  14:05:00 +0200 (0:00:00.072)       0:00:46.101 *******

TASK [kubernetes/preinstall : target resolv.conf files] ********************************************
ok: [node1]
Monday 20 February 2023  14:05:00 +0200 (0:00:00.079)       0:00:46.180 *******
Monday 20 February 2023  14:05:00 +0200 (0:00:00.044)       0:00:46.225 *******

TASK [kubernetes/preinstall : check if /etc/dhclient.conf exists] **********************************
ok: [node1]
Monday 20 February 2023  14:05:01 +0200 (0:00:01.321)       0:00:47.547 *******
Monday 20 February 2023  14:05:01 +0200 (0:00:00.044)       0:00:47.592 *******

TASK [kubernetes/preinstall : check if /etc/dhcp/dhclient.conf exists] *****************************
ok: [node1]
Monday 20 February 2023  14:05:03 +0200 (0:00:01.293)       0:00:48.885 *******

TASK [kubernetes/preinstall : target dhclient conf file for /etc/dhcp/dhclient.conf] ***************
ok: [node1]
Monday 20 February 2023  14:05:03 +0200 (0:00:00.071)       0:00:48.957 *******
Monday 20 February 2023  14:05:03 +0200 (0:00:00.043)       0:00:49.001 *******

TASK [kubernetes/preinstall : target dhclient hook file for Debian family] *************************
ok: [node1]
Monday 20 February 2023  14:05:03 +0200 (0:00:00.074)       0:00:49.075 *******

TASK [kubernetes/preinstall : generate search domains to resolvconf] *******************************
ok: [node1]
Monday 20 February 2023  14:05:03 +0200 (0:00:00.076)       0:00:49.151 *******

TASK [kubernetes/preinstall : pick coredns cluster IP or default resolver] *************************
ok: [node1]
Monday 20 February 2023  14:05:03 +0200 (0:00:00.240)       0:00:49.392 *******
Monday 20 February 2023  14:05:03 +0200 (0:00:00.047)       0:00:49.439 *******

TASK [kubernetes/preinstall : generate nameservers for resolvconf, not including cluster DNS] ******
ok: [node1]
Monday 20 February 2023  14:05:03 +0200 (0:00:00.077)       0:00:49.517 *******

TASK [kubernetes/preinstall : gather os specific variables] ****************************************
ok: [node1] => (item=/Users/max/DevOps/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml)
Monday 20 February 2023  14:05:03 +0200 (0:00:00.090)       0:00:49.607 *******
Monday 20 February 2023  14:05:03 +0200 (0:00:00.044)       0:00:49.652 *******

TASK [kubernetes/preinstall : check /usr readonly] *************************************************
ok: [node1]
Monday 20 February 2023  14:05:05 +0200 (0:00:01.323)       0:00:50.975 *******
Monday 20 February 2023  14:05:05 +0200 (0:00:00.044)       0:00:51.020 *******
Monday 20 February 2023  14:05:05 +0200 (0:00:00.043)       0:00:51.063 *******
Monday 20 February 2023  14:05:05 +0200 (0:00:00.046)       0:00:51.110 *******

TASK [kubernetes/preinstall : Create kubernetes directories] ***************************************
changed: [node1] => (item=/etc/kubernetes)
changed: [node1] => (item=/etc/kubernetes/ssl)
changed: [node1] => (item=/etc/kubernetes/manifests)
changed: [node1] => (item=/usr/local/bin/kubernetes-scripts)
changed: [node1] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)
Monday 20 February 2023  14:05:11 +0200 (0:00:06.278)       0:00:57.388 *******

TASK [kubernetes/preinstall : Create other directories] ********************************************
ok: [node1] => (item=/usr/local/bin)
Monday 20 February 2023  14:05:13 +0200 (0:00:01.340)       0:00:58.729 *******

TASK [kubernetes/preinstall : Check if kubernetes kubeadm compat cert dir exists] ******************
ok: [node1]
Monday 20 February 2023  14:05:14 +0200 (0:00:01.314)       0:01:00.044 *******

TASK [kubernetes/preinstall : Create kubernetes kubeadm compat cert dir (kubernetes/kubeadm issue 1498)] ***
changed: [node1]
Monday 20 February 2023  14:05:15 +0200 (0:00:01.316)       0:01:01.360 *******

TASK [kubernetes/preinstall : Create cni directories] **********************************************
changed: [node1] => (item=/etc/cni/net.d)
changed: [node1] => (item=/opt/cni/bin)
changed: [node1] => (item=/var/lib/calico)
Monday 20 February 2023  14:05:19 +0200 (0:00:03.804)       0:01:05.164 *******
Monday 20 February 2023  14:05:19 +0200 (0:00:00.066)       0:01:05.231 *******
Monday 20 February 2023  14:05:19 +0200 (0:00:00.107)       0:01:05.338 *******
Monday 20 February 2023  14:05:19 +0200 (0:00:00.048)       0:01:05.387 *******
Monday 20 February 2023  14:05:19 +0200 (0:00:00.093)       0:01:05.481 *******
Monday 20 February 2023  14:05:19 +0200 (0:00:00.086)       0:01:05.567 *******
Monday 20 February 2023  14:05:19 +0200 (0:00:00.051)       0:01:05.618 *******
Monday 20 February 2023  14:05:19 +0200 (0:00:00.049)       0:01:05.667 *******

TASK [kubernetes/preinstall : Write resolved.conf] *************************************************
changed: [node1]
Monday 20 February 2023  14:05:22 +0200 (0:00:02.921)       0:01:08.589 *******
Monday 20 February 2023  14:05:22 +0200 (0:00:00.045)       0:01:08.635 *******
Monday 20 February 2023  14:05:23 +0200 (0:00:00.046)       0:01:08.682 *******
Monday 20 February 2023  14:05:23 +0200 (0:00:00.044)       0:01:08.726 *******
Monday 20 February 2023  14:05:23 +0200 (0:00:00.048)       0:01:08.774 *******
Monday 20 February 2023  14:05:23 +0200 (0:00:00.050)       0:01:08.825 *******
Monday 20 February 2023  14:05:23 +0200 (0:00:00.047)       0:01:08.873 *******
Monday 20 February 2023  14:05:23 +0200 (0:00:00.049)       0:01:08.922 *******
Monday 20 February 2023  14:05:23 +0200 (0:00:00.045)       0:01:08.967 *******

TASK [kubernetes/preinstall : Update package management cache (APT)] *******************************
changed: [node1]
Monday 20 February 2023  14:05:34 +0200 (0:00:11.227)       0:01:20.195 *******
Monday 20 February 2023  14:05:34 +0200 (0:00:00.050)       0:01:20.245 *******
Monday 20 February 2023  14:05:34 +0200 (0:00:00.052)       0:01:20.298 *******
Monday 20 February 2023  14:05:34 +0200 (0:00:00.045)       0:01:20.343 *******

TASK [kubernetes/preinstall : Update common_required_pkgs with ipvsadm when kube_proxy_mode is ipvs] ***
ok: [node1]
Monday 20 February 2023  14:05:34 +0200 (0:00:00.081)       0:01:20.424 *******

TASK [kubernetes/preinstall : Install packages requirements] ***************************************
changed: [node1]
Monday 20 February 2023  14:05:43 +0200 (0:00:08.766)       0:01:29.191 *******
Monday 20 February 2023  14:05:43 +0200 (0:00:00.110)       0:01:29.301 *******
Monday 20 February 2023  14:05:43 +0200 (0:00:00.045)       0:01:29.347 *******
Monday 20 February 2023  14:05:43 +0200 (0:00:00.047)       0:01:29.394 *******
Monday 20 February 2023  14:05:43 +0200 (0:00:00.044)       0:01:29.439 *******

TASK [kubernetes/preinstall : Clean previously used sysctl file locations] *************************
ok: [node1] => (item=ipv4-ip_forward.conf)
ok: [node1] => (item=bridge-nf-call.conf)
Monday 20 February 2023  14:05:46 +0200 (0:00:03.018)       0:01:32.458 *******

TASK [kubernetes/preinstall : Stat sysctl file configuration] **************************************
ok: [node1]
Monday 20 February 2023  14:05:48 +0200 (0:00:01.278)       0:01:33.736 *******

TASK [kubernetes/preinstall : Change sysctl file path to link source if linked] ********************
ok: [node1]
Monday 20 February 2023  14:05:48 +0200 (0:00:00.081)       0:01:33.817 *******

TASK [kubernetes/preinstall : Make sure sysctl file path folder exists] ****************************
ok: [node1]
Monday 20 February 2023  14:05:49 +0200 (0:00:01.362)       0:01:35.180 *******

TASK [kubernetes/preinstall : Enable ip forwarding] ************************************************
changed: [node1]
Monday 20 February 2023  14:05:51 +0200 (0:00:02.256)       0:01:37.436 *******
Monday 20 February 2023  14:05:51 +0200 (0:00:00.059)       0:01:37.496 *******

TASK [kubernetes/preinstall : Check if we need to set fs.may_detach_mounts] ************************
ok: [node1]
Monday 20 February 2023  14:05:53 +0200 (0:00:01.323)       0:01:38.819 *******
Monday 20 February 2023  14:05:53 +0200 (0:00:00.059)       0:01:38.879 *******

TASK [kubernetes/preinstall : Ensure kube-bench parameters are set] ********************************
changed: [node1] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000})
changed: [node1] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000})
changed: [node1] => (item={'name': 'kernel.panic', 'value': 10})
changed: [node1] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
changed: [node1] => (item={'name': 'vm.overcommit_memory', 'value': 1})
changed: [node1] => (item={'name': 'vm.panic_on_oom', 'value': 0})
Monday 20 February 2023  14:06:01 +0200 (0:00:07.996)       0:01:46.876 *******

TASK [kubernetes/preinstall : Check dummy module] **************************************************
changed: [node1]
Monday 20 February 2023  14:06:02 +0200 (0:00:01.559)       0:01:48.436 *******
Monday 20 February 2023  14:06:02 +0200 (0:00:00.047)       0:01:48.483 *******
Monday 20 February 2023  14:06:02 +0200 (0:00:00.046)       0:01:48.529 *******
Monday 20 February 2023  14:06:02 +0200 (0:00:00.108)       0:01:48.638 *******
Monday 20 February 2023  14:06:03 +0200 (0:00:00.045)       0:01:48.683 *******
Monday 20 February 2023  14:06:03 +0200 (0:00:00.047)       0:01:48.731 *******
Monday 20 February 2023  14:06:03 +0200 (0:00:00.045)       0:01:48.777 *******
Monday 20 February 2023  14:06:03 +0200 (0:00:00.045)       0:01:48.822 *******
Monday 20 February 2023  14:06:03 +0200 (0:00:00.047)       0:01:48.870 *******
Monday 20 February 2023  14:06:03 +0200 (0:00:00.051)       0:01:48.922 *******

TASK [kubernetes/preinstall : Hosts | create list from inventory] **********************************
ok: [node1 -> localhost]
Monday 20 February 2023  14:06:03 +0200 (0:00:00.208)       0:01:49.130 *******

TASK [kubernetes/preinstall : Hosts | populate inventory into hosts file] **************************
changed: [node1]
Monday 20 February 2023  14:06:04 +0200 (0:00:01.503)       0:01:50.634 *******
Monday 20 February 2023  14:06:05 +0200 (0:00:00.054)       0:01:50.689 *******

TASK [kubernetes/preinstall : Hosts | Retrieve hosts file content] *********************************
ok: [node1]
Monday 20 February 2023  14:06:06 +0200 (0:00:01.257)       0:01:51.946 *******

TASK [kubernetes/preinstall : Hosts | Extract existing entries for localhost from hosts file] ******
ok: [node1] => (item=127.0.0.1 localhost)
ok: [node1] => (item=::1 ip6-localhost ip6-loopback)
Monday 20 February 2023  14:06:06 +0200 (0:00:00.195)       0:01:52.142 *******

TASK [kubernetes/preinstall : Hosts | Update target hosts file entries dict with required entries] ***
ok: [node1] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [node1] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})
Monday 20 February 2023  14:06:06 +0200 (0:00:00.098)       0:01:52.240 *******

TASK [kubernetes/preinstall : Hosts | Update (if necessary) hosts file] ****************************
changed: [node1] => (item={'key': '127.0.0.1', 'value': ['localhost', 'localhost.localdomain']})
changed: [node1] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']})
Monday 20 February 2023  14:06:09 +0200 (0:00:02.545)       0:01:54.785 *******

TASK [kubernetes/preinstall : Update facts] ********************************************************
ok: [node1]
Monday 20 February 2023  14:06:11 +0200 (0:00:02.216)       0:01:57.002 *******

TASK [kubernetes/preinstall : Configure dhclient to supersede search/domain/nameservers] ***********
changed: [node1]
Monday 20 February 2023  14:06:12 +0200 (0:00:01.322)       0:01:58.324 *******

TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (non-RH)] *******************
changed: [node1]
Monday 20 February 2023  14:06:15 +0200 (0:00:02.786)       0:02:01.111 *******
Monday 20 February 2023  14:06:15 +0200 (0:00:00.063)       0:02:01.175 *******
Monday 20 February 2023  14:06:15 +0200 (0:00:00.047)       0:02:01.222 *******
Monday 20 February 2023  14:06:15 +0200 (0:00:00.046)       0:02:01.269 *******
Monday 20 February 2023  14:06:15 +0200 (0:00:00.000)       0:02:01.269 *******

RUNNING HANDLER [kubernetes/preinstall : Preinstall | propagate resolvconf to k8s components] ******
changed: [node1]
Monday 20 February 2023  14:06:16 +0200 (0:00:01.361)       0:02:02.631 *******
Monday 20 February 2023  14:06:17 +0200 (0:00:00.054)       0:02:02.686 *******

RUNNING HANDLER [kubernetes/preinstall : Preinstall | kube-apiserver configured] *******************
ok: [node1]
Monday 20 February 2023  14:06:18 +0200 (0:00:01.280)       0:02:03.966 *******

RUNNING HANDLER [kubernetes/preinstall : Preinstall | kube-controller configured] ******************
ok: [node1]
Monday 20 February 2023  14:06:19 +0200 (0:00:01.260)       0:02:05.227 *******
Monday 20 February 2023  14:06:19 +0200 (0:00:00.043)       0:02:05.270 *******
Monday 20 February 2023  14:06:19 +0200 (0:00:00.051)       0:02:05.322 *******
Monday 20 February 2023  14:06:19 +0200 (0:00:00.043)       0:02:05.366 *******

RUNNING HANDLER [kubernetes/preinstall : Preinstall | restart kube-apiserver crio/containerd] ******
changed: [node1]
Monday 20 February 2023  14:06:20 +0200 (0:00:01.274)       0:02:06.641 *******
Monday 20 February 2023  14:06:21 +0200 (0:00:00.044)       0:02:06.685 *******

RUNNING HANDLER [kubernetes/preinstall : Preinstall | Restart systemd-resolved] ********************
changed: [node1]
Monday 20 February 2023  14:06:23 +0200 (0:00:02.078)       0:02:08.764 *******

TASK [kubernetes/preinstall : Check if we are running inside a Azure VM] ***************************
ok: [node1]
Monday 20 February 2023  14:06:24 +0200 (0:00:01.341)       0:02:10.106 *******
Monday 20 February 2023  14:06:24 +0200 (0:00:00.107)       0:02:10.213 *******
Monday 20 February 2023  14:06:24 +0200 (0:00:00.045)       0:02:10.259 *******
Monday 20 February 2023  14:06:24 +0200 (0:00:00.048)       0:02:10.307 *******
Monday 20 February 2023  14:06:24 +0200 (0:00:00.047)       0:02:10.355 *******
Monday 20 February 2023  14:06:24 +0200 (0:00:00.047)       0:02:10.403 *******
Monday 20 February 2023  14:06:24 +0200 (0:00:00.045)       0:02:10.449 *******
Monday 20 February 2023  14:06:24 +0200 (0:00:00.045)       0:02:10.494 *******

TASK [Run calico checks] ***************************************************************************
Monday 20 February 2023  14:06:25 +0200 (0:00:00.221)       0:02:10.716 *******

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip)] **********
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:06:25 +0200 (0:00:00.096)       0:02:10.812 *******

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip_mode)] *****
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:06:25 +0200 (0:00:00.097)       0:02:10.910 *******

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (calcio_ipam_autoallocateblocks)] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:06:25 +0200 (0:00:00.097)       0:02:11.007 *******
Monday 20 February 2023  14:06:25 +0200 (0:00:00.073)       0:02:11.080 *******

TASK [network_plugin/calico : Stop if supported Calico versions] ***********************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:06:25 +0200 (0:00:00.098)       0:02:11.179 *******
ASYNC FAILED on node1: jid=129718516473.4536

TASK [network_plugin/calico : Get current calico cluster version] **********************************
ok: [node1]
Monday 20 February 2023  14:06:31 +0200 (0:00:06.157)       0:02:17.337 *******
Monday 20 February 2023  14:06:31 +0200 (0:00:00.077)       0:02:17.414 *******
Monday 20 February 2023  14:06:31 +0200 (0:00:00.079)       0:02:17.494 *******
Monday 20 February 2023  14:06:31 +0200 (0:00:00.066)       0:02:17.560 *******

TASK [network_plugin/calico : Check vars defined correctly] ****************************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:06:31 +0200 (0:00:00.099)       0:02:17.659 *******

TASK [network_plugin/calico : Check calico network backend defined correctly] **********************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:06:32 +0200 (0:00:00.095)       0:02:17.754 *******

TASK [network_plugin/calico : Check ipip and vxlan mode defined correctly] *************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:06:32 +0200 (0:00:00.101)       0:02:17.856 *******
Monday 20 February 2023  14:06:32 +0200 (0:00:00.134)       0:02:17.990 *******

TASK [network_plugin/calico : Check ipip and vxlan mode if simultaneously enabled] *****************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:06:32 +0200 (0:00:00.099)       0:02:18.090 *******

TASK [network_plugin/calico : Get Calico default-pool configuration] *******************************
ok: [node1]
Monday 20 February 2023  14:06:32 +0200 (0:00:00.452)       0:02:18.543 *******
Monday 20 February 2023  14:06:32 +0200 (0:00:00.067)       0:02:18.610 *******
Monday 20 February 2023  14:06:33 +0200 (0:00:00.073)       0:02:18.683 *******
Monday 20 February 2023  14:06:33 +0200 (0:00:00.065)       0:02:18.749 *******
Monday 20 February 2023  14:06:33 +0200 (0:00:00.065)       0:02:18.815 *******
Monday 20 February 2023  14:06:33 +0200 (0:00:00.085)       0:02:18.900 *******

TASK [container-engine/validate-container-engine : validate-container-engine | check if fedora coreos] ***
ok: [node1]
Monday 20 February 2023  14:06:34 +0200 (0:00:01.320)       0:02:20.221 *******

TASK [container-engine/validate-container-engine : validate-container-engine | set is_ostree] ******
ok: [node1]
Monday 20 February 2023  14:06:34 +0200 (0:00:00.075)       0:02:20.296 *******

TASK [container-engine/validate-container-engine : Ensure kubelet systemd unit exists] *************
ok: [node1]
Monday 20 February 2023  14:06:35 +0200 (0:00:01.268)       0:02:21.564 *******

TASK [container-engine/validate-container-engine : Populate service facts] *************************
ok: [node1]
Monday 20 February 2023  14:06:40 +0200 (0:00:04.674)       0:02:26.239 *******

TASK [container-engine/validate-container-engine : Check if containerd is installed] ***************
ok: [node1]
Monday 20 February 2023  14:06:42 +0200 (0:00:01.560)       0:02:27.800 *******

TASK [container-engine/validate-container-engine : Check if docker is installed] *******************
ok: [node1]
Monday 20 February 2023  14:06:43 +0200 (0:00:01.274)       0:02:29.074 *******

TASK [container-engine/validate-container-engine : Check if crio is installed] *********************
ok: [node1]
Monday 20 February 2023  14:06:44 +0200 (0:00:01.289)       0:02:30.363 *******
Monday 20 February 2023  14:06:44 +0200 (0:00:00.046)       0:02:30.410 *******
Monday 20 February 2023  14:06:44 +0200 (0:00:00.045)       0:02:30.456 *******
Monday 20 February 2023  14:06:44 +0200 (0:00:00.049)       0:02:30.506 *******
Monday 20 February 2023  14:06:44 +0200 (0:00:00.047)       0:02:30.553 *******
Monday 20 February 2023  14:06:44 +0200 (0:00:00.096)       0:02:30.650 *******
Monday 20 February 2023  14:06:45 +0200 (0:00:00.047)       0:02:30.697 *******
Monday 20 February 2023  14:06:45 +0200 (0:00:00.045)       0:02:30.743 *******
Monday 20 February 2023  14:06:45 +0200 (0:00:00.048)       0:02:30.791 *******
Monday 20 February 2023  14:06:45 +0200 (0:00:00.047)       0:02:30.838 *******
Monday 20 February 2023  14:06:45 +0200 (0:00:00.047)       0:02:30.886 *******
Monday 20 February 2023  14:06:45 +0200 (0:00:00.060)       0:02:30.946 *******
Monday 20 February 2023  14:06:45 +0200 (0:00:00.061)       0:02:31.007 *******
Monday 20 February 2023  14:06:45 +0200 (0:00:00.048)       0:02:31.056 *******
Monday 20 February 2023  14:06:45 +0200 (0:00:00.048)       0:02:31.104 *******
Monday 20 February 2023  14:06:45 +0200 (0:00:00.046)       0:02:31.151 *******
Monday 20 February 2023  14:06:45 +0200 (0:00:00.061)       0:02:31.212 *******
Monday 20 February 2023  14:06:45 +0200 (0:00:00.045)       0:02:31.258 *******
Monday 20 February 2023  14:06:45 +0200 (0:00:00.055)       0:02:31.313 *******
Monday 20 February 2023  14:06:45 +0200 (0:00:00.046)       0:02:31.360 *******
Monday 20 February 2023  14:06:45 +0200 (0:00:00.102)       0:02:31.462 *******
Monday 20 February 2023  14:06:45 +0200 (0:00:00.047)       0:02:31.510 *******
Monday 20 February 2023  14:06:45 +0200 (0:00:00.049)       0:02:31.559 *******
Monday 20 February 2023  14:06:45 +0200 (0:00:00.051)       0:02:31.610 *******
Monday 20 February 2023  14:06:45 +0200 (0:00:00.048)       0:02:31.659 *******
Monday 20 February 2023  14:06:46 +0200 (0:00:00.097)       0:02:31.756 *******
Monday 20 February 2023  14:06:46 +0200 (0:00:00.056)       0:02:31.813 *******
Monday 20 February 2023  14:06:46 +0200 (0:00:00.045)       0:02:31.858 *******
Monday 20 February 2023  14:06:46 +0200 (0:00:00.045)       0:02:31.904 *******
Monday 20 February 2023  14:06:46 +0200 (0:00:00.044)       0:02:31.948 *******
Monday 20 February 2023  14:06:46 +0200 (0:00:00.044)       0:02:31.993 *******
Monday 20 February 2023  14:06:46 +0200 (0:00:00.058)       0:02:32.051 *******
Monday 20 February 2023  14:06:46 +0200 (0:00:00.047)       0:02:32.099 *******
Monday 20 February 2023  14:06:46 +0200 (0:00:00.048)       0:02:32.148 *******
Monday 20 February 2023  14:06:46 +0200 (0:00:00.052)       0:02:32.200 *******
Monday 20 February 2023  14:06:46 +0200 (0:00:00.048)       0:02:32.249 *******
Monday 20 February 2023  14:06:46 +0200 (0:00:00.073)       0:02:32.322 *******
Monday 20 February 2023  14:06:46 +0200 (0:00:00.050)       0:02:32.373 *******
Monday 20 February 2023  14:06:46 +0200 (0:00:00.050)       0:02:32.423 *******
Monday 20 February 2023  14:06:46 +0200 (0:00:00.057)       0:02:32.481 *******
Monday 20 February 2023  14:06:46 +0200 (0:00:00.049)       0:02:32.530 *******
Monday 20 February 2023  14:06:46 +0200 (0:00:00.048)       0:02:32.579 *******
Monday 20 February 2023  14:06:47 +0200 (0:00:00.116)       0:02:32.696 *******
Monday 20 February 2023  14:06:47 +0200 (0:00:00.063)       0:02:32.760 *******
Monday 20 February 2023  14:06:47 +0200 (0:00:00.051)       0:02:32.811 *******
Monday 20 February 2023  14:06:47 +0200 (0:00:00.048)       0:02:32.860 *******
Monday 20 February 2023  14:06:47 +0200 (0:00:00.063)       0:02:32.923 *******
Monday 20 February 2023  14:06:47 +0200 (0:00:00.048)       0:02:32.972 *******
Monday 20 February 2023  14:06:47 +0200 (0:00:00.048)       0:02:33.021 *******
Monday 20 February 2023  14:06:47 +0200 (0:00:00.051)       0:02:33.072 *******
Monday 20 February 2023  14:06:47 +0200 (0:00:00.049)       0:02:33.122 *******
Monday 20 February 2023  14:06:47 +0200 (0:00:00.050)       0:02:33.173 *******
Monday 20 February 2023  14:06:47 +0200 (0:00:00.062)       0:02:33.236 *******
Monday 20 February 2023  14:06:47 +0200 (0:00:00.066)       0:02:33.303 *******
Monday 20 February 2023  14:06:47 +0200 (0:00:00.049)       0:02:33.353 *******
Monday 20 February 2023  14:06:47 +0200 (0:00:00.078)       0:02:33.431 *******
Monday 20 February 2023  14:06:47 +0200 (0:00:00.049)       0:02:33.481 *******
Monday 20 February 2023  14:06:47 +0200 (0:00:00.077)       0:02:33.559 *******
Monday 20 February 2023  14:06:47 +0200 (0:00:00.043)       0:02:33.602 *******
Monday 20 February 2023  14:06:47 +0200 (0:00:00.045)       0:02:33.648 *******
Monday 20 February 2023  14:06:48 +0200 (0:00:00.042)       0:02:33.690 *******
Monday 20 February 2023  14:06:48 +0200 (0:00:00.047)       0:02:33.738 *******
Monday 20 February 2023  14:06:48 +0200 (0:00:00.047)       0:02:33.786 *******
Monday 20 February 2023  14:06:48 +0200 (0:00:00.055)       0:02:33.841 *******
Monday 20 February 2023  14:06:48 +0200 (0:00:00.056)       0:02:33.898 *******
Monday 20 February 2023  14:06:48 +0200 (0:00:00.046)       0:02:33.945 *******
Monday 20 February 2023  14:06:48 +0200 (0:00:00.043)       0:02:33.988 *******
Monday 20 February 2023  14:06:48 +0200 (0:00:00.069)       0:02:34.058 *******
Monday 20 February 2023  14:06:48 +0200 (0:00:00.043)       0:02:34.101 *******
Monday 20 February 2023  14:06:48 +0200 (0:00:00.057)       0:02:34.158 *******
Monday 20 February 2023  14:06:48 +0200 (0:00:00.046)       0:02:34.205 *******
Monday 20 February 2023  14:06:48 +0200 (0:00:00.057)       0:02:34.263 *******
Monday 20 February 2023  14:06:48 +0200 (0:00:00.057)       0:02:34.320 *******
Monday 20 February 2023  14:06:48 +0200 (0:00:00.043)       0:02:34.363 *******
Monday 20 February 2023  14:06:48 +0200 (0:00:00.043)       0:02:34.407 *******
Monday 20 February 2023  14:06:48 +0200 (0:00:00.046)       0:02:34.454 *******
Monday 20 February 2023  14:06:48 +0200 (0:00:00.071)       0:02:34.525 *******
Monday 20 February 2023  14:06:48 +0200 (0:00:00.043)       0:02:34.569 *******
Monday 20 February 2023  14:06:48 +0200 (0:00:00.043)       0:02:34.613 *******
Monday 20 February 2023  14:06:48 +0200 (0:00:00.043)       0:02:34.656 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.046)       0:02:34.703 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.043)       0:02:34.747 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.044)       0:02:34.791 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.044)       0:02:34.836 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.044)       0:02:34.880 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.043)       0:02:34.924 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.047)       0:02:34.971 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.045)       0:02:35.017 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.043)       0:02:35.060 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.045)       0:02:35.106 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.044)       0:02:35.151 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.044)       0:02:35.195 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.046)       0:02:35.242 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.053)       0:02:35.296 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.043)       0:02:35.340 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.043)       0:02:35.383 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.042)       0:02:35.426 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.044)       0:02:35.470 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.064)       0:02:35.534 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.043)       0:02:35.578 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.043)       0:02:35.621 *******
Monday 20 February 2023  14:06:49 +0200 (0:00:00.043)       0:02:35.664 *******
Monday 20 February 2023  14:06:50 +0200 (0:00:00.042)       0:02:35.708 *******
Monday 20 February 2023  14:06:50 +0200 (0:00:00.045)       0:02:35.753 *******
Monday 20 February 2023  14:06:50 +0200 (0:00:00.047)       0:02:35.801 *******
Monday 20 February 2023  14:06:50 +0200 (0:00:00.044)       0:02:35.845 *******
Monday 20 February 2023  14:06:50 +0200 (0:00:00.044)       0:02:35.889 *******
Monday 20 February 2023  14:06:50 +0200 (0:00:00.044)       0:02:35.933 *******
Monday 20 February 2023  14:06:50 +0200 (0:00:00.043)       0:02:35.977 *******
Monday 20 February 2023  14:06:50 +0200 (0:00:00.053)       0:02:36.030 *******
Monday 20 February 2023  14:06:50 +0200 (0:00:00.046)       0:02:36.077 *******
Monday 20 February 2023  14:06:50 +0200 (0:00:00.043)       0:02:36.120 *******
Monday 20 February 2023  14:06:50 +0200 (0:00:00.043)       0:02:36.164 *******
Monday 20 February 2023  14:06:50 +0200 (0:00:00.042)       0:02:36.206 *******
Monday 20 February 2023  14:06:50 +0200 (0:00:00.036)       0:02:36.243 *******
Monday 20 February 2023  14:06:50 +0200 (0:00:00.043)       0:02:36.286 *******
Monday 20 February 2023  14:06:50 +0200 (0:00:00.046)       0:02:36.332 *******
Monday 20 February 2023  14:06:50 +0200 (0:00:00.055)       0:02:36.388 *******
Monday 20 February 2023  14:06:50 +0200 (0:00:00.043)       0:02:36.432 *******
Monday 20 February 2023  14:06:50 +0200 (0:00:00.042)       0:02:36.474 *******
Monday 20 February 2023  14:06:50 +0200 (0:00:00.057)       0:02:36.532 *******

TASK [container-engine/containerd-common : containerd-common | check if fedora coreos] *************
ok: [node1]
Monday 20 February 2023  14:06:52 +0200 (0:00:01.275)       0:02:37.808 *******

TASK [container-engine/containerd-common : containerd-common | set is_ostree] **********************
ok: [node1]
Monday 20 February 2023  14:06:52 +0200 (0:00:00.073)       0:02:37.882 *******

TASK [container-engine/containerd-common : containerd-common | gather os specific variables] *******
ok: [node1] => (item=/Users/max/DevOps/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml)
Monday 20 February 2023  14:06:52 +0200 (0:00:00.117)       0:02:37.999 *******

TASK [container-engine/runc : runc | check if fedora coreos] ***************************************
ok: [node1]
Monday 20 February 2023  14:06:53 +0200 (0:00:01.280)       0:02:39.280 *******

TASK [container-engine/runc : runc | set is_ostree] ************************************************
ok: [node1]
Monday 20 February 2023  14:06:53 +0200 (0:00:00.073)       0:02:39.353 *******

TASK [container-engine/runc : runc | Uninstall runc package managed by package manager] ************
ok: [node1]
Monday 20 February 2023  14:06:55 +0200 (0:00:01.968)       0:02:41.322 *******

TASK [container-engine/runc : runc | Download runc binary] *****************************************
included: /Users/max/DevOps/kubespray/roles/container-engine/runc/tasks/../../../download/tasks/download_file.yml for node1
Monday 20 February 2023  14:06:55 +0200 (0:00:00.078)       0:02:41.401 *******

TASK [container-engine/runc : prep_download | Set a few facts] *************************************
ok: [node1]
Monday 20 February 2023  14:06:55 +0200 (0:00:00.078)       0:02:41.480 *******

TASK [container-engine/runc : download_file | Starting download of file] ***************************
ok: [node1] => {
    "msg": "https://github.com/opencontainers/runc/releases/download/v1.1.4/runc.amd64"
}
Monday 20 February 2023  14:06:56 +0200 (0:00:00.655)       0:02:42.135 *******

TASK [container-engine/runc : download_file | Set pathname of cached file] *************************
ok: [node1]
Monday 20 February 2023  14:06:56 +0200 (0:00:00.533)       0:02:42.669 *******

TASK [container-engine/runc : download_file | Create dest directory on node] ***********************
changed: [node1]
Monday 20 February 2023  14:06:58 +0200 (0:00:01.916)       0:02:44.585 *******
Monday 20 February 2023  14:06:58 +0200 (0:00:00.065)       0:02:44.651 *******
Monday 20 February 2023  14:06:59 +0200 (0:00:00.545)       0:02:45.196 *******

TASK [container-engine/runc : download_file | Validate mirrors] ************************************
ok: [node1] => (item=None)
ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
Monday 20 February 2023  14:07:01 +0200 (0:00:02.458)       0:02:47.655 *******

TASK [container-engine/runc : download_file | Get the list of working mirrors] *********************
ok: [node1]
Monday 20 February 2023  14:07:02 +0200 (0:00:00.090)       0:02:47.746 *******

TASK [container-engine/runc : download_file | Download item] ***************************************
changed: [node1]
Monday 20 February 2023  14:07:04 +0200 (0:00:02.826)       0:02:50.573 *******
Monday 20 February 2023  14:07:04 +0200 (0:00:00.051)       0:02:50.624 *******
Monday 20 February 2023  14:07:05 +0200 (0:00:00.051)       0:02:50.676 *******
Monday 20 February 2023  14:07:05 +0200 (0:00:00.052)       0:02:50.728 *******

TASK [container-engine/runc : download_file | Extract file archives] *******************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/extract_file.yml for node1
Monday 20 February 2023  14:07:05 +0200 (0:00:00.073)       0:02:50.801 *******
Monday 20 February 2023  14:07:05 +0200 (0:00:00.522)       0:02:51.324 *******

TASK [container-engine/runc : Copy runc binary from download dir] **********************************
changed: [node1]
Monday 20 February 2023  14:07:08 +0200 (0:00:02.487)       0:02:53.812 *******

TASK [container-engine/runc : runc | Remove orphaned binary] ***************************************
ok: [node1]
Monday 20 February 2023  14:07:09 +0200 (0:00:01.258)       0:02:55.070 *******

TASK [container-engine/crictl : install crictĺ] ****************************************************
included: /Users/max/DevOps/kubespray/roles/container-engine/crictl/tasks/crictl.yml for node1
Monday 20 February 2023  14:07:09 +0200 (0:00:00.068)       0:02:55.138 *******

TASK [container-engine/crictl : crictl | Download crictl] ******************************************
included: /Users/max/DevOps/kubespray/roles/container-engine/crictl/tasks/../../../download/tasks/download_file.yml for node1
Monday 20 February 2023  14:07:09 +0200 (0:00:00.084)       0:02:55.223 *******

TASK [container-engine/crictl : prep_download | Set a few facts] ***********************************
ok: [node1]
Monday 20 February 2023  14:07:09 +0200 (0:00:00.071)       0:02:55.294 *******

TASK [container-engine/crictl : download_file | Starting download of file] *************************
ok: [node1] => {
    "msg": "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.24.0/crictl-v1.24.0-linux-amd64.tar.gz"
}
Monday 20 February 2023  14:07:10 +0200 (0:00:00.537)       0:02:55.832 *******

TASK [container-engine/crictl : download_file | Set pathname of cached file] ***********************
ok: [node1]
Monday 20 February 2023  14:07:10 +0200 (0:00:00.532)       0:02:56.364 *******

TASK [container-engine/crictl : download_file | Create dest directory on node] *********************
ok: [node1]
Monday 20 February 2023  14:07:12 +0200 (0:00:01.882)       0:02:58.246 *******
Monday 20 February 2023  14:07:12 +0200 (0:00:00.074)       0:02:58.321 *******
Monday 20 February 2023  14:07:13 +0200 (0:00:00.530)       0:02:58.851 *******

TASK [container-engine/crictl : download_file | Validate mirrors] **********************************
ok: [node1] => (item=None)
ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
Monday 20 February 2023  14:07:15 +0200 (0:00:02.196)       0:03:01.047 *******

TASK [container-engine/crictl : download_file | Get the list of working mirrors] *******************
ok: [node1]
Monday 20 February 2023  14:07:15 +0200 (0:00:00.095)       0:03:01.143 *******

TASK [container-engine/crictl : download_file | Download item] *************************************
changed: [node1]
Monday 20 February 2023  14:07:17 +0200 (0:00:02.496)       0:03:03.640 *******
Monday 20 February 2023  14:07:18 +0200 (0:00:00.055)       0:03:03.696 *******
Monday 20 February 2023  14:07:18 +0200 (0:00:00.054)       0:03:03.751 *******
Monday 20 February 2023  14:07:18 +0200 (0:00:00.054)       0:03:03.806 *******

TASK [container-engine/crictl : download_file | Extract file archives] *****************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/extract_file.yml for node1
Monday 20 February 2023  14:07:18 +0200 (0:00:00.079)       0:03:03.885 *******

TASK [container-engine/crictl : extract_file | Unpacking archive] **********************************
changed: [node1]
Monday 20 February 2023  14:07:23 +0200 (0:00:05.081)       0:03:08.967 *******

TASK [container-engine/crictl : Install crictl config] *********************************************
changed: [node1]
Monday 20 February 2023  14:07:26 +0200 (0:00:02.964)       0:03:11.932 *******

TASK [container-engine/crictl : Copy crictl binary from download dir] ******************************
changed: [node1]
Monday 20 February 2023  14:07:27 +0200 (0:00:01.650)       0:03:13.583 *******

TASK [container-engine/nerdctl : nerdctl | Download nerdctl] ***************************************
included: /Users/max/DevOps/kubespray/roles/container-engine/nerdctl/tasks/../../../download/tasks/download_file.yml for node1
Monday 20 February 2023  14:07:27 +0200 (0:00:00.074)       0:03:13.658 *******

TASK [container-engine/nerdctl : prep_download | Set a few facts] **********************************
ok: [node1]
Monday 20 February 2023  14:07:28 +0200 (0:00:00.068)       0:03:13.726 *******

TASK [container-engine/nerdctl : download_file | Starting download of file] ************************
ok: [node1] => {
    "msg": "https://github.com/containerd/nerdctl/releases/download/v0.22.2/nerdctl-0.22.2-linux-amd64.tar.gz"
}
Monday 20 February 2023  14:07:28 +0200 (0:00:00.526)       0:03:14.253 *******

TASK [container-engine/nerdctl : download_file | Set pathname of cached file] **********************
ok: [node1]
Monday 20 February 2023  14:07:29 +0200 (0:00:00.526)       0:03:14.779 *******

TASK [container-engine/nerdctl : download_file | Create dest directory on node] ********************
ok: [node1]
Monday 20 February 2023  14:07:31 +0200 (0:00:02.004)       0:03:16.784 *******
Monday 20 February 2023  14:07:31 +0200 (0:00:00.068)       0:03:16.853 *******
Monday 20 February 2023  14:07:31 +0200 (0:00:00.525)       0:03:17.378 *******

TASK [container-engine/nerdctl : download_file | Validate mirrors] *********************************
ok: [node1] => (item=None)
ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
Monday 20 February 2023  14:07:34 +0200 (0:00:02.362)       0:03:19.740 *******

TASK [container-engine/nerdctl : download_file | Get the list of working mirrors] ******************
ok: [node1]
Monday 20 February 2023  14:07:34 +0200 (0:00:00.091)       0:03:19.832 *******

TASK [container-engine/nerdctl : download_file | Download item] ************************************
changed: [node1]
Monday 20 February 2023  14:07:36 +0200 (0:00:02.658)       0:03:22.490 *******
Monday 20 February 2023  14:07:36 +0200 (0:00:00.052)       0:03:22.542 *******
Monday 20 February 2023  14:07:36 +0200 (0:00:00.050)       0:03:22.593 *******
Monday 20 February 2023  14:07:36 +0200 (0:00:00.050)       0:03:22.643 *******

TASK [container-engine/nerdctl : download_file | Extract file archives] ****************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/extract_file.yml for node1
Monday 20 February 2023  14:07:37 +0200 (0:00:00.072)       0:03:22.716 *******

TASK [container-engine/nerdctl : extract_file | Unpacking archive] *********************************
changed: [node1]
Monday 20 February 2023  14:07:41 +0200 (0:00:04.663)       0:03:27.379 *******

TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ******************
changed: [node1]
Monday 20 February 2023  14:07:43 +0200 (0:00:01.559)       0:03:28.939 *******

TASK [container-engine/nerdctl : nerdctl | Create configuration dir] *******************************
changed: [node1]
Monday 20 February 2023  14:07:44 +0200 (0:00:01.458)       0:03:30.397 *******

TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] **************************
changed: [node1]
Monday 20 February 2023  14:07:47 +0200 (0:00:02.884)       0:03:33.282 *******
Monday 20 February 2023  14:07:47 +0200 (0:00:00.047)       0:03:33.330 *******

TASK [container-engine/containerd : containerd | Remove any package manager controlled containerd package] ***
ok: [node1]
Monday 20 February 2023  14:07:49 +0200 (0:00:01.971)       0:03:35.301 *******
Monday 20 February 2023  14:07:49 +0200 (0:00:00.046)       0:03:35.348 *******

TASK [container-engine/containerd : containerd | Remove containerd repository] *********************
ok: [node1] => (item=deb https://download.docker.com/linux/ubuntu focal stable
)
Monday 20 February 2023  14:07:51 +0200 (0:00:01.987)       0:03:37.335 *******

TASK [container-engine/containerd : containerd | Download containerd] ******************************
included: /Users/max/DevOps/kubespray/roles/container-engine/containerd/tasks/../../../download/tasks/download_file.yml for node1
Monday 20 February 2023  14:07:51 +0200 (0:00:00.078)       0:03:37.414 *******

TASK [container-engine/containerd : prep_download | Set a few facts] *******************************
ok: [node1]
Monday 20 February 2023  14:07:51 +0200 (0:00:00.065)       0:03:37.479 *******

TASK [container-engine/containerd : download_file | Starting download of file] *********************
ok: [node1] => {
    "msg": "https://github.com/containerd/containerd/releases/download/v1.6.8/containerd-1.6.8-linux-amd64.tar.gz"
}
Monday 20 February 2023  14:07:52 +0200 (0:00:00.524)       0:03:38.003 *******

TASK [container-engine/containerd : download_file | Set pathname of cached file] *******************
ok: [node1]
Monday 20 February 2023  14:07:52 +0200 (0:00:00.530)       0:03:38.534 *******

TASK [container-engine/containerd : download_file | Create dest directory on node] *****************
ok: [node1]
Monday 20 February 2023  14:07:54 +0200 (0:00:02.024)       0:03:40.558 *******
Monday 20 February 2023  14:07:54 +0200 (0:00:00.069)       0:03:40.628 *******
Monday 20 February 2023  14:07:55 +0200 (0:00:00.529)       0:03:41.157 *******

TASK [container-engine/containerd : download_file | Validate mirrors] ******************************
ok: [node1] => (item=None)
ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
Monday 20 February 2023  14:07:57 +0200 (0:00:02.261)       0:03:43.419 *******

TASK [container-engine/containerd : download_file | Get the list of working mirrors] ***************
ok: [node1]
Monday 20 February 2023  14:07:57 +0200 (0:00:00.090)       0:03:43.509 *******

TASK [container-engine/containerd : download_file | Download item] *********************************
changed: [node1]
Monday 20 February 2023  14:08:01 +0200 (0:00:03.888)       0:03:47.398 *******
Monday 20 February 2023  14:08:01 +0200 (0:00:00.052)       0:03:47.450 *******
Monday 20 February 2023  14:08:01 +0200 (0:00:00.050)       0:03:47.500 *******
Monday 20 February 2023  14:08:01 +0200 (0:00:00.050)       0:03:47.551 *******

TASK [container-engine/containerd : download_file | Extract file archives] *************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/extract_file.yml for node1
Monday 20 February 2023  14:08:01 +0200 (0:00:00.072)       0:03:47.623 *******
Monday 20 February 2023  14:08:02 +0200 (0:00:00.519)       0:03:48.143 *******

TASK [container-engine/containerd : containerd | Unpack containerd archive] ************************
changed: [node1]
Monday 20 February 2023  14:08:10 +0200 (0:00:07.823)       0:03:55.966 *******

TASK [container-engine/containerd : containerd | Remove orphaned binary] ***************************
ok: [node1] => (item=containerd)
ok: [node1] => (item=containerd-shim)
ok: [node1] => (item=containerd-shim-runc-v1)
ok: [node1] => (item=containerd-shim-runc-v2)
ok: [node1] => (item=ctr)
Monday 20 February 2023  14:08:17 +0200 (0:00:07.097)       0:04:03.063 *******

TASK [container-engine/containerd : containerd | Generate systemd service for containerd] **********
changed: [node1]
Monday 20 February 2023  14:08:20 +0200 (0:00:02.763)       0:04:05.827 *******

TASK [container-engine/containerd : containerd | Ensure containerd directories exist] **************
changed: [node1] => (item=/etc/systemd/system/containerd.service.d)
changed: [node1] => (item=/etc/containerd)
changed: [node1] => (item=/var/lib/containerd)
changed: [node1] => (item=/run/containerd)
Monday 20 February 2023  14:08:25 +0200 (0:00:05.291)       0:04:11.118 *******
Monday 20 February 2023  14:08:25 +0200 (0:00:00.049)       0:04:11.167 *******

TASK [container-engine/containerd : containerd | Write base_runtime_specs] *************************
changed: [node1] => (item={'key': 'cri-base.json', 'value': {'ociVersion': '1.0.2-dev', 'process': {'user': {'uid': 0, 'gid': 0}, 'cwd': '/', 'capabilities': {'bounding': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'effective': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'inheritable': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'permitted': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE']}, 'rlimits': [{'type': 'RLIMIT_NOFILE', 'hard': 1024, 'soft': 1024}], 'noNewPrivileges': True}, 'root': {'path': 'rootfs'}, 'mounts': [{'destination': '/proc', 'type': 'proc', 'source': 'proc', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/dev', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}, {'destination': '/dev/pts', 'type': 'devpts', 'source': 'devpts', 'options': ['nosuid', 'noexec', 'newinstance', 'ptmxmode=0666', 'mode=0620', 'gid=5']}, {'destination': '/dev/shm', 'type': 'tmpfs', 'source': 'shm', 'options': ['nosuid', 'noexec', 'nodev', 'mode=1777', 'size=65536k']}, {'destination': '/dev/mqueue', 'type': 'mqueue', 'source': 'mqueue', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/sys', 'type': 'sysfs', 'source': 'sysfs', 'options': ['nosuid', 'noexec', 'nodev', 'ro']}, {'destination': '/run', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}], 'linux': {'resources': {'devices': [{'allow': False, 'access': 'rwm'}]}, 'cgroupsPath': '/default', 'namespaces': [{'type': 'pid'}, {'type': 'ipc'}, {'type': 'uts'}, {'type': 'mount'}, {'type': 'network'}], 'maskedPaths': ['/proc/acpi', '/proc/asound', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/sys/firmware', '/proc/scsi'], 'readonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}}})
Monday 20 February 2023  14:08:28 +0200 (0:00:02.735)       0:04:13.903 *******

TASK [container-engine/containerd : containerd | Copy containerd config file] **********************
changed: [node1]
Monday 20 February 2023  14:08:31 +0200 (0:00:02.814)       0:04:16.718 *******
[WARNING]: flush_handlers task does not support when conditional
Monday 20 February 2023  14:08:31 +0200 (0:00:00.001)       0:04:16.719 *******
Monday 20 February 2023  14:08:31 +0200 (0:00:00.041)       0:04:16.761 *******
Monday 20 February 2023  14:08:31 +0200 (0:00:00.044)       0:04:16.806 *******
Monday 20 February 2023  14:08:31 +0200 (0:00:00.044)       0:04:16.850 *******
Monday 20 February 2023  14:08:31 +0200 (0:00:00.043)       0:04:16.893 *******

RUNNING HANDLER [container-engine/containerd : restart containerd] *********************************
changed: [node1]
Monday 20 February 2023  14:08:32 +0200 (0:00:01.377)       0:04:18.270 *******

RUNNING HANDLER [container-engine/containerd : Containerd | restart containerd] ********************
changed: [node1]
Monday 20 February 2023  14:08:34 +0200 (0:00:02.304)       0:04:20.575 *******

RUNNING HANDLER [container-engine/containerd : Containerd | wait for containerd] *******************
changed: [node1]
Monday 20 February 2023  14:08:36 +0200 (0:00:01.351)       0:04:21.926 *******

TASK [container-engine/containerd : containerd | Ensure containerd is started and enabled] *********
ok: [node1]
Monday 20 February 2023  14:08:38 +0200 (0:00:01.863)       0:04:23.790 *******
Monday 20 February 2023  14:08:38 +0200 (0:00:00.056)       0:04:23.847 *******
Monday 20 February 2023  14:08:38 +0200 (0:00:00.045)       0:04:23.892 *******
Monday 20 February 2023  14:08:38 +0200 (0:00:00.043)       0:04:23.936 *******
Monday 20 February 2023  14:08:38 +0200 (0:00:00.043)       0:04:23.979 *******
Monday 20 February 2023  14:08:38 +0200 (0:00:00.044)       0:04:24.023 *******
Monday 20 February 2023  14:08:38 +0200 (0:00:00.058)       0:04:24.082 *******
Monday 20 February 2023  14:08:38 +0200 (0:00:00.044)       0:04:24.126 *******
Monday 20 February 2023  14:08:38 +0200 (0:00:00.044)       0:04:24.170 *******
Monday 20 February 2023  14:08:38 +0200 (0:00:00.074)       0:04:24.245 *******
Monday 20 February 2023  14:08:38 +0200 (0:00:00.043)       0:04:24.288 *******
Monday 20 February 2023  14:08:38 +0200 (0:00:00.044)       0:04:24.333 *******
Monday 20 February 2023  14:08:38 +0200 (0:00:00.046)       0:04:24.379 *******
Monday 20 February 2023  14:08:38 +0200 (0:00:00.045)       0:04:24.424 *******
Monday 20 February 2023  14:08:38 +0200 (0:00:00.045)       0:04:24.470 *******
Monday 20 February 2023  14:08:38 +0200 (0:00:00.044)       0:04:24.514 *******
Monday 20 February 2023  14:08:38 +0200 (0:00:00.049)       0:04:24.563 *******
Monday 20 February 2023  14:08:38 +0200 (0:00:00.049)       0:04:24.613 *******
Monday 20 February 2023  14:08:38 +0200 (0:00:00.046)       0:04:24.660 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.044)       0:04:24.704 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.063)       0:04:24.768 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.044)       0:04:24.813 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.063)       0:04:24.876 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.046)       0:04:24.923 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.014)       0:04:24.937 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.037)       0:04:24.975 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.044)       0:04:25.019 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.043)       0:04:25.063 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.044)       0:04:25.107 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.047)       0:04:25.154 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.114)       0:04:25.269 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.043)       0:04:25.312 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.043)       0:04:25.355 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.043)       0:04:25.399 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.015)       0:04:25.414 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.064)       0:04:25.479 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.046)       0:04:25.525 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.043)       0:04:25.569 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.056)       0:04:25.625 *******
Monday 20 February 2023  14:08:39 +0200 (0:00:00.048)       0:04:25.674 *******

TASK [download : prep_download | Set a few facts] **************************************************
ok: [node1]
Monday 20 February 2023  14:08:40 +0200 (0:00:00.065)       0:04:25.740 *******
Monday 20 February 2023  14:08:40 +0200 (0:00:00.057)       0:04:25.797 *******
Monday 20 February 2023  14:08:40 +0200 (0:00:00.049)       0:04:25.846 *******
Monday 20 February 2023  14:08:40 +0200 (0:00:00.047)       0:04:25.894 *******
Monday 20 February 2023  14:08:40 +0200 (0:00:00.048)       0:04:25.942 *******

TASK [download : prep_download | Register docker images info] **************************************
ok: [node1]
Monday 20 February 2023  14:08:42 +0200 (0:00:01.934)       0:04:27.876 *******

TASK [download : prep_download | Create staging directory on remote node] **************************
changed: [node1]
Monday 20 February 2023  14:08:43 +0200 (0:00:01.385)       0:04:29.261 *******
Monday 20 February 2023  14:08:43 +0200 (0:00:00.048)       0:04:29.310 *******

TASK [download : download | Get kubeadm binary and list of required images] ************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/prep_kubeadm_images.yml for node1
Monday 20 February 2023  14:08:43 +0200 (0:00:00.079)       0:04:29.389 *******
Monday 20 February 2023  14:08:44 +0200 (0:00:00.508)       0:04:29.898 *******

TASK [download : prep_kubeadm_images | Download kubeadm binary] ************************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_file.yml for node1
Monday 20 February 2023  14:08:44 +0200 (0:00:00.539)       0:04:30.438 *******

TASK [download : prep_download | Set a few facts] **************************************************
ok: [node1]
Monday 20 February 2023  14:08:44 +0200 (0:00:00.057)       0:04:30.496 *******

TASK [download : download_file | Starting download of file] ****************************************
ok: [node1] => {
    "msg": "https://storage.googleapis.com/kubernetes-release/release/v1.24.6/bin/linux/amd64/kubeadm"
}
Monday 20 February 2023  14:08:45 +0200 (0:00:00.525)       0:04:31.022 *******

TASK [download : download_file | Set pathname of cached file] **************************************
ok: [node1]
Monday 20 February 2023  14:08:45 +0200 (0:00:00.526)       0:04:31.548 *******

TASK [download : download_file | Create dest directory on node] ************************************
changed: [node1]
Monday 20 February 2023  14:08:47 +0200 (0:00:01.962)       0:04:33.511 *******
Monday 20 February 2023  14:08:47 +0200 (0:00:00.059)       0:04:33.571 *******
Monday 20 February 2023  14:08:48 +0200 (0:00:00.526)       0:04:34.097 *******

TASK [download : download_file | Validate mirrors] *************************************************
ok: [node1] => (item=None)
ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
Monday 20 February 2023  14:08:50 +0200 (0:00:02.343)       0:04:36.440 *******

TASK [download : download_file | Get the list of working mirrors] **********************************
ok: [node1]
Monday 20 February 2023  14:08:50 +0200 (0:00:00.083)       0:04:36.523 *******

TASK [download : download_file | Download item] ****************************************************
changed: [node1]
Monday 20 February 2023  14:08:55 +0200 (0:00:04.195)       0:04:40.719 *******
Monday 20 February 2023  14:08:55 +0200 (0:00:00.043)       0:04:40.762 *******
Monday 20 February 2023  14:08:55 +0200 (0:00:00.042)       0:04:40.805 *******
Monday 20 February 2023  14:08:55 +0200 (0:00:00.043)       0:04:40.849 *******

TASK [download : download_file | Extract file archives] ********************************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/extract_file.yml for node1
Monday 20 February 2023  14:08:55 +0200 (0:00:00.066)       0:04:40.916 *******
Monday 20 February 2023  14:08:55 +0200 (0:00:00.513)       0:04:41.429 *******

TASK [download : prep_kubeadm_images | Create kubeadm config] **************************************
changed: [node1]
Monday 20 February 2023  14:08:58 +0200 (0:00:02.767)       0:04:44.196 *******

TASK [download : prep_kubeadm_images | Copy kubeadm binary from download dir to system path] *******
changed: [node1]
Monday 20 February 2023  14:09:00 +0200 (0:00:01.745)       0:04:45.941 *******

TASK [download : prep_kubeadm_images | Set kubeadm binary permissions] *****************************
ok: [node1]
Monday 20 February 2023  14:09:01 +0200 (0:00:01.413)       0:04:47.355 *******

TASK [download : prep_kubeadm_images | Generate list of required images] ***************************
ok: [node1]
Monday 20 February 2023  14:09:02 +0200 (0:00:01.293)       0:04:48.648 *******

TASK [download : prep_kubeadm_images | Parse list of images] ***************************************
ok: [node1] => (item=registry.k8s.io/kube-apiserver:v1.24.6)
ok: [node1] => (item=registry.k8s.io/kube-controller-manager:v1.24.6)
ok: [node1] => (item=registry.k8s.io/kube-scheduler:v1.24.6)
ok: [node1] => (item=registry.k8s.io/kube-proxy:v1.24.6)
Monday 20 February 2023  14:09:03 +0200 (0:00:00.124)       0:04:48.773 *******

TASK [download : prep_kubeadm_images | Convert list of images to dict for later use] ***************
ok: [node1]
Monday 20 February 2023  14:09:03 +0200 (0:00:00.061)       0:04:48.834 *******

TASK [download : download | Download files / images] ***********************************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.4', 'dest': '/tmp/releases/etcd-v3.5.4-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.4', 'sha256': 'b1091166153df1ee0bb29b47fb1943ef0ddf0cd5d07a8fe69827580a08134def', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.4/etcd-v3.5.4-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.1.1.tgz', 'sha256': 'b275772da4026d2161bf8a8b41ed4786754c8a93ebfb6564006d5da7f23831e5', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.24.6', 'dest': '/tmp/releases/kubeadm-v1.24.6-amd64', 'sha256': '7f4443fd42e0e03f6fd0c7218ca7e2634c9255d5f9d7c581fe362e19098aec4c', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.24.6/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.24.6', 'dest': '/tmp/releases/kubelet-v1.24.6-amd64', 'sha256': 'f8b606f542327128e404d2e66a72a40dc2ddb4175fb8e93c55effeacea60921b', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.24.6/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.24.6', 'dest': '/tmp/releases/kubectl-v1.24.6-amd64', 'sha256': '3ba7e61aecb19eadfa5de1c648af1bc66f5980526645d9dfe682d77fc313b74c', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.24.6/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.24.0', 'dest': '/tmp/releases/crictl-v1.24.0-linux-amd64.tar.gz', 'sha256': '3df4a4306e0554aea4fdc26ecef9eea29a58c8460bebfaca3405799787609880', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.24.0/crictl-v1.24.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.4', 'dest': '/tmp/releases/runc', 'sha256': 'db772be63147a4e747b4fe286c7c16a2edc4a8458bd3092ea46aaee77750e8ce', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.4/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.6.8', 'dest': '/tmp/releases/containerd-1.6.8-linux-amd64.tar.gz', 'sha256': '3a1322c18ee5ff4b9bd5af6b7b30c923a3eab8af1df05554f530ef8e2b24ac5e', 'url': 'https://github.com/containerd/containerd/releases/download/v1.6.8/containerd-1.6.8-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '0.22.2', 'dest': '/tmp/releases/nerdctl-0.22.2-linux-amd64.tar.gz', 'sha256': 'ad40ecf11c689fad594a05a40fef65adb4df8ecd1ffb6711e13cff5382aeaed9', 'url': 'https://github.com/containerd/nerdctl/releases/download/v0.22.2/nerdctl-0.22.2-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.23.3', 'dest': '/tmp/releases/calicoctl', 'sha256': 'd9c04ab15bad9d8037192abd2aa4733a01b0b64a461c7b788118a0d6747c1737', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.23.3/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calicoctl/releases/download/v3.23.3/calicoctl-linux-amd64', 'https://github.com/projectcalico/calico/releases/download/v3.23.3/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.23.3', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.23.3', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.23.3', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.23.3', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.23.3', 'dest': '/tmp/releases/calico-v3.23.3-kdd-crds/v3.23.3.tar.gz', 'sha256': 'd25f5c9a3adeba63219f3c8425a8475ebfbca485376a78193ec1e4c74e7a6115', 'url': 'https://github.com/projectcalico/calico/archive/v3.23.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.6', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.0-alpine', 'sha256': '', 'groups': ['kube_node']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['kube_control_plane']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.21.1', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'metallb_speaker', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'metallb_controller', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.24.6', 'groups': 'k8s_cluster'}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.24.6', 'groups': 'k8s_cluster'}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.24.6', 'groups': 'k8s_cluster'}})
included: /Users/max/DevOps/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.24.6', 'groups': 'k8s_cluster'}})
Monday 20 February 2023  14:09:05 +0200 (0:00:02.190)       0:04:51.024 *******

TASK [download : prep_download | Set a few facts] **************************************************
ok: [node1]
Monday 20 February 2023  14:09:05 +0200 (0:00:00.058)       0:04:51.083 *******

TASK [download : download_file | Starting download of file] ****************************************
ok: [node1] => {
    "msg": "https://github.com/etcd-io/etcd/releases/download/v3.5.4/etcd-v3.5.4-linux-amd64.tar.gz"
}
Monday 20 February 2023  14:09:05 +0200 (0:00:00.059)       0:04:51.142 *******

TASK [download : download_file | Set pathname of cached file] **************************************
ok: [node1]
Monday 20 February 2023  14:09:05 +0200 (0:00:00.139)       0:04:51.282 *******

TASK [download : download_file | Create dest directory on node] ************************************
ok: [node1]
Monday 20 February 2023  14:09:06 +0200 (0:00:01.296)       0:04:52.579 *******
Monday 20 February 2023  14:09:06 +0200 (0:00:00.059)       0:04:52.638 *******
Monday 20 February 2023  14:09:07 +0200 (0:00:00.065)       0:04:52.704 *******

TASK [download : download_file | Validate mirrors] *************************************************
ok: [node1] => (item=None)
ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
Monday 20 February 2023  14:09:08 +0200 (0:00:01.554)       0:04:54.258 *******

TASK [download : download_file | Get the list of working mirrors] **********************************
ok: [node1]
Monday 20 February 2023  14:09:08 +0200 (0:00:00.083)       0:04:54.342 *******

TASK [download : download_file | Download item] ****************************************************
changed: [node1]
Monday 20 February 2023  14:09:10 +0200 (0:00:01.855)       0:04:56.198 *******
Monday 20 February 2023  14:09:10 +0200 (0:00:00.043)       0:04:56.242 *******
Monday 20 February 2023  14:09:10 +0200 (0:00:00.042)       0:04:56.284 *******
Monday 20 February 2023  14:09:10 +0200 (0:00:00.041)       0:04:56.325 *******

TASK [download : download_file | Extract file archives] ********************************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/extract_file.yml for node1
Monday 20 February 2023  14:09:10 +0200 (0:00:00.071)       0:04:56.397 *******

TASK [download : extract_file | Unpacking archive] *************************************************
changed: [node1]
Monday 20 February 2023  14:09:15 +0200 (0:00:04.399)       0:05:00.797 *******

TASK [download : prep_download | Set a few facts] **************************************************
ok: [node1]
Monday 20 February 2023  14:09:15 +0200 (0:00:00.057)       0:05:00.854 *******

TASK [download : download_file | Starting download of file] ****************************************
ok: [node1] => {
    "msg": "https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz"
}
Monday 20 February 2023  14:09:15 +0200 (0:00:00.061)       0:05:00.916 *******

TASK [download : download_file | Set pathname of cached file] **************************************
ok: [node1]
Monday 20 February 2023  14:09:15 +0200 (0:00:00.062)       0:05:00.978 *******

TASK [download : download_file | Create dest directory on node] ************************************
ok: [node1]
Monday 20 February 2023  14:09:16 +0200 (0:00:01.500)       0:05:02.479 *******
Monday 20 February 2023  14:09:16 +0200 (0:00:00.060)       0:05:02.539 *******
Monday 20 February 2023  14:09:16 +0200 (0:00:00.065)       0:05:02.605 *******

TASK [download : download_file | Validate mirrors] *************************************************
ok: [node1] => (item=None)
ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
Monday 20 February 2023  14:09:18 +0200 (0:00:01.594)       0:05:04.200 *******

TASK [download : download_file | Get the list of working mirrors] **********************************
ok: [node1]
Monday 20 February 2023  14:09:18 +0200 (0:00:00.083)       0:05:04.283 *******

TASK [download : download_file | Download item] ****************************************************
changed: [node1]
Monday 20 February 2023  14:09:20 +0200 (0:00:01.624)       0:05:05.908 *******
Monday 20 February 2023  14:09:20 +0200 (0:00:00.043)       0:05:05.951 *******
Monday 20 February 2023  14:09:20 +0200 (0:00:00.042)       0:05:05.994 *******
Monday 20 February 2023  14:09:20 +0200 (0:00:00.041)       0:05:06.036 *******

TASK [download : download_file | Extract file archives] ********************************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/extract_file.yml for node1
Monday 20 February 2023  14:09:20 +0200 (0:00:00.070)       0:05:06.106 *******
Monday 20 February 2023  14:09:20 +0200 (0:00:00.055)       0:05:06.162 *******

TASK [download : prep_download | Set a few facts] **************************************************
ok: [node1]
Monday 20 February 2023  14:09:20 +0200 (0:00:00.058)       0:05:06.221 *******

TASK [download : download_file | Starting download of file] ****************************************
ok: [node1] => {
    "msg": "https://storage.googleapis.com/kubernetes-release/release/v1.24.6/bin/linux/amd64/kubeadm"
}
Monday 20 February 2023  14:09:20 +0200 (0:00:00.061)       0:05:06.282 *******

TASK [download : download_file | Set pathname of cached file] **************************************
ok: [node1]
Monday 20 February 2023  14:09:20 +0200 (0:00:00.060)       0:05:06.343 *******

TASK [download : download_file | Create dest directory on node] ************************************
ok: [node1]
Monday 20 February 2023  14:09:22 +0200 (0:00:01.499)       0:05:07.842 *******
Monday 20 February 2023  14:09:22 +0200 (0:00:00.061)       0:05:07.903 *******
Monday 20 February 2023  14:09:22 +0200 (0:00:00.067)       0:05:07.971 *******

TASK [download : download_file | Validate mirrors] *************************************************
ok: [node1] => (item=None)
ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
Monday 20 February 2023  14:09:23 +0200 (0:00:01.649)       0:05:09.620 *******

TASK [download : download_file | Get the list of working mirrors] **********************************
ok: [node1]
Monday 20 February 2023  14:09:24 +0200 (0:00:00.083)       0:05:09.704 *******

TASK [download : download_file | Download item] ****************************************************
ok: [node1]
Monday 20 February 2023  14:09:24 +0200 (0:00:00.826)       0:05:10.530 *******
Monday 20 February 2023  14:09:24 +0200 (0:00:00.043)       0:05:10.574 *******
Monday 20 February 2023  14:09:24 +0200 (0:00:00.043)       0:05:10.618 *******
Monday 20 February 2023  14:09:24 +0200 (0:00:00.042)       0:05:10.660 *******

TASK [download : download_file | Extract file archives] ********************************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/extract_file.yml for node1
Monday 20 February 2023  14:09:25 +0200 (0:00:00.070)       0:05:10.730 *******
Monday 20 February 2023  14:09:25 +0200 (0:00:00.055)       0:05:10.785 *******

TASK [download : prep_download | Set a few facts] **************************************************
ok: [node1]
Monday 20 February 2023  14:09:25 +0200 (0:00:00.057)       0:05:10.843 *******

TASK [download : download_file | Starting download of file] ****************************************
ok: [node1] => {
    "msg": "https://storage.googleapis.com/kubernetes-release/release/v1.24.6/bin/linux/amd64/kubelet"
}
Monday 20 February 2023  14:09:25 +0200 (0:00:00.061)       0:05:10.905 *******

TASK [download : download_file | Set pathname of cached file] **************************************
ok: [node1]
Monday 20 February 2023  14:09:25 +0200 (0:00:00.061)       0:05:10.966 *******

TASK [download : download_file | Create dest directory on node] ************************************
ok: [node1]
Monday 20 February 2023  14:09:26 +0200 (0:00:01.325)       0:05:12.292 *******
Monday 20 February 2023  14:09:26 +0200 (0:00:00.060)       0:05:12.353 *******
Monday 20 February 2023  14:09:26 +0200 (0:00:00.067)       0:05:12.420 *******

TASK [download : download_file | Validate mirrors] *************************************************
ok: [node1] => (item=None)
ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
Monday 20 February 2023  14:09:27 +0200 (0:00:01.091)       0:05:13.511 *******

TASK [download : download_file | Get the list of working mirrors] **********************************
ok: [node1]
Monday 20 February 2023  14:09:27 +0200 (0:00:00.082)       0:05:13.593 *******

TASK [download : download_file | Download item] ****************************************************
changed: [node1]
Monday 20 February 2023  14:09:33 +0200 (0:00:05.857)       0:05:19.451 *******
Monday 20 February 2023  14:09:33 +0200 (0:00:00.044)       0:05:19.496 *******
Monday 20 February 2023  14:09:33 +0200 (0:00:00.044)       0:05:19.540 *******
Monday 20 February 2023  14:09:33 +0200 (0:00:00.043)       0:05:19.583 *******

TASK [download : download_file | Extract file archives] ********************************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/extract_file.yml for node1
Monday 20 February 2023  14:09:33 +0200 (0:00:00.070)       0:05:19.654 *******
Monday 20 February 2023  14:09:34 +0200 (0:00:00.048)       0:05:19.702 *******

TASK [download : prep_download | Set a few facts] **************************************************
ok: [node1]
Monday 20 February 2023  14:09:34 +0200 (0:00:00.061)       0:05:19.764 *******

TASK [download : download_file | Starting download of file] ****************************************
ok: [node1] => {
    "msg": "https://storage.googleapis.com/kubernetes-release/release/v1.24.6/bin/linux/amd64/kubectl"
}
Monday 20 February 2023  14:09:34 +0200 (0:00:00.061)       0:05:19.825 *******

TASK [download : download_file | Set pathname of cached file] **************************************
ok: [node1]
Monday 20 February 2023  14:09:34 +0200 (0:00:00.062)       0:05:19.888 *******

TASK [download : download_file | Create dest directory on node] ************************************
ok: [node1]
Monday 20 February 2023  14:09:35 +0200 (0:00:01.316)       0:05:21.204 *******
Monday 20 February 2023  14:09:35 +0200 (0:00:00.060)       0:05:21.264 *******
Monday 20 February 2023  14:09:35 +0200 (0:00:00.065)       0:05:21.330 *******

TASK [download : download_file | Validate mirrors] *************************************************
ok: [node1] => (item=None)
ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
Monday 20 February 2023  14:09:36 +0200 (0:00:01.090)       0:05:22.420 *******

TASK [download : download_file | Get the list of working mirrors] **********************************
ok: [node1]
Monday 20 February 2023  14:09:36 +0200 (0:00:00.082)       0:05:22.503 *******

TASK [download : download_file | Download item] ****************************************************
changed: [node1]
Monday 20 February 2023  14:09:39 +0200 (0:00:02.977)       0:05:25.481 *******
Monday 20 February 2023  14:09:39 +0200 (0:00:00.044)       0:05:25.525 *******
Monday 20 February 2023  14:09:39 +0200 (0:00:00.043)       0:05:25.568 *******
Monday 20 February 2023  14:09:39 +0200 (0:00:00.042)       0:05:25.610 *******

TASK [download : download_file | Extract file archives] ********************************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/extract_file.yml for node1
Monday 20 February 2023  14:09:40 +0200 (0:00:00.072)       0:05:25.682 *******
Monday 20 February 2023  14:09:40 +0200 (0:00:00.050)       0:05:25.733 *******

TASK [download : prep_download | Set a few facts] **************************************************
ok: [node1]
Monday 20 February 2023  14:09:40 +0200 (0:00:00.058)       0:05:25.791 *******

TASK [download : download_file | Starting download of file] ****************************************
ok: [node1] => {
    "msg": "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.24.0/crictl-v1.24.0-linux-amd64.tar.gz"
}
Monday 20 February 2023  14:09:40 +0200 (0:00:00.060)       0:05:25.851 *******

TASK [download : download_file | Set pathname of cached file] **************************************
ok: [node1]
Monday 20 February 2023  14:09:40 +0200 (0:00:00.064)       0:05:25.915 *******

TASK [download : download_file | Create dest directory on node] ************************************
ok: [node1]
Monday 20 February 2023  14:09:41 +0200 (0:00:01.284)       0:05:27.200 *******
Monday 20 February 2023  14:09:41 +0200 (0:00:00.060)       0:05:27.260 *******
Monday 20 February 2023  14:09:41 +0200 (0:00:00.067)       0:05:27.328 *******

TASK [download : download_file | Validate mirrors] *************************************************
ok: [node1] => (item=None)
ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
Monday 20 February 2023  14:09:43 +0200 (0:00:01.444)       0:05:28.772 *******

TASK [download : download_file | Get the list of working mirrors] **********************************
ok: [node1]
Monday 20 February 2023  14:09:43 +0200 (0:00:00.083)       0:05:28.855 *******

TASK [download : download_file | Download item] ****************************************************
ok: [node1]
Monday 20 February 2023  14:09:44 +0200 (0:00:00.912)       0:05:29.768 *******
Monday 20 February 2023  14:09:44 +0200 (0:00:00.044)       0:05:29.812 *******
Monday 20 February 2023  14:09:44 +0200 (0:00:00.041)       0:05:29.854 *******
Monday 20 February 2023  14:09:44 +0200 (0:00:00.043)       0:05:29.898 *******

TASK [download : download_file | Extract file archives] ********************************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/extract_file.yml for node1
Monday 20 February 2023  14:09:44 +0200 (0:00:00.070)       0:05:29.969 *******

TASK [download : extract_file | Unpacking archive] *************************************************
ok: [node1]
Monday 20 February 2023  14:09:47 +0200 (0:00:03.134)       0:05:33.104 *******

TASK [download : prep_download | Set a few facts] **************************************************
ok: [node1]
Monday 20 February 2023  14:09:47 +0200 (0:00:00.060)       0:05:33.164 *******

TASK [download : download_file | Starting download of file] ****************************************
ok: [node1] => {
    "msg": "https://github.com/opencontainers/runc/releases/download/v1.1.4/runc.amd64"
}
Monday 20 February 2023  14:09:47 +0200 (0:00:00.061)       0:05:33.226 *******

TASK [download : download_file | Set pathname of cached file] **************************************
ok: [node1]
Monday 20 February 2023  14:09:47 +0200 (0:00:00.062)       0:05:33.288 *******

TASK [download : download_file | Create dest directory on node] ************************************
ok: [node1]
Monday 20 February 2023  14:09:48 +0200 (0:00:01.344)       0:05:34.632 *******
Monday 20 February 2023  14:09:49 +0200 (0:00:00.060)       0:05:34.692 *******
Monday 20 February 2023  14:09:49 +0200 (0:00:00.067)       0:05:34.760 *******

TASK [download : download_file | Validate mirrors] *************************************************
ok: [node1] => (item=None)
ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
Monday 20 February 2023  14:09:50 +0200 (0:00:01.187)       0:05:35.948 *******

TASK [download : download_file | Get the list of working mirrors] **********************************
ok: [node1]
Monday 20 February 2023  14:09:50 +0200 (0:00:00.083)       0:05:36.031 *******

TASK [download : download_file | Download item] ****************************************************
ok: [node1]
Monday 20 February 2023  14:09:51 +0200 (0:00:00.702)       0:05:36.734 *******
Monday 20 February 2023  14:09:51 +0200 (0:00:00.043)       0:05:36.778 *******
Monday 20 February 2023  14:09:51 +0200 (0:00:00.042)       0:05:36.820 *******
Monday 20 February 2023  14:09:51 +0200 (0:00:00.042)       0:05:36.862 *******

TASK [download : download_file | Extract file archives] ********************************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/extract_file.yml for node1
Monday 20 February 2023  14:09:51 +0200 (0:00:00.072)       0:05:36.935 *******
Monday 20 February 2023  14:09:51 +0200 (0:00:00.048)       0:05:36.983 *******

TASK [download : prep_download | Set a few facts] **************************************************
ok: [node1]
Monday 20 February 2023  14:09:51 +0200 (0:00:00.058)       0:05:37.042 *******

TASK [download : download_file | Starting download of file] ****************************************
ok: [node1] => {
    "msg": "https://github.com/containerd/containerd/releases/download/v1.6.8/containerd-1.6.8-linux-amd64.tar.gz"
}
Monday 20 February 2023  14:09:51 +0200 (0:00:00.060)       0:05:37.103 *******

TASK [download : download_file | Set pathname of cached file] **************************************
ok: [node1]
Monday 20 February 2023  14:09:51 +0200 (0:00:00.064)       0:05:37.167 *******

TASK [download : download_file | Create dest directory on node] ************************************
ok: [node1]
Monday 20 February 2023  14:09:53 +0200 (0:00:01.627)       0:05:38.795 *******
Monday 20 February 2023  14:09:53 +0200 (0:00:00.059)       0:05:38.854 *******
Monday 20 February 2023  14:09:53 +0200 (0:00:00.068)       0:05:38.922 *******

TASK [download : download_file | Validate mirrors] *************************************************
ok: [node1] => (item=None)
ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
Monday 20 February 2023  14:09:54 +0200 (0:00:01.621)       0:05:40.544 *******

TASK [download : download_file | Get the list of working mirrors] **********************************
ok: [node1]
Monday 20 February 2023  14:09:54 +0200 (0:00:00.082)       0:05:40.627 *******

TASK [download : download_file | Download item] ****************************************************
ok: [node1]
Monday 20 February 2023  14:09:55 +0200 (0:00:01.021)       0:05:41.648 *******
Monday 20 February 2023  14:09:56 +0200 (0:00:00.044)       0:05:41.692 *******
Monday 20 February 2023  14:09:56 +0200 (0:00:00.042)       0:05:41.734 *******
Monday 20 February 2023  14:09:56 +0200 (0:00:00.042)       0:05:41.777 *******

TASK [download : download_file | Extract file archives] ********************************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/extract_file.yml for node1
Monday 20 February 2023  14:09:56 +0200 (0:00:00.070)       0:05:41.847 *******
Monday 20 February 2023  14:09:56 +0200 (0:00:00.056)       0:05:41.904 *******

TASK [download : prep_download | Set a few facts] **************************************************
ok: [node1]
Monday 20 February 2023  14:09:56 +0200 (0:00:00.059)       0:05:41.963 *******

TASK [download : download_file | Starting download of file] ****************************************
ok: [node1] => {
    "msg": "https://github.com/containerd/nerdctl/releases/download/v0.22.2/nerdctl-0.22.2-linux-amd64.tar.gz"
}
Monday 20 February 2023  14:09:56 +0200 (0:00:00.061)       0:05:42.025 *******

TASK [download : download_file | Set pathname of cached file] **************************************
ok: [node1]
Monday 20 February 2023  14:09:56 +0200 (0:00:00.060)       0:05:42.086 *******

TASK [download : download_file | Create dest directory on node] ************************************
ok: [node1]
Monday 20 February 2023  14:09:57 +0200 (0:00:01.392)       0:05:43.478 *******
Monday 20 February 2023  14:09:57 +0200 (0:00:00.061)       0:05:43.540 *******
Monday 20 February 2023  14:09:57 +0200 (0:00:00.067)       0:05:43.607 *******

TASK [download : download_file | Validate mirrors] *************************************************
ok: [node1] => (item=None)
ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
Monday 20 February 2023  14:09:59 +0200 (0:00:01.489)       0:05:45.097 *******

TASK [download : download_file | Get the list of working mirrors] **********************************
ok: [node1]
Monday 20 February 2023  14:09:59 +0200 (0:00:00.082)       0:05:45.179 *******

TASK [download : download_file | Download item] ****************************************************
ok: [node1]
Monday 20 February 2023  14:10:00 +0200 (0:00:00.770)       0:05:45.950 *******
Monday 20 February 2023  14:10:00 +0200 (0:00:00.044)       0:05:45.994 *******
Monday 20 February 2023  14:10:00 +0200 (0:00:00.043)       0:05:46.037 *******
Monday 20 February 2023  14:10:00 +0200 (0:00:00.041)       0:05:46.079 *******

TASK [download : download_file | Extract file archives] ********************************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/extract_file.yml for node1
Monday 20 February 2023  14:10:00 +0200 (0:00:00.071)       0:05:46.151 *******

TASK [download : extract_file | Unpacking archive] *************************************************
ok: [node1]
Monday 20 February 2023  14:10:04 +0200 (0:00:03.691)       0:05:49.843 *******

TASK [download : prep_download | Set a few facts] **************************************************
ok: [node1]
Monday 20 February 2023  14:10:04 +0200 (0:00:00.057)       0:05:49.900 *******

TASK [download : download_file | Starting download of file] ****************************************
ok: [node1] => {
    "msg": "https://github.com/projectcalico/calico/releases/download/v3.23.3/calicoctl-linux-amd64"
}
Monday 20 February 2023  14:10:04 +0200 (0:00:00.062)       0:05:49.963 *******

TASK [download : download_file | Set pathname of cached file] **************************************
ok: [node1]
Monday 20 February 2023  14:10:04 +0200 (0:00:00.061)       0:05:50.025 *******

TASK [download : download_file | Create dest directory on node] ************************************
ok: [node1]
Monday 20 February 2023  14:10:05 +0200 (0:00:01.341)       0:05:51.366 *******
Monday 20 February 2023  14:10:05 +0200 (0:00:00.060)       0:05:51.427 *******
Monday 20 February 2023  14:10:05 +0200 (0:00:00.069)       0:05:51.496 *******
FAILED - RETRYING: [node1]: download_file | Validate mirrors (4 retries left).
FAILED - RETRYING: [node1]: download_file | Validate mirrors (3 retries left).
FAILED - RETRYING: [node1]: download_file | Validate mirrors (2 retries left).
FAILED - RETRYING: [node1]: download_file | Validate mirrors (1 retries left).

TASK [download : download_file | Validate mirrors] *************************************************
failed: [node1] (item=None) => {"attempts": 4, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
ok: [node1] => (item=None)
fatal: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]: FAILED! => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
...ignoring
Monday 20 February 2023  14:10:33 +0200 (0:00:28.062)       0:06:19.559 *******

TASK [download : download_file | Get the list of working mirrors] **********************************
ok: [node1]
Monday 20 February 2023  14:10:33 +0200 (0:00:00.084)       0:06:19.644 *******

TASK [download : download_file | Download item] ****************************************************
changed: [node1]
Monday 20 February 2023  14:10:36 +0200 (0:00:02.657)       0:06:22.302 *******
Monday 20 February 2023  14:10:36 +0200 (0:00:00.044)       0:06:22.346 *******
Monday 20 February 2023  14:10:36 +0200 (0:00:00.042)       0:06:22.389 *******
Monday 20 February 2023  14:10:36 +0200 (0:00:00.042)       0:06:22.432 *******

TASK [download : download_file | Extract file archives] ********************************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/extract_file.yml for node1
Monday 20 February 2023  14:10:36 +0200 (0:00:00.070)       0:06:22.502 *******
Monday 20 February 2023  14:10:36 +0200 (0:00:00.056)       0:06:22.559 *******

TASK [download : set default values for flag variables] ********************************************
ok: [node1]
Monday 20 February 2023  14:10:36 +0200 (0:00:00.060)       0:06:22.619 *******

TASK [download : set_container_facts | Display the name of the image being processed] **************
ok: [node1] => {
    "msg": "quay.io/calico/node"
}
Monday 20 February 2023  14:10:37 +0200 (0:00:00.064)       0:06:22.683 *******

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***************
ok: [node1]
Monday 20 February 2023  14:10:37 +0200 (0:00:00.062)       0:06:22.746 *******

TASK [download : set_container_facts | Define by what name to pull the image] **********************
ok: [node1]
Monday 20 February 2023  14:10:37 +0200 (0:00:00.062)       0:06:22.808 *******

TASK [download : set_container_facts | Define file name of image] **********************************
ok: [node1]
Monday 20 February 2023  14:10:37 +0200 (0:00:00.060)       0:06:22.869 *******

TASK [download : set_container_facts | Define path of image] ***************************************
ok: [node1]
Monday 20 February 2023  14:10:37 +0200 (0:00:00.063)       0:06:22.933 *******
Monday 20 February 2023  14:10:37 +0200 (0:00:00.043)       0:06:22.977 *******

TASK [download : Set image save/load command for containerd] ***************************************
ok: [node1]
Monday 20 February 2023  14:10:37 +0200 (0:00:00.061)       0:06:23.038 *******
Monday 20 February 2023  14:10:37 +0200 (0:00:00.044)       0:06:23.082 *******
Monday 20 February 2023  14:10:37 +0200 (0:00:00.044)       0:06:23.127 *******

TASK [download : Set image save/load command for containerd on localhost] **************************
ok: [node1]
Monday 20 February 2023  14:10:37 +0200 (0:00:00.064)       0:06:23.192 *******
Monday 20 February 2023  14:10:37 +0200 (0:00:00.046)       0:06:23.238 *******

TASK [download : download_container | Prepare container download] **********************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/check_pull_required.yml for node1
Monday 20 February 2023  14:10:37 +0200 (0:00:00.082)       0:06:23.321 *******

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node1]
Monday 20 February 2023  14:10:38 +0200 (0:00:01.336)       0:06:24.657 *******

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
Monday 20 February 2023  14:10:39 +0200 (0:00:00.063)       0:06:24.720 *******
Monday 20 February 2023  14:10:39 +0200 (0:00:00.045)       0:06:24.766 *******

TASK [download : debug] ****************************************************************************
ok: [node1] => {
    "msg": "Pull quay.io/calico/node:v3.23.3 required is: True"
}
Monday 20 February 2023  14:10:39 +0200 (0:00:00.064)       0:06:24.831 *******
Monday 20 February 2023  14:10:39 +0200 (0:00:00.044)       0:06:24.875 *******
Monday 20 February 2023  14:10:39 +0200 (0:00:00.041)       0:06:24.917 *******
Monday 20 February 2023  14:10:39 +0200 (0:00:00.059)       0:06:24.976 *******

TASK [download : download_container | Download image if required] **********************************
changed: [node1]
Monday 20 February 2023  14:10:45 +0200 (0:00:06.660)       0:06:31.637 *******
Monday 20 February 2023  14:10:46 +0200 (0:00:00.053)       0:06:31.690 *******
Monday 20 February 2023  14:10:46 +0200 (0:00:00.044)       0:06:31.734 *******
Monday 20 February 2023  14:10:46 +0200 (0:00:00.043)       0:06:31.778 *******
Monday 20 February 2023  14:10:46 +0200 (0:00:00.043)       0:06:31.822 *******

TASK [download : download_container | Remove container image from cache] ***************************
ok: [node1]
Monday 20 February 2023  14:10:47 +0200 (0:00:01.389)       0:06:33.212 *******

TASK [download : set default values for flag variables] ********************************************
ok: [node1]
Monday 20 February 2023  14:10:47 +0200 (0:00:00.058)       0:06:33.270 *******

TASK [download : set_container_facts | Display the name of the image being processed] **************
ok: [node1] => {
    "msg": "quay.io/calico/cni"
}
Monday 20 February 2023  14:10:47 +0200 (0:00:00.060)       0:06:33.331 *******

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***************
ok: [node1]
Monday 20 February 2023  14:10:47 +0200 (0:00:00.146)       0:06:33.477 *******

TASK [download : set_container_facts | Define by what name to pull the image] **********************
ok: [node1]
Monday 20 February 2023  14:10:47 +0200 (0:00:00.060)       0:06:33.538 *******

TASK [download : set_container_facts | Define file name of image] **********************************
ok: [node1]
Monday 20 February 2023  14:10:47 +0200 (0:00:00.060)       0:06:33.598 *******

TASK [download : set_container_facts | Define path of image] ***************************************
ok: [node1]
Monday 20 February 2023  14:10:47 +0200 (0:00:00.059)       0:06:33.658 *******
Monday 20 February 2023  14:10:48 +0200 (0:00:00.043)       0:06:33.701 *******

TASK [download : Set image save/load command for containerd] ***************************************
ok: [node1]
Monday 20 February 2023  14:10:48 +0200 (0:00:00.061)       0:06:33.762 *******
Monday 20 February 2023  14:10:48 +0200 (0:00:00.046)       0:06:33.808 *******
Monday 20 February 2023  14:10:48 +0200 (0:00:00.044)       0:06:33.852 *******

TASK [download : Set image save/load command for containerd on localhost] **************************
ok: [node1]
Monday 20 February 2023  14:10:48 +0200 (0:00:00.064)       0:06:33.917 *******
Monday 20 February 2023  14:10:48 +0200 (0:00:00.043)       0:06:33.961 *******

TASK [download : download_container | Prepare container download] **********************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/check_pull_required.yml for node1
Monday 20 February 2023  14:10:48 +0200 (0:00:00.080)       0:06:34.041 *******

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node1]
Monday 20 February 2023  14:10:49 +0200 (0:00:01.309)       0:06:35.351 *******

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
Monday 20 February 2023  14:10:49 +0200 (0:00:00.062)       0:06:35.413 *******
Monday 20 February 2023  14:10:49 +0200 (0:00:00.046)       0:06:35.459 *******

TASK [download : debug] ****************************************************************************
ok: [node1] => {
    "msg": "Pull quay.io/calico/cni:v3.23.3 required is: True"
}
Monday 20 February 2023  14:10:49 +0200 (0:00:00.064)       0:06:35.523 *******
Monday 20 February 2023  14:10:49 +0200 (0:00:00.044)       0:06:35.567 *******
Monday 20 February 2023  14:10:49 +0200 (0:00:00.042)       0:06:35.610 *******
Monday 20 February 2023  14:10:49 +0200 (0:00:00.058)       0:06:35.669 *******

TASK [download : download_container | Download image if required] **********************************
changed: [node1]
Monday 20 February 2023  14:11:01 +0200 (0:00:11.127)       0:06:46.796 *******
Monday 20 February 2023  14:11:01 +0200 (0:00:00.053)       0:06:46.850 *******
Monday 20 February 2023  14:11:01 +0200 (0:00:00.044)       0:06:46.894 *******
Monday 20 February 2023  14:11:01 +0200 (0:00:00.044)       0:06:46.939 *******
Monday 20 February 2023  14:11:01 +0200 (0:00:00.044)       0:06:46.983 *******

TASK [download : download_container | Remove container image from cache] ***************************
ok: [node1]
Monday 20 February 2023  14:11:02 +0200 (0:00:01.461)       0:06:48.445 *******

TASK [download : set default values for flag variables] ********************************************
ok: [node1]
Monday 20 February 2023  14:11:02 +0200 (0:00:00.057)       0:06:48.502 *******

TASK [download : set_container_facts | Display the name of the image being processed] **************
ok: [node1] => {
    "msg": "quay.io/calico/pod2daemon-flexvol"
}
Monday 20 February 2023  14:11:02 +0200 (0:00:00.063)       0:06:48.566 *******

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***************
ok: [node1]
Monday 20 February 2023  14:11:02 +0200 (0:00:00.063)       0:06:48.630 *******

TASK [download : set_container_facts | Define by what name to pull the image] **********************
ok: [node1]
Monday 20 February 2023  14:11:03 +0200 (0:00:00.062)       0:06:48.692 *******

TASK [download : set_container_facts | Define file name of image] **********************************
ok: [node1]
Monday 20 February 2023  14:11:03 +0200 (0:00:00.059)       0:06:48.752 *******

TASK [download : set_container_facts | Define path of image] ***************************************
ok: [node1]
Monday 20 February 2023  14:11:03 +0200 (0:00:00.060)       0:06:48.812 *******
Monday 20 February 2023  14:11:03 +0200 (0:00:00.044)       0:06:48.857 *******

TASK [download : Set image save/load command for containerd] ***************************************
ok: [node1]
Monday 20 February 2023  14:11:03 +0200 (0:00:00.064)       0:06:48.922 *******
Monday 20 February 2023  14:11:03 +0200 (0:00:00.044)       0:06:48.966 *******
Monday 20 February 2023  14:11:03 +0200 (0:00:00.043)       0:06:49.010 *******

TASK [download : Set image save/load command for containerd on localhost] **************************
ok: [node1]
Monday 20 February 2023  14:11:03 +0200 (0:00:00.065)       0:06:49.075 *******
Monday 20 February 2023  14:11:03 +0200 (0:00:00.044)       0:06:49.120 *******

TASK [download : download_container | Prepare container download] **********************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/check_pull_required.yml for node1
Monday 20 February 2023  14:11:03 +0200 (0:00:00.080)       0:06:49.201 *******

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node1]
Monday 20 February 2023  14:11:04 +0200 (0:00:01.461)       0:06:50.662 *******

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
Monday 20 February 2023  14:11:05 +0200 (0:00:00.062)       0:06:50.725 *******
Monday 20 February 2023  14:11:05 +0200 (0:00:00.044)       0:06:50.770 *******

TASK [download : debug] ****************************************************************************
ok: [node1] => {
    "msg": "Pull quay.io/calico/pod2daemon-flexvol:v3.23.3 required is: True"
}
Monday 20 February 2023  14:11:05 +0200 (0:00:00.065)       0:06:50.835 *******
Monday 20 February 2023  14:11:05 +0200 (0:00:00.042)       0:06:50.877 *******
Monday 20 February 2023  14:11:05 +0200 (0:00:00.044)       0:06:50.922 *******
Monday 20 February 2023  14:11:05 +0200 (0:00:00.060)       0:06:50.982 *******

TASK [download : download_container | Download image if required] **********************************
changed: [node1]
Monday 20 February 2023  14:11:08 +0200 (0:00:03.184)       0:06:54.167 *******
Monday 20 February 2023  14:11:08 +0200 (0:00:00.055)       0:06:54.223 *******
Monday 20 February 2023  14:11:08 +0200 (0:00:00.045)       0:06:54.268 *******
Monday 20 February 2023  14:11:08 +0200 (0:00:00.044)       0:06:54.312 *******
Monday 20 February 2023  14:11:08 +0200 (0:00:00.043)       0:06:54.356 *******

TASK [download : download_container | Remove container image from cache] ***************************
ok: [node1]
Monday 20 February 2023  14:11:09 +0200 (0:00:01.270)       0:06:55.627 *******

TASK [download : set default values for flag variables] ********************************************
ok: [node1]
Monday 20 February 2023  14:11:10 +0200 (0:00:00.059)       0:06:55.686 *******

TASK [download : set_container_facts | Display the name of the image being processed] **************
ok: [node1] => {
    "msg": "quay.io/calico/kube-controllers"
}
Monday 20 February 2023  14:11:10 +0200 (0:00:00.061)       0:06:55.748 *******

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***************
ok: [node1]
Monday 20 February 2023  14:11:10 +0200 (0:00:00.062)       0:06:55.810 *******

TASK [download : set_container_facts | Define by what name to pull the image] **********************
ok: [node1]
Monday 20 February 2023  14:11:10 +0200 (0:00:00.061)       0:06:55.872 *******

TASK [download : set_container_facts | Define file name of image] **********************************
ok: [node1]
Monday 20 February 2023  14:11:10 +0200 (0:00:00.062)       0:06:55.935 *******

TASK [download : set_container_facts | Define path of image] ***************************************
ok: [node1]
Monday 20 February 2023  14:11:10 +0200 (0:00:00.060)       0:06:55.996 *******
Monday 20 February 2023  14:11:10 +0200 (0:00:00.042)       0:06:56.038 *******

TASK [download : Set image save/load command for containerd] ***************************************
ok: [node1]
Monday 20 February 2023  14:11:10 +0200 (0:00:00.061)       0:06:56.100 *******
Monday 20 February 2023  14:11:10 +0200 (0:00:00.043)       0:06:56.144 *******
Monday 20 February 2023  14:11:10 +0200 (0:00:00.044)       0:06:56.188 *******

TASK [download : Set image save/load command for containerd on localhost] **************************
ok: [node1]
Monday 20 February 2023  14:11:10 +0200 (0:00:00.068)       0:06:56.256 *******
Monday 20 February 2023  14:11:10 +0200 (0:00:00.044)       0:06:56.301 *******

TASK [download : download_container | Prepare container download] **********************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/check_pull_required.yml for node1
Monday 20 February 2023  14:11:10 +0200 (0:00:00.078)       0:06:56.380 *******

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node1]
Monday 20 February 2023  14:11:12 +0200 (0:00:01.453)       0:06:57.834 *******

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
Monday 20 February 2023  14:11:12 +0200 (0:00:00.062)       0:06:57.896 *******
Monday 20 February 2023  14:11:12 +0200 (0:00:00.045)       0:06:57.941 *******

TASK [download : debug] ****************************************************************************
ok: [node1] => {
    "msg": "Pull quay.io/calico/kube-controllers:v3.23.3 required is: True"
}
Monday 20 February 2023  14:11:12 +0200 (0:00:00.064)       0:06:58.006 *******
Monday 20 February 2023  14:11:12 +0200 (0:00:00.042)       0:06:58.049 *******
Monday 20 February 2023  14:11:12 +0200 (0:00:00.042)       0:06:58.092 *******
Monday 20 February 2023  14:11:12 +0200 (0:00:00.059)       0:06:58.151 *******

TASK [download : download_container | Download image if required] **********************************
changed: [node1]
Monday 20 February 2023  14:11:18 +0200 (0:00:06.463)       0:07:04.614 *******
Monday 20 February 2023  14:11:18 +0200 (0:00:00.054)       0:07:04.669 *******
Monday 20 February 2023  14:11:19 +0200 (0:00:00.045)       0:07:04.714 *******
Monday 20 February 2023  14:11:19 +0200 (0:00:00.043)       0:07:04.758 *******
Monday 20 February 2023  14:11:19 +0200 (0:00:00.044)       0:07:04.803 *******

TASK [download : download_container | Remove container image from cache] ***************************
ok: [node1]
Monday 20 February 2023  14:11:20 +0200 (0:00:01.432)       0:07:06.236 *******

TASK [download : prep_download | Set a few facts] **************************************************
ok: [node1]
Monday 20 February 2023  14:11:20 +0200 (0:00:00.059)       0:07:06.295 *******

TASK [download : download_file | Starting download of file] ****************************************
ok: [node1] => {
    "msg": "https://github.com/projectcalico/calico/archive/v3.23.3.tar.gz"
}
Monday 20 February 2023  14:11:20 +0200 (0:00:00.061)       0:07:06.357 *******

TASK [download : download_file | Set pathname of cached file] **************************************
ok: [node1]
Monday 20 February 2023  14:11:20 +0200 (0:00:00.062)       0:07:06.420 *******

TASK [download : download_file | Create dest directory on node] ************************************
changed: [node1]
Monday 20 February 2023  14:11:22 +0200 (0:00:01.359)       0:07:07.779 *******
Monday 20 February 2023  14:11:22 +0200 (0:00:00.061)       0:07:07.841 *******
Monday 20 February 2023  14:11:22 +0200 (0:00:00.067)       0:07:07.908 *******

TASK [download : download_file | Validate mirrors] *************************************************
ok: [node1] => (item=None)
ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
Monday 20 February 2023  14:11:24 +0200 (0:00:02.076)       0:07:09.985 *******

TASK [download : download_file | Get the list of working mirrors] **********************************
ok: [node1]
Monday 20 February 2023  14:11:24 +0200 (0:00:00.085)       0:07:10.071 *******

TASK [download : download_file | Download item] ****************************************************
changed: [node1]
Monday 20 February 2023  14:11:27 +0200 (0:00:03.448)       0:07:13.519 *******
Monday 20 February 2023  14:11:27 +0200 (0:00:00.044)       0:07:13.564 *******
Monday 20 February 2023  14:11:27 +0200 (0:00:00.042)       0:07:13.607 *******
Monday 20 February 2023  14:11:27 +0200 (0:00:00.043)       0:07:13.650 *******

TASK [download : download_file | Extract file archives] ********************************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/extract_file.yml for node1
Monday 20 February 2023  14:11:28 +0200 (0:00:00.073)       0:07:13.723 *******

TASK [download : extract_file | Unpacking archive] *************************************************
changed: [node1]
Monday 20 February 2023  14:11:31 +0200 (0:00:03.578)       0:07:17.302 *******

TASK [download : set default values for flag variables] ********************************************
ok: [node1]
Monday 20 February 2023  14:11:31 +0200 (0:00:00.060)       0:07:17.363 *******

TASK [download : set_container_facts | Display the name of the image being processed] **************
ok: [node1] => {
    "msg": "registry.k8s.io/pause"
}
Monday 20 February 2023  14:11:31 +0200 (0:00:00.062)       0:07:17.426 *******

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***************
ok: [node1]
Monday 20 February 2023  14:11:31 +0200 (0:00:00.062)       0:07:17.488 *******

TASK [download : set_container_facts | Define by what name to pull the image] **********************
ok: [node1]
Monday 20 February 2023  14:11:31 +0200 (0:00:00.065)       0:07:17.554 *******

TASK [download : set_container_facts | Define file name of image] **********************************
ok: [node1]
Monday 20 February 2023  14:11:31 +0200 (0:00:00.060)       0:07:17.614 *******

TASK [download : set_container_facts | Define path of image] ***************************************
ok: [node1]
Monday 20 February 2023  14:11:31 +0200 (0:00:00.060)       0:07:17.674 *******
Monday 20 February 2023  14:11:32 +0200 (0:00:00.043)       0:07:17.718 *******

TASK [download : Set image save/load command for containerd] ***************************************
ok: [node1]
Monday 20 February 2023  14:11:32 +0200 (0:00:00.061)       0:07:17.780 *******
Monday 20 February 2023  14:11:32 +0200 (0:00:00.043)       0:07:17.823 *******
Monday 20 February 2023  14:11:32 +0200 (0:00:00.046)       0:07:17.870 *******

TASK [download : Set image save/load command for containerd on localhost] **************************
ok: [node1]
Monday 20 February 2023  14:11:32 +0200 (0:00:00.065)       0:07:17.936 *******
Monday 20 February 2023  14:11:32 +0200 (0:00:00.044)       0:07:17.980 *******

TASK [download : download_container | Prepare container download] **********************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/check_pull_required.yml for node1
Monday 20 February 2023  14:11:32 +0200 (0:00:00.078)       0:07:18.059 *******

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node1]
Monday 20 February 2023  14:11:33 +0200 (0:00:01.483)       0:07:19.542 *******

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
Monday 20 February 2023  14:11:33 +0200 (0:00:00.065)       0:07:19.608 *******
Monday 20 February 2023  14:11:33 +0200 (0:00:00.047)       0:07:19.655 *******

TASK [download : debug] ****************************************************************************
ok: [node1] => {
    "msg": "Pull registry.k8s.io/pause:3.6 required is: True"
}
Monday 20 February 2023  14:11:34 +0200 (0:00:00.066)       0:07:19.722 *******
Monday 20 February 2023  14:11:34 +0200 (0:00:00.045)       0:07:19.767 *******
Monday 20 February 2023  14:11:34 +0200 (0:00:00.042)       0:07:19.809 *******
Monday 20 February 2023  14:11:34 +0200 (0:00:00.059)       0:07:19.869 *******

TASK [download : download_container | Download image if required] **********************************
changed: [node1]
Monday 20 February 2023  14:11:35 +0200 (0:00:00.850)       0:07:20.720 *******
Monday 20 February 2023  14:11:35 +0200 (0:00:00.053)       0:07:20.774 *******
Monday 20 February 2023  14:11:35 +0200 (0:00:00.045)       0:07:20.819 *******
Monday 20 February 2023  14:11:35 +0200 (0:00:00.044)       0:07:20.863 *******
Monday 20 February 2023  14:11:35 +0200 (0:00:00.045)       0:07:20.909 *******

TASK [download : download_container | Remove container image from cache] ***************************
ok: [node1]
Monday 20 February 2023  14:11:36 +0200 (0:00:01.318)       0:07:22.227 *******

TASK [download : set default values for flag variables] ********************************************
ok: [node1]
Monday 20 February 2023  14:11:36 +0200 (0:00:00.058)       0:07:22.285 *******

TASK [download : set_container_facts | Display the name of the image being processed] **************
ok: [node1] => {
    "msg": "docker.io/library/nginx"
}
Monday 20 February 2023  14:11:36 +0200 (0:00:00.062)       0:07:22.348 *******

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***************
ok: [node1]
Monday 20 February 2023  14:11:36 +0200 (0:00:00.063)       0:07:22.412 *******

TASK [download : set_container_facts | Define by what name to pull the image] **********************
ok: [node1]
Monday 20 February 2023  14:11:36 +0200 (0:00:00.062)       0:07:22.474 *******

TASK [download : set_container_facts | Define file name of image] **********************************
ok: [node1]
Monday 20 February 2023  14:11:36 +0200 (0:00:00.058)       0:07:22.533 *******

TASK [download : set_container_facts | Define path of image] ***************************************
ok: [node1]
Monday 20 February 2023  14:11:36 +0200 (0:00:00.058)       0:07:22.592 *******
Monday 20 February 2023  14:11:36 +0200 (0:00:00.043)       0:07:22.636 *******

TASK [download : Set image save/load command for containerd] ***************************************
ok: [node1]
Monday 20 February 2023  14:11:37 +0200 (0:00:00.064)       0:07:22.700 *******
Monday 20 February 2023  14:11:37 +0200 (0:00:00.125)       0:07:22.826 *******
Monday 20 February 2023  14:11:37 +0200 (0:00:00.043)       0:07:22.869 *******

TASK [download : Set image save/load command for containerd on localhost] **************************
ok: [node1]
Monday 20 February 2023  14:11:37 +0200 (0:00:00.064)       0:07:22.934 *******
Monday 20 February 2023  14:11:37 +0200 (0:00:00.044)       0:07:22.978 *******

TASK [download : download_container | Prepare container download] **********************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/check_pull_required.yml for node1
Monday 20 February 2023  14:11:37 +0200 (0:00:00.080)       0:07:23.059 *******

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node1]
Monday 20 February 2023  14:11:38 +0200 (0:00:01.517)       0:07:24.576 *******

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
Monday 20 February 2023  14:11:38 +0200 (0:00:00.062)       0:07:24.638 *******
Monday 20 February 2023  14:11:39 +0200 (0:00:00.046)       0:07:24.685 *******

TASK [download : debug] ****************************************************************************
ok: [node1] => {
    "msg": "Pull docker.io/library/nginx:1.23.0-alpine required is: True"
}
Monday 20 February 2023  14:11:39 +0200 (0:00:00.064)       0:07:24.749 *******
Monday 20 February 2023  14:11:39 +0200 (0:00:00.041)       0:07:24.791 *******
Monday 20 February 2023  14:11:39 +0200 (0:00:00.043)       0:07:24.834 *******
Monday 20 February 2023  14:11:39 +0200 (0:00:00.060)       0:07:24.894 *******

TASK [download : download_container | Download image if required] **********************************
changed: [node1]
Monday 20 February 2023  14:11:44 +0200 (0:00:04.907)       0:07:29.802 *******
Monday 20 February 2023  14:11:44 +0200 (0:00:00.052)       0:07:29.854 *******
Monday 20 February 2023  14:11:44 +0200 (0:00:00.044)       0:07:29.899 *******
Monday 20 February 2023  14:11:44 +0200 (0:00:00.044)       0:07:29.943 *******
Monday 20 February 2023  14:11:44 +0200 (0:00:00.046)       0:07:29.990 *******

TASK [download : download_container | Remove container image from cache] ***************************
ok: [node1]
Monday 20 February 2023  14:11:45 +0200 (0:00:01.537)       0:07:31.528 *******

TASK [download : set default values for flag variables] ********************************************
ok: [node1]
Monday 20 February 2023  14:11:45 +0200 (0:00:00.058)       0:07:31.586 *******

TASK [download : set_container_facts | Display the name of the image being processed] **************
ok: [node1] => {
    "msg": "registry.k8s.io/coredns/coredns"
}
Monday 20 February 2023  14:11:45 +0200 (0:00:00.062)       0:07:31.648 *******

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***************
ok: [node1]
Monday 20 February 2023  14:11:46 +0200 (0:00:00.061)       0:07:31.710 *******

TASK [download : set_container_facts | Define by what name to pull the image] **********************
ok: [node1]
Monday 20 February 2023  14:11:46 +0200 (0:00:00.061)       0:07:31.771 *******

TASK [download : set_container_facts | Define file name of image] **********************************
ok: [node1]
Monday 20 February 2023  14:11:46 +0200 (0:00:00.059)       0:07:31.831 *******

TASK [download : set_container_facts | Define path of image] ***************************************
ok: [node1]
Monday 20 February 2023  14:11:46 +0200 (0:00:00.059)       0:07:31.891 *******
Monday 20 February 2023  14:11:46 +0200 (0:00:00.045)       0:07:31.936 *******

TASK [download : Set image save/load command for containerd] ***************************************
ok: [node1]
Monday 20 February 2023  14:11:46 +0200 (0:00:00.061)       0:07:31.998 *******
Monday 20 February 2023  14:11:46 +0200 (0:00:00.044)       0:07:32.042 *******
Monday 20 February 2023  14:11:46 +0200 (0:00:00.043)       0:07:32.086 *******

TASK [download : Set image save/load command for containerd on localhost] **************************
ok: [node1]
Monday 20 February 2023  14:11:46 +0200 (0:00:00.065)       0:07:32.152 *******
Monday 20 February 2023  14:11:46 +0200 (0:00:00.047)       0:07:32.199 *******

TASK [download : download_container | Prepare container download] **********************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/check_pull_required.yml for node1
Monday 20 February 2023  14:11:46 +0200 (0:00:00.079)       0:07:32.279 *******

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node1]
Monday 20 February 2023  14:11:48 +0200 (0:00:01.601)       0:07:33.880 *******

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
Monday 20 February 2023  14:11:48 +0200 (0:00:00.064)       0:07:33.945 *******
Monday 20 February 2023  14:11:48 +0200 (0:00:00.044)       0:07:33.989 *******

TASK [download : debug] ****************************************************************************
ok: [node1] => {
    "msg": "Pull registry.k8s.io/coredns/coredns:v1.8.6 required is: True"
}
Monday 20 February 2023  14:11:48 +0200 (0:00:00.064)       0:07:34.054 *******
Monday 20 February 2023  14:11:48 +0200 (0:00:00.042)       0:07:34.096 *******
Monday 20 February 2023  14:11:48 +0200 (0:00:00.044)       0:07:34.141 *******
Monday 20 February 2023  14:11:48 +0200 (0:00:00.061)       0:07:34.202 *******

TASK [download : download_container | Download image if required] **********************************
changed: [node1]
Monday 20 February 2023  14:11:51 +0200 (0:00:03.279)       0:07:37.482 *******
Monday 20 February 2023  14:11:51 +0200 (0:00:00.052)       0:07:37.535 *******
Monday 20 February 2023  14:11:51 +0200 (0:00:00.044)       0:07:37.580 *******
Monday 20 February 2023  14:11:51 +0200 (0:00:00.044)       0:07:37.624 *******
Monday 20 February 2023  14:11:51 +0200 (0:00:00.044)       0:07:37.669 *******

TASK [download : download_container | Remove container image from cache] ***************************
ok: [node1]
Monday 20 February 2023  14:11:53 +0200 (0:00:01.375)       0:07:39.044 *******

TASK [download : set default values for flag variables] ********************************************
ok: [node1]
Monday 20 February 2023  14:11:53 +0200 (0:00:00.058)       0:07:39.103 *******

TASK [download : set_container_facts | Display the name of the image being processed] **************
ok: [node1] => {
    "msg": "registry.k8s.io/dns/k8s-dns-node-cache"
}
Monday 20 February 2023  14:11:53 +0200 (0:00:00.061)       0:07:39.165 *******

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***************
ok: [node1]
Monday 20 February 2023  14:11:53 +0200 (0:00:00.062)       0:07:39.227 *******

TASK [download : set_container_facts | Define by what name to pull the image] **********************
ok: [node1]
Monday 20 February 2023  14:11:53 +0200 (0:00:00.062)       0:07:39.290 *******

TASK [download : set_container_facts | Define file name of image] **********************************
ok: [node1]
Monday 20 February 2023  14:11:53 +0200 (0:00:00.063)       0:07:39.354 *******

TASK [download : set_container_facts | Define path of image] ***************************************
ok: [node1]
Monday 20 February 2023  14:11:53 +0200 (0:00:00.060)       0:07:39.414 *******
Monday 20 February 2023  14:11:53 +0200 (0:00:00.043)       0:07:39.457 *******

TASK [download : Set image save/load command for containerd] ***************************************
ok: [node1]
Monday 20 February 2023  14:11:53 +0200 (0:00:00.061)       0:07:39.519 *******
Monday 20 February 2023  14:11:53 +0200 (0:00:00.043)       0:07:39.563 *******
Monday 20 February 2023  14:11:53 +0200 (0:00:00.043)       0:07:39.606 *******

TASK [download : Set image save/load command for containerd on localhost] **************************
ok: [node1]
Monday 20 February 2023  14:11:53 +0200 (0:00:00.067)       0:07:39.674 *******
Monday 20 February 2023  14:11:54 +0200 (0:00:00.044)       0:07:39.719 *******

TASK [download : download_container | Prepare container download] **********************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/check_pull_required.yml for node1
Monday 20 February 2023  14:11:54 +0200 (0:00:00.080)       0:07:39.799 *******

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node1]
Monday 20 February 2023  14:11:55 +0200 (0:00:01.658)       0:07:41.458 *******

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
Monday 20 February 2023  14:11:55 +0200 (0:00:00.062)       0:07:41.521 *******
Monday 20 February 2023  14:11:55 +0200 (0:00:00.045)       0:07:41.567 *******

TASK [download : debug] ****************************************************************************
ok: [node1] => {
    "msg": "Pull registry.k8s.io/dns/k8s-dns-node-cache:1.21.1 required is: True"
}
Monday 20 February 2023  14:11:55 +0200 (0:00:00.065)       0:07:41.632 *******
Monday 20 February 2023  14:11:55 +0200 (0:00:00.042)       0:07:41.675 *******
Monday 20 February 2023  14:11:56 +0200 (0:00:00.042)       0:07:41.717 *******
Monday 20 February 2023  14:11:56 +0200 (0:00:00.059)       0:07:41.777 *******

TASK [download : download_container | Download image if required] **********************************
changed: [node1]
Monday 20 February 2023  14:11:59 +0200 (0:00:03.410)       0:07:45.187 *******
Monday 20 February 2023  14:11:59 +0200 (0:00:00.053)       0:07:45.241 *******
Monday 20 February 2023  14:11:59 +0200 (0:00:00.044)       0:07:45.286 *******
Monday 20 February 2023  14:11:59 +0200 (0:00:00.044)       0:07:45.331 *******
Monday 20 February 2023  14:11:59 +0200 (0:00:00.044)       0:07:45.375 *******

TASK [download : download_container | Remove container image from cache] ***************************
ok: [node1]
Monday 20 February 2023  14:12:01 +0200 (0:00:01.956)       0:07:47.331 *******

TASK [download : set default values for flag variables] ********************************************
ok: [node1]
Monday 20 February 2023  14:12:01 +0200 (0:00:00.060)       0:07:47.392 *******

TASK [download : set_container_facts | Display the name of the image being processed] **************
ok: [node1] => {
    "msg": "registry.k8s.io/cpa/cluster-proportional-autoscaler-amd64"
}
Monday 20 February 2023  14:12:01 +0200 (0:00:00.061)       0:07:47.454 *******

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***************
ok: [node1]
Monday 20 February 2023  14:12:01 +0200 (0:00:00.062)       0:07:47.516 *******

TASK [download : set_container_facts | Define by what name to pull the image] **********************
ok: [node1]
Monday 20 February 2023  14:12:01 +0200 (0:00:00.063)       0:07:47.580 *******

TASK [download : set_container_facts | Define file name of image] **********************************
ok: [node1]
Monday 20 February 2023  14:12:01 +0200 (0:00:00.063)       0:07:47.644 *******

TASK [download : set_container_facts | Define path of image] ***************************************
ok: [node1]
Monday 20 February 2023  14:12:02 +0200 (0:00:00.061)       0:07:47.705 *******
Monday 20 February 2023  14:12:02 +0200 (0:00:00.043)       0:07:47.749 *******

TASK [download : Set image save/load command for containerd] ***************************************
ok: [node1]
Monday 20 February 2023  14:12:02 +0200 (0:00:00.060)       0:07:47.810 *******
Monday 20 February 2023  14:12:02 +0200 (0:00:00.043)       0:07:47.853 *******
Monday 20 February 2023  14:12:02 +0200 (0:00:00.043)       0:07:47.896 *******

TASK [download : Set image save/load command for containerd on localhost] **************************
ok: [node1]
Monday 20 February 2023  14:12:02 +0200 (0:00:00.068)       0:07:47.965 *******
Monday 20 February 2023  14:12:02 +0200 (0:00:00.045)       0:07:48.011 *******

TASK [download : download_container | Prepare container download] **********************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/check_pull_required.yml for node1
Monday 20 February 2023  14:12:02 +0200 (0:00:00.078)       0:07:48.089 *******

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node1]
Monday 20 February 2023  14:12:04 +0200 (0:00:01.785)       0:07:49.874 *******

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
Monday 20 February 2023  14:12:04 +0200 (0:00:00.063)       0:07:49.937 *******
Monday 20 February 2023  14:12:04 +0200 (0:00:00.045)       0:07:49.983 *******

TASK [download : debug] ****************************************************************************
ok: [node1] => {
    "msg": "Pull registry.k8s.io/cpa/cluster-proportional-autoscaler-amd64:1.8.5 required is: True"
}
Monday 20 February 2023  14:12:04 +0200 (0:00:00.064)       0:07:50.048 *******
Monday 20 February 2023  14:12:04 +0200 (0:00:00.042)       0:07:50.091 *******
Monday 20 February 2023  14:12:04 +0200 (0:00:00.042)       0:07:50.134 *******
Monday 20 February 2023  14:12:04 +0200 (0:00:00.061)       0:07:50.195 *******

TASK [download : download_container | Download image if required] **********************************
changed: [node1]
Monday 20 February 2023  14:12:06 +0200 (0:00:01.725)       0:07:51.921 *******
Monday 20 February 2023  14:12:06 +0200 (0:00:00.052)       0:07:51.973 *******
Monday 20 February 2023  14:12:06 +0200 (0:00:00.043)       0:07:52.017 *******
Monday 20 February 2023  14:12:06 +0200 (0:00:00.044)       0:07:52.062 *******
Monday 20 February 2023  14:12:06 +0200 (0:00:00.044)       0:07:52.106 *******

TASK [download : download_container | Remove container image from cache] ***************************
ok: [node1]
Monday 20 February 2023  14:12:07 +0200 (0:00:01.329)       0:07:53.435 *******

TASK [download : set default values for flag variables] ********************************************
ok: [node1]
Monday 20 February 2023  14:12:07 +0200 (0:00:00.061)       0:07:53.497 *******

TASK [download : set_container_facts | Display the name of the image being processed] **************
ok: [node1] => {
    "msg": "quay.io/metallb/speaker"
}
Monday 20 February 2023  14:12:07 +0200 (0:00:00.074)       0:07:53.571 *******

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***************
ok: [node1]
Monday 20 February 2023  14:12:07 +0200 (0:00:00.067)       0:07:53.638 *******

TASK [download : set_container_facts | Define by what name to pull the image] **********************
ok: [node1]
Monday 20 February 2023  14:12:08 +0200 (0:00:00.063)       0:07:53.701 *******

TASK [download : set_container_facts | Define file name of image] **********************************
ok: [node1]
Monday 20 February 2023  14:12:08 +0200 (0:00:00.061)       0:07:53.763 *******

TASK [download : set_container_facts | Define path of image] ***************************************
ok: [node1]
Monday 20 February 2023  14:12:08 +0200 (0:00:00.060)       0:07:53.824 *******
Monday 20 February 2023  14:12:08 +0200 (0:00:00.043)       0:07:53.867 *******

TASK [download : Set image save/load command for containerd] ***************************************
ok: [node1]
Monday 20 February 2023  14:12:08 +0200 (0:00:00.061)       0:07:53.929 *******
Monday 20 February 2023  14:12:08 +0200 (0:00:00.043)       0:07:53.972 *******
Monday 20 February 2023  14:12:08 +0200 (0:00:00.048)       0:07:54.020 *******

TASK [download : Set image save/load command for containerd on localhost] **************************
ok: [node1]
Monday 20 February 2023  14:12:08 +0200 (0:00:00.065)       0:07:54.086 *******
Monday 20 February 2023  14:12:08 +0200 (0:00:00.044)       0:07:54.130 *******

TASK [download : download_container | Prepare container download] **********************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/check_pull_required.yml for node1
Monday 20 February 2023  14:12:08 +0200 (0:00:00.079)       0:07:54.210 *******

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node1]
Monday 20 February 2023  14:12:10 +0200 (0:00:01.619)       0:07:55.829 *******

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
Monday 20 February 2023  14:12:10 +0200 (0:00:00.064)       0:07:55.894 *******
Monday 20 February 2023  14:12:10 +0200 (0:00:00.045)       0:07:55.940 *******

TASK [download : debug] ****************************************************************************
ok: [node1] => {
    "msg": "Pull quay.io/metallb/speaker:v0.12.1 required is: True"
}
Monday 20 February 2023  14:12:10 +0200 (0:00:00.065)       0:07:56.005 *******
Monday 20 February 2023  14:12:10 +0200 (0:00:00.043)       0:07:56.048 *******
Monday 20 February 2023  14:12:10 +0200 (0:00:00.042)       0:07:56.091 *******
Monday 20 February 2023  14:12:10 +0200 (0:00:00.059)       0:07:56.151 *******

TASK [download : download_container | Download image if required] **********************************
changed: [node1]
Monday 20 February 2023  14:12:14 +0200 (0:00:03.939)       0:08:00.090 *******
Monday 20 February 2023  14:12:14 +0200 (0:00:00.053)       0:08:00.143 *******
Monday 20 February 2023  14:12:14 +0200 (0:00:00.044)       0:08:00.188 *******
Monday 20 February 2023  14:12:14 +0200 (0:00:00.044)       0:08:00.233 *******
Monday 20 February 2023  14:12:14 +0200 (0:00:00.043)       0:08:00.276 *******

TASK [download : download_container | Remove container image from cache] ***************************
ok: [node1]
Monday 20 February 2023  14:12:15 +0200 (0:00:01.247)       0:08:01.524 *******

TASK [download : set default values for flag variables] ********************************************
ok: [node1]
Monday 20 February 2023  14:12:15 +0200 (0:00:00.059)       0:08:01.583 *******

TASK [download : set_container_facts | Display the name of the image being processed] **************
ok: [node1] => {
    "msg": "quay.io/metallb/controller"
}
Monday 20 February 2023  14:12:15 +0200 (0:00:00.062)       0:08:01.646 *******

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***************
ok: [node1]
Monday 20 February 2023  14:12:16 +0200 (0:00:00.062)       0:08:01.709 *******

TASK [download : set_container_facts | Define by what name to pull the image] **********************
ok: [node1]
Monday 20 February 2023  14:12:16 +0200 (0:00:00.062)       0:08:01.771 *******

TASK [download : set_container_facts | Define file name of image] **********************************
ok: [node1]
Monday 20 February 2023  14:12:16 +0200 (0:00:00.059)       0:08:01.830 *******

TASK [download : set_container_facts | Define path of image] ***************************************
ok: [node1]
Monday 20 February 2023  14:12:16 +0200 (0:00:00.060)       0:08:01.891 *******
Monday 20 February 2023  14:12:16 +0200 (0:00:00.045)       0:08:01.936 *******

TASK [download : Set image save/load command for containerd] ***************************************
ok: [node1]
Monday 20 February 2023  14:12:16 +0200 (0:00:00.062)       0:08:01.999 *******
Monday 20 February 2023  14:12:16 +0200 (0:00:00.043)       0:08:02.042 *******
Monday 20 February 2023  14:12:16 +0200 (0:00:00.043)       0:08:02.086 *******

TASK [download : Set image save/load command for containerd on localhost] **************************
ok: [node1]
Monday 20 February 2023  14:12:16 +0200 (0:00:00.064)       0:08:02.151 *******
Monday 20 February 2023  14:12:16 +0200 (0:00:00.044)       0:08:02.195 *******

TASK [download : download_container | Prepare container download] **********************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/check_pull_required.yml for node1
Monday 20 February 2023  14:12:16 +0200 (0:00:00.160)       0:08:02.356 *******

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node1]
Monday 20 February 2023  14:12:18 +0200 (0:00:01.742)       0:08:04.099 *******

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
Monday 20 February 2023  14:12:18 +0200 (0:00:00.064)       0:08:04.163 *******
Monday 20 February 2023  14:12:18 +0200 (0:00:00.044)       0:08:04.207 *******

TASK [download : debug] ****************************************************************************
ok: [node1] => {
    "msg": "Pull quay.io/metallb/controller:v0.12.1 required is: True"
}
Monday 20 February 2023  14:12:18 +0200 (0:00:00.065)       0:08:04.272 *******
Monday 20 February 2023  14:12:18 +0200 (0:00:00.043)       0:08:04.316 *******
Monday 20 February 2023  14:12:18 +0200 (0:00:00.042)       0:08:04.358 *******
Monday 20 February 2023  14:12:18 +0200 (0:00:00.060)       0:08:04.419 *******

TASK [download : download_container | Download image if required] **********************************
changed: [node1]
Monday 20 February 2023  14:12:21 +0200 (0:00:03.114)       0:08:07.534 *******
Monday 20 February 2023  14:12:21 +0200 (0:00:00.052)       0:08:07.587 *******
Monday 20 February 2023  14:12:21 +0200 (0:00:00.044)       0:08:07.631 *******
Monday 20 February 2023  14:12:21 +0200 (0:00:00.043)       0:08:07.674 *******
Monday 20 February 2023  14:12:22 +0200 (0:00:00.043)       0:08:07.718 *******

TASK [download : download_container | Remove container image from cache] ***************************
ok: [node1]
Monday 20 February 2023  14:12:23 +0200 (0:00:01.336)       0:08:09.054 *******

TASK [download : set default values for flag variables] ********************************************
ok: [node1]
Monday 20 February 2023  14:12:23 +0200 (0:00:00.059)       0:08:09.114 *******

TASK [download : set_container_facts | Display the name of the image being processed] **************
ok: [node1] => {
    "msg": "registry.k8s.io/kube-apiserver"
}
Monday 20 February 2023  14:12:23 +0200 (0:00:00.063)       0:08:09.177 *******

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***************
ok: [node1]
Monday 20 February 2023  14:12:23 +0200 (0:00:00.061)       0:08:09.239 *******

TASK [download : set_container_facts | Define by what name to pull the image] **********************
ok: [node1]
Monday 20 February 2023  14:12:23 +0200 (0:00:00.063)       0:08:09.302 *******

TASK [download : set_container_facts | Define file name of image] **********************************
ok: [node1]
Monday 20 February 2023  14:12:23 +0200 (0:00:00.059)       0:08:09.362 *******

TASK [download : set_container_facts | Define path of image] ***************************************
ok: [node1]
Monday 20 February 2023  14:12:23 +0200 (0:00:00.060)       0:08:09.423 *******
Monday 20 February 2023  14:12:23 +0200 (0:00:00.045)       0:08:09.469 *******

TASK [download : Set image save/load command for containerd] ***************************************
ok: [node1]
Monday 20 February 2023  14:12:23 +0200 (0:00:00.062)       0:08:09.531 *******
Monday 20 February 2023  14:12:23 +0200 (0:00:00.044)       0:08:09.575 *******
Monday 20 February 2023  14:12:23 +0200 (0:00:00.043)       0:08:09.619 *******

TASK [download : Set image save/load command for containerd on localhost] **************************
ok: [node1]
Monday 20 February 2023  14:12:24 +0200 (0:00:00.064)       0:08:09.683 *******
Monday 20 February 2023  14:12:24 +0200 (0:00:00.044)       0:08:09.728 *******

TASK [download : download_container | Prepare container download] **********************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/check_pull_required.yml for node1
Monday 20 February 2023  14:12:24 +0200 (0:00:00.080)       0:08:09.809 *******

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node1]
Monday 20 February 2023  14:12:25 +0200 (0:00:01.858)       0:08:11.667 *******

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
Monday 20 February 2023  14:12:26 +0200 (0:00:00.064)       0:08:11.731 *******
Monday 20 February 2023  14:12:26 +0200 (0:00:00.045)       0:08:11.776 *******

TASK [download : debug] ****************************************************************************
ok: [node1] => {
    "msg": "Pull registry.k8s.io/kube-apiserver:v1.24.6 required is: True"
}
Monday 20 February 2023  14:12:26 +0200 (0:00:00.064)       0:08:11.841 *******
Monday 20 February 2023  14:12:26 +0200 (0:00:00.044)       0:08:11.885 *******
Monday 20 February 2023  14:12:26 +0200 (0:00:00.041)       0:08:11.927 *******
Monday 20 February 2023  14:12:26 +0200 (0:00:00.060)       0:08:11.987 *******

TASK [download : download_container | Download image if required] **********************************
changed: [node1]
Monday 20 February 2023  14:12:29 +0200 (0:00:03.075)       0:08:15.062 *******
Monday 20 February 2023  14:12:29 +0200 (0:00:00.052)       0:08:15.115 *******
Monday 20 February 2023  14:12:29 +0200 (0:00:00.044)       0:08:15.160 *******
Monday 20 February 2023  14:12:29 +0200 (0:00:00.043)       0:08:15.203 *******
Monday 20 February 2023  14:12:29 +0200 (0:00:00.043)       0:08:15.247 *******

TASK [download : download_container | Remove container image from cache] ***************************
ok: [node1]
Monday 20 February 2023  14:12:30 +0200 (0:00:01.252)       0:08:16.500 *******

TASK [download : set default values for flag variables] ********************************************
ok: [node1]
Monday 20 February 2023  14:12:30 +0200 (0:00:00.060)       0:08:16.561 *******

TASK [download : set_container_facts | Display the name of the image being processed] **************
ok: [node1] => {
    "msg": "registry.k8s.io/kube-controller-manager"
}
Monday 20 February 2023  14:12:30 +0200 (0:00:00.062)       0:08:16.623 *******

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***************
ok: [node1]
Monday 20 February 2023  14:12:31 +0200 (0:00:00.062)       0:08:16.685 *******

TASK [download : set_container_facts | Define by what name to pull the image] **********************
ok: [node1]
Monday 20 February 2023  14:12:31 +0200 (0:00:00.061)       0:08:16.747 *******

TASK [download : set_container_facts | Define file name of image] **********************************
ok: [node1]
Monday 20 February 2023  14:12:31 +0200 (0:00:00.060)       0:08:16.808 *******

TASK [download : set_container_facts | Define path of image] ***************************************
ok: [node1]
Monday 20 February 2023  14:12:31 +0200 (0:00:00.063)       0:08:16.872 *******
Monday 20 February 2023  14:12:31 +0200 (0:00:00.042)       0:08:16.914 *******

TASK [download : Set image save/load command for containerd] ***************************************
ok: [node1]
Monday 20 February 2023  14:12:31 +0200 (0:00:00.062)       0:08:16.976 *******
Monday 20 February 2023  14:12:31 +0200 (0:00:00.043)       0:08:17.020 *******
Monday 20 February 2023  14:12:31 +0200 (0:00:00.044)       0:08:17.064 *******

TASK [download : Set image save/load command for containerd on localhost] **************************
ok: [node1]
Monday 20 February 2023  14:12:31 +0200 (0:00:00.066)       0:08:17.130 *******
Monday 20 February 2023  14:12:31 +0200 (0:00:00.047)       0:08:17.177 *******

TASK [download : download_container | Prepare container download] **********************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/check_pull_required.yml for node1
Monday 20 February 2023  14:12:31 +0200 (0:00:00.079)       0:08:17.257 *******

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node1]
Monday 20 February 2023  14:12:33 +0200 (0:00:01.782)       0:08:19.040 *******

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
Monday 20 February 2023  14:12:33 +0200 (0:00:00.063)       0:08:19.103 *******
Monday 20 February 2023  14:12:33 +0200 (0:00:00.046)       0:08:19.150 *******

TASK [download : debug] ****************************************************************************
ok: [node1] => {
    "msg": "Pull registry.k8s.io/kube-controller-manager:v1.24.6 required is: True"
}
Monday 20 February 2023  14:12:33 +0200 (0:00:00.064)       0:08:19.214 *******
Monday 20 February 2023  14:12:33 +0200 (0:00:00.043)       0:08:19.258 *******
Monday 20 February 2023  14:12:33 +0200 (0:00:00.042)       0:08:19.300 *******
Monday 20 February 2023  14:12:33 +0200 (0:00:00.059)       0:08:19.360 *******

TASK [download : download_container | Download image if required] **********************************
changed: [node1]
Monday 20 February 2023  14:12:36 +0200 (0:00:02.920)       0:08:22.281 *******
Monday 20 February 2023  14:12:36 +0200 (0:00:00.056)       0:08:22.338 *******
Monday 20 February 2023  14:12:36 +0200 (0:00:00.044)       0:08:22.382 *******
Monday 20 February 2023  14:12:36 +0200 (0:00:00.044)       0:08:22.426 *******
Monday 20 February 2023  14:12:36 +0200 (0:00:00.044)       0:08:22.471 *******

TASK [download : download_container | Remove container image from cache] ***************************
ok: [node1]
Monday 20 February 2023  14:12:38 +0200 (0:00:01.370)       0:08:23.842 *******

TASK [download : set default values for flag variables] ********************************************
ok: [node1]
Monday 20 February 2023  14:12:38 +0200 (0:00:00.059)       0:08:23.901 *******

TASK [download : set_container_facts | Display the name of the image being processed] **************
ok: [node1] => {
    "msg": "registry.k8s.io/kube-scheduler"
}
Monday 20 February 2023  14:12:38 +0200 (0:00:00.062)       0:08:23.964 *******

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***************
ok: [node1]
Monday 20 February 2023  14:12:38 +0200 (0:00:00.062)       0:08:24.027 *******

TASK [download : set_container_facts | Define by what name to pull the image] **********************
ok: [node1]
Monday 20 February 2023  14:12:38 +0200 (0:00:00.063)       0:08:24.090 *******

TASK [download : set_container_facts | Define file name of image] **********************************
ok: [node1]
Monday 20 February 2023  14:12:38 +0200 (0:00:00.060)       0:08:24.150 *******

TASK [download : set_container_facts | Define path of image] ***************************************
ok: [node1]
Monday 20 February 2023  14:12:38 +0200 (0:00:00.062)       0:08:24.212 *******
Monday 20 February 2023  14:12:38 +0200 (0:00:00.043)       0:08:24.256 *******

TASK [download : Set image save/load command for containerd] ***************************************
ok: [node1]
Monday 20 February 2023  14:12:38 +0200 (0:00:00.061)       0:08:24.318 *******
Monday 20 February 2023  14:12:38 +0200 (0:00:00.044)       0:08:24.362 *******
Monday 20 February 2023  14:12:38 +0200 (0:00:00.043)       0:08:24.406 *******

TASK [download : Set image save/load command for containerd on localhost] **************************
ok: [node1]
Monday 20 February 2023  14:12:38 +0200 (0:00:00.065)       0:08:24.471 *******
Monday 20 February 2023  14:12:38 +0200 (0:00:00.047)       0:08:24.518 *******

TASK [download : download_container | Prepare container download] **********************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/check_pull_required.yml for node1
Monday 20 February 2023  14:12:38 +0200 (0:00:00.079)       0:08:24.597 *******

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node1]
Monday 20 February 2023  14:12:40 +0200 (0:00:01.814)       0:08:26.412 *******

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
Monday 20 February 2023  14:12:40 +0200 (0:00:00.062)       0:08:26.475 *******
Monday 20 February 2023  14:12:40 +0200 (0:00:00.045)       0:08:26.520 *******

TASK [download : debug] ****************************************************************************
ok: [node1] => {
    "msg": "Pull registry.k8s.io/kube-scheduler:v1.24.6 required is: True"
}
Monday 20 February 2023  14:12:40 +0200 (0:00:00.064)       0:08:26.584 *******
Monday 20 February 2023  14:12:40 +0200 (0:00:00.042)       0:08:26.627 *******
Monday 20 February 2023  14:12:40 +0200 (0:00:00.041)       0:08:26.668 *******
Monday 20 February 2023  14:12:41 +0200 (0:00:00.062)       0:08:26.731 *******

TASK [download : download_container | Download image if required] **********************************
changed: [node1]
Monday 20 February 2023  14:12:43 +0200 (0:00:01.953)       0:08:28.685 *******
Monday 20 February 2023  14:12:43 +0200 (0:00:00.052)       0:08:28.737 *******
Monday 20 February 2023  14:12:43 +0200 (0:00:00.046)       0:08:28.783 *******
Monday 20 February 2023  14:12:43 +0200 (0:00:00.043)       0:08:28.827 *******
Monday 20 February 2023  14:12:43 +0200 (0:00:00.044)       0:08:28.872 *******

TASK [download : download_container | Remove container image from cache] ***************************
ok: [node1]
Monday 20 February 2023  14:12:44 +0200 (0:00:01.269)       0:08:30.142 *******

TASK [download : set default values for flag variables] ********************************************
ok: [node1]
Monday 20 February 2023  14:12:44 +0200 (0:00:00.058)       0:08:30.200 *******

TASK [download : set_container_facts | Display the name of the image being processed] **************
ok: [node1] => {
    "msg": "registry.k8s.io/kube-proxy"
}
Monday 20 February 2023  14:12:44 +0200 (0:00:00.062)       0:08:30.263 *******

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***************
ok: [node1]
Monday 20 February 2023  14:12:44 +0200 (0:00:00.063)       0:08:30.327 *******

TASK [download : set_container_facts | Define by what name to pull the image] **********************
ok: [node1]
Monday 20 February 2023  14:12:44 +0200 (0:00:00.062)       0:08:30.389 *******

TASK [download : set_container_facts | Define file name of image] **********************************
ok: [node1]
Monday 20 February 2023  14:12:44 +0200 (0:00:00.060)       0:08:30.450 *******

TASK [download : set_container_facts | Define path of image] ***************************************
ok: [node1]
Monday 20 February 2023  14:12:44 +0200 (0:00:00.059)       0:08:30.509 *******
Monday 20 February 2023  14:12:44 +0200 (0:00:00.044)       0:08:30.554 *******

TASK [download : Set image save/load command for containerd] ***************************************
ok: [node1]
Monday 20 February 2023  14:12:44 +0200 (0:00:00.061)       0:08:30.615 *******
Monday 20 February 2023  14:12:44 +0200 (0:00:00.045)       0:08:30.661 *******
Monday 20 February 2023  14:12:45 +0200 (0:00:00.043)       0:08:30.705 *******

TASK [download : Set image save/load command for containerd on localhost] **************************
ok: [node1]
Monday 20 February 2023  14:12:45 +0200 (0:00:00.065)       0:08:30.770 *******
Monday 20 February 2023  14:12:45 +0200 (0:00:00.046)       0:08:30.816 *******

TASK [download : download_container | Prepare container download] **********************************
included: /Users/max/DevOps/kubespray/roles/download/tasks/check_pull_required.yml for node1
Monday 20 February 2023  14:12:45 +0200 (0:00:00.081)       0:08:30.897 *******

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node1]
Monday 20 February 2023  14:12:46 +0200 (0:00:01.761)       0:08:32.659 *******

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
Monday 20 February 2023  14:12:47 +0200 (0:00:00.063)       0:08:32.722 *******
Monday 20 February 2023  14:12:47 +0200 (0:00:00.044)       0:08:32.767 *******

TASK [download : debug] ****************************************************************************
ok: [node1] => {
    "msg": "Pull registry.k8s.io/kube-proxy:v1.24.6 required is: True"
}
Monday 20 February 2023  14:12:47 +0200 (0:00:00.063)       0:08:32.830 *******
Monday 20 February 2023  14:12:47 +0200 (0:00:00.043)       0:08:32.873 *******
Monday 20 February 2023  14:12:47 +0200 (0:00:00.043)       0:08:32.917 *******
Monday 20 February 2023  14:12:47 +0200 (0:00:00.059)       0:08:32.976 *******

TASK [download : download_container | Download image if required] **********************************
changed: [node1]
Monday 20 February 2023  14:12:50 +0200 (0:00:03.591)       0:08:36.567 *******
Monday 20 February 2023  14:12:50 +0200 (0:00:00.053)       0:08:36.621 *******
Monday 20 February 2023  14:12:50 +0200 (0:00:00.045)       0:08:36.666 *******
Monday 20 February 2023  14:12:51 +0200 (0:00:00.044)       0:08:36.710 *******
Monday 20 February 2023  14:12:51 +0200 (0:00:00.044)       0:08:36.755 *******

TASK [download : download_container | Remove container image from cache] ***************************
ok: [node1]

PLAY [etcd:kube_control_plane] *********************************************************************
Monday 20 February 2023  14:12:52 +0200 (0:00:01.429)       0:08:38.185 *******
Monday 20 February 2023  14:12:52 +0200 (0:00:00.047)       0:08:38.233 *******
Monday 20 February 2023  14:12:52 +0200 (0:00:00.050)       0:08:38.283 *******
Monday 20 February 2023  14:12:52 +0200 (0:00:00.043)       0:08:38.327 *******
Monday 20 February 2023  14:12:52 +0200 (0:00:00.041)       0:08:38.369 *******
Monday 20 February 2023  14:12:52 +0200 (0:00:00.042)       0:08:38.411 *******
Monday 20 February 2023  14:12:52 +0200 (0:00:00.044)       0:08:38.456 *******
Monday 20 February 2023  14:12:52 +0200 (0:00:00.046)       0:08:38.503 *******
Monday 20 February 2023  14:12:52 +0200 (0:00:00.046)       0:08:38.550 *******
Monday 20 February 2023  14:12:52 +0200 (0:00:00.043)       0:08:38.593 *******
Monday 20 February 2023  14:12:53 +0200 (0:00:00.887)       0:08:39.480 *******

TASK [kubespray-defaults : Configure defaults] *****************************************************
ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
Monday 20 February 2023  14:12:53 +0200 (0:00:00.054)       0:08:39.535 *******
Monday 20 February 2023  14:12:53 +0200 (0:00:00.059)       0:08:39.595 *******
Monday 20 February 2023  14:12:53 +0200 (0:00:00.043)       0:08:39.638 *******
Monday 20 February 2023  14:12:54 +0200 (0:00:00.046)       0:08:39.685 *******
Monday 20 February 2023  14:12:54 +0200 (0:00:00.046)       0:08:39.731 *******
Monday 20 February 2023  14:12:54 +0200 (0:00:00.042)       0:08:39.774 *******
Monday 20 February 2023  14:12:54 +0200 (0:00:00.052)       0:08:39.827 *******

TASK [adduser : User | Create User Group] **********************************************************
changed: [node1]
Monday 20 February 2023  14:12:55 +0200 (0:00:01.332)       0:08:41.159 *******

TASK [adduser : User | Create User] ****************************************************************
changed: [node1]
Monday 20 February 2023  14:12:56 +0200 (0:00:01.392)       0:08:42.551 *******

TASK [adduser : User | Create User Group] **********************************************************
ok: [node1]
Monday 20 February 2023  14:12:58 +0200 (0:00:01.251)       0:08:43.803 *******

TASK [adduser : User | Create User] ****************************************************************
ok: [node1]
Monday 20 February 2023  14:12:59 +0200 (0:00:01.358)       0:08:45.161 *******

TASK [etcd : include_tasks] ************************************************************************
included: /Users/max/DevOps/kubespray/roles/etcd/tasks/check_certs.yml for node1
Monday 20 February 2023  14:12:59 +0200 (0:00:00.084)       0:08:45.246 *******

TASK [etcd : Check_certs | Register certs that have already been generated on first etcd node] *****
[WARNING]: Skipped '/etc/ssl/etcd/ssl' path due to this access issue: '/etc/ssl/etcd/ssl' is not a
directory
ok: [node1]
Monday 20 February 2023  14:12:59 +0200 (0:00:00.387)       0:08:45.634 *******

TASK [etcd : Check_certs | Set default value for 'sync_certs', 'gen_certs' and 'etcd_secret_changed' to false] ***
ok: [node1]
Monday 20 February 2023  14:13:00 +0200 (0:00:00.058)       0:08:45.692 *******

TASK [etcd : Check certs | Register ca and etcd admin/member certs on etcd hosts] ******************
ok: [node1] => (item=ca.pem)
ok: [node1] => (item=member-node1.pem)
ok: [node1] => (item=member-node1-key.pem)
ok: [node1] => (item=admin-node1.pem)
ok: [node1] => (item=admin-node1-key.pem)
Monday 20 February 2023  14:13:06 +0200 (0:00:06.155)       0:08:51.847 *******

TASK [etcd : Check certs | Register ca and etcd node certs on kubernetes hosts] ********************
ok: [node1] => (item=ca.pem)
ok: [node1] => (item=node-node1.pem)
ok: [node1] => (item=node-node1-key.pem)
Monday 20 February 2023  14:13:10 +0200 (0:00:03.834)       0:08:55.682 *******

TASK [etcd : Check_certs | Set 'gen_certs' to true if expected certificates are not on the first etcd node(1/2)] ***
ok: [node1] => (item=/etc/ssl/etcd/ssl/ca.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/admin-node1.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/admin-node1-key.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/member-node1.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/member-node1-key.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/node-node1.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/node-node1-key.pem)
Monday 20 February 2023  14:13:10 +0200 (0:00:00.165)       0:08:55.848 *******
Monday 20 February 2023  14:13:10 +0200 (0:00:00.116)       0:08:55.964 *******

TASK [etcd : Check_certs | Set 'gen_master_certs' object to track whether member and admin certs exist on first etcd node] ***
ok: [node1]
Monday 20 February 2023  14:13:10 +0200 (0:00:00.064)       0:08:56.028 *******

TASK [etcd : Check_certs | Set 'gen_node_certs' object to track whether node certs exist on first etcd node] ***
ok: [node1]
Monday 20 February 2023  14:13:10 +0200 (0:00:00.062)       0:08:56.091 *******

TASK [etcd : Check_certs | Set 'etcd_member_requires_sync' to true if ca or member/admin cert and key don't exist on etcd member or checksum doesn't match] ***
ok: [node1]
Monday 20 February 2023  14:13:10 +0200 (0:00:00.091)       0:08:56.183 *******
Monday 20 February 2023  14:13:10 +0200 (0:00:00.043)       0:08:56.226 *******

TASK [etcd : Check_certs | Set 'sync_certs' to true] ***********************************************
ok: [node1]
Monday 20 February 2023  14:13:10 +0200 (0:00:00.060)       0:08:56.287 *******

TASK [etcd : include_tasks] ************************************************************************
included: /Users/max/DevOps/kubespray/roles/etcd/tasks/gen_certs_script.yml for node1
Monday 20 February 2023  14:13:10 +0200 (0:00:00.083)       0:08:56.370 *******

TASK [etcd : Gen_certs | create etcd cert dir] *****************************************************
changed: [node1]
Monday 20 February 2023  14:13:12 +0200 (0:00:01.323)       0:08:57.693 *******

TASK [etcd : Gen_certs | create etcd script dir (on node1)] ****************************************
changed: [node1]
Monday 20 February 2023  14:13:13 +0200 (0:00:01.293)       0:08:58.987 *******

TASK [etcd : Gen_certs | write openssl config] *****************************************************
changed: [node1]
Monday 20 February 2023  14:13:14 +0200 (0:00:01.642)       0:09:00.630 *******

TASK [etcd : Gen_certs | copy certs generation script] *********************************************
changed: [node1]
Monday 20 February 2023  14:13:17 +0200 (0:00:02.942)       0:09:03.572 *******

TASK [etcd : Gen_certs | run cert generation script for etcd and kube control plane nodes] *********
changed: [node1]
Monday 20 February 2023  14:13:18 +0200 (0:00:00.944)       0:09:04.516 *******
Monday 20 February 2023  14:13:18 +0200 (0:00:00.084)       0:09:04.601 *******
Monday 20 February 2023  14:13:19 +0200 (0:00:00.131)       0:09:04.732 *******
Monday 20 February 2023  14:13:19 +0200 (0:00:00.148)       0:09:04.881 *******
Monday 20 February 2023  14:13:19 +0200 (0:00:00.055)       0:09:04.937 *******
Monday 20 February 2023  14:13:19 +0200 (0:00:00.057)       0:09:04.994 *******
Monday 20 February 2023  14:13:19 +0200 (0:00:00.046)       0:09:05.041 *******
Monday 20 February 2023  14:13:19 +0200 (0:00:00.048)       0:09:05.089 *******

TASK [etcd : Gen_certs | check certificate permissions] ********************************************
changed: [node1]
Monday 20 February 2023  14:13:20 +0200 (0:00:01.263)       0:09:06.352 *******

TASK [etcd : include_tasks] ************************************************************************
included: /Users/max/DevOps/kubespray/roles/etcd/tasks/upd_ca_trust.yml for node1
Monday 20 February 2023  14:13:20 +0200 (0:00:00.080)       0:09:06.432 *******

TASK [etcd : Gen_certs | target ca-certificate store file] *****************************************
ok: [node1]
Monday 20 February 2023  14:13:20 +0200 (0:00:00.058)       0:09:06.491 *******

TASK [etcd : Gen_certs | add CA to trusted CA dir] *************************************************
changed: [node1]
Monday 20 February 2023  14:13:22 +0200 (0:00:01.540)       0:09:08.032 *******

TASK [etcd : Gen_certs | update ca-certificates (Debian/Ubuntu/SUSE/Flatcar)] **********************
changed: [node1]
Monday 20 February 2023  14:13:24 +0200 (0:00:02.443)       0:09:10.476 *******
Monday 20 February 2023  14:13:24 +0200 (0:00:00.042)       0:09:10.518 *******
Monday 20 February 2023  14:13:24 +0200 (0:00:00.041)       0:09:10.559 *******
Monday 20 February 2023  14:13:24 +0200 (0:00:00.047)       0:09:10.606 *******
Monday 20 February 2023  14:13:24 +0200 (0:00:00.048)       0:09:10.654 *******
Monday 20 February 2023  14:13:25 +0200 (0:00:00.047)       0:09:10.702 *******

TASK [etcd : include_tasks] ************************************************************************
included: /Users/max/DevOps/kubespray/roles/etcd/tasks/install_host.yml for node1
Monday 20 February 2023  14:13:25 +0200 (0:00:00.078)       0:09:10.781 *******

TASK [etcd : Get currently-deployed etcd version] **************************************************
fatal: [node1]: FAILED! => {"changed": false, "cmd": "/usr/local/bin/etcd --version", "msg": "[Errno 2] No such file or directory: b'/usr/local/bin/etcd'", "rc": 2, "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
...ignoring
Monday 20 February 2023  14:13:26 +0200 (0:00:01.291)       0:09:12.073 *******

TASK [etcd : Restart etcd if necessary] ************************************************************
changed: [node1]
Monday 20 February 2023  14:13:27 +0200 (0:00:01.339)       0:09:13.413 *******
Monday 20 February 2023  14:13:27 +0200 (0:00:00.041)       0:09:13.454 *******

TASK [etcd : install | Copy etcd and etcdctl binary from download dir] *****************************
changed: [node1] => (item=etcd)
changed: [node1] => (item=etcdctl)
Monday 20 February 2023  14:13:30 +0200 (0:00:02.840)       0:09:16.295 *******

TASK [etcd : include_tasks] ************************************************************************
included: /Users/max/DevOps/kubespray/roles/etcd/tasks/configure.yml for node1
Monday 20 February 2023  14:13:30 +0200 (0:00:00.090)       0:09:16.385 *******

TASK [etcd : Configure | Check if etcd cluster is healthy] *****************************************
ok: [node1]
Monday 20 February 2023  14:13:37 +0200 (0:00:06.346)       0:09:22.732 *******
Monday 20 February 2023  14:13:37 +0200 (0:00:00.043)       0:09:22.776 *******

TASK [etcd : include_tasks] ************************************************************************
included: /Users/max/DevOps/kubespray/roles/etcd/tasks/refresh_config.yml for node1
Monday 20 February 2023  14:13:37 +0200 (0:00:00.065)       0:09:22.842 *******

TASK [etcd : Refresh config | Create etcd config file] *********************************************
changed: [node1]
Monday 20 February 2023  14:13:40 +0200 (0:00:02.989)       0:09:25.831 *******
Monday 20 February 2023  14:13:40 +0200 (0:00:00.046)       0:09:25.878 *******

TASK [etcd : Configure | Copy etcd.service systemd file] *******************************************
changed: [node1]
Monday 20 February 2023  14:13:43 +0200 (0:00:03.595)       0:09:29.474 *******
Monday 20 February 2023  14:13:43 +0200 (0:00:00.044)       0:09:29.518 *******

TASK [etcd : Configure | reload systemd] ***********************************************************
ok: [node1]
Monday 20 February 2023  14:13:45 +0200 (0:00:02.019)       0:09:31.537 *******

TASK [etcd : Configure | Ensure etcd is running] ***************************************************
changed: [node1]
Monday 20 February 2023  14:13:51 +0200 (0:00:05.681)       0:09:37.219 *******
Monday 20 February 2023  14:13:51 +0200 (0:00:00.043)       0:09:37.262 *******

TASK [etcd : Configure | Wait for etcd cluster to be healthy] **************************************
ok: [node1]
Monday 20 February 2023  14:13:53 +0200 (0:00:01.443)       0:09:38.706 *******
Monday 20 February 2023  14:13:53 +0200 (0:00:00.045)       0:09:38.752 *******

TASK [etcd : Configure | Check if member is in etcd cluster] ***************************************
ok: [node1]
Monday 20 February 2023  14:13:54 +0200 (0:00:01.385)       0:09:40.137 *******
Monday 20 February 2023  14:13:54 +0200 (0:00:00.044)       0:09:40.181 *******
Monday 20 February 2023  14:13:54 +0200 (0:00:00.046)       0:09:40.228 *******
Monday 20 February 2023  14:13:54 +0200 (0:00:00.047)       0:09:40.275 *******

TASK [etcd : include_tasks] ************************************************************************
included: /Users/max/DevOps/kubespray/roles/etcd/tasks/refresh_config.yml for node1
Monday 20 February 2023  14:13:54 +0200 (0:00:00.080)       0:09:40.356 *******

TASK [etcd : Refresh config | Create etcd config file] *********************************************
changed: [node1]
Monday 20 February 2023  14:13:57 +0200 (0:00:02.746)       0:09:43.102 *******
Monday 20 February 2023  14:13:57 +0200 (0:00:00.043)       0:09:43.146 *******
Monday 20 February 2023  14:13:57 +0200 (0:00:00.046)       0:09:43.193 *******
Monday 20 February 2023  14:13:57 +0200 (0:00:00.046)       0:09:43.239 *******

TASK [etcd : include_tasks] ************************************************************************
included: /Users/max/DevOps/kubespray/roles/etcd/tasks/refresh_config.yml for node1
Monday 20 February 2023  14:13:57 +0200 (0:00:00.082)       0:09:43.321 *******

TASK [etcd : Refresh config | Create etcd config file] *********************************************
ok: [node1]
Monday 20 February 2023  14:13:59 +0200 (0:00:02.233)       0:09:45.554 *******
Monday 20 February 2023  14:13:59 +0200 (0:00:00.056)       0:09:45.611 *******

RUNNING HANDLER [etcd : restart etcd] **************************************************************
changed: [node1]
Monday 20 February 2023  14:14:01 +0200 (0:00:01.260)       0:09:46.872 *******

RUNNING HANDLER [etcd : Backup etcd data] **********************************************************
changed: [node1]
Monday 20 February 2023  14:14:02 +0200 (0:00:01.269)       0:09:48.142 *******

RUNNING HANDLER [etcd : Refresh Time Fact] *********************************************************
ok: [node1]
Monday 20 February 2023  14:14:04 +0200 (0:00:02.172)       0:09:50.314 *******

RUNNING HANDLER [etcd : Set Backup Directory] ******************************************************
ok: [node1]
Monday 20 February 2023  14:14:04 +0200 (0:00:00.054)       0:09:50.369 *******

RUNNING HANDLER [etcd : Create Backup Directory] ***************************************************
changed: [node1]
Monday 20 February 2023  14:14:06 +0200 (0:00:01.358)       0:09:51.727 *******

RUNNING HANDLER [etcd : Stat etcd v2 data directory] ***********************************************
ok: [node1]
Monday 20 February 2023  14:14:07 +0200 (0:00:01.276)       0:09:53.003 *******

RUNNING HANDLER [etcd : Backup etcd v2 data] *******************************************************
changed: [node1]
Monday 20 February 2023  14:14:08 +0200 (0:00:01.283)       0:09:54.287 *******

RUNNING HANDLER [etcd : Backup etcd v3 data] *******************************************************
changed: [node1]
Monday 20 February 2023  14:14:09 +0200 (0:00:01.331)       0:09:55.618 *******

RUNNING HANDLER [etcd : etcd | reload systemd] *****************************************************
ok: [node1]
Monday 20 February 2023  14:14:11 +0200 (0:00:01.810)       0:09:57.429 *******

RUNNING HANDLER [etcd : reload etcd] ***************************************************************
changed: [node1]
Monday 20 February 2023  14:14:21 +0200 (0:00:09.780)       0:10:07.209 *******

RUNNING HANDLER [etcd : wait for etcd up] **********************************************************
ok: [node1]
Monday 20 February 2023  14:14:22 +0200 (0:00:01.421)       0:10:08.631 *******

RUNNING HANDLER [etcd : Cleanup etcd backups] ******************************************************
changed: [node1]
Monday 20 February 2023  14:14:24 +0200 (0:00:01.281)       0:10:09.912 *******
Monday 20 February 2023  14:14:24 +0200 (0:00:00.041)       0:10:09.954 *******

RUNNING HANDLER [etcd : set etcd_secret_changed] ***************************************************
ok: [node1]

PLAY [k8s_cluster] *********************************************************************************
Monday 20 February 2023  14:14:24 +0200 (0:00:00.124)       0:10:10.078 *******
Monday 20 February 2023  14:14:24 +0200 (0:00:00.047)       0:10:10.125 *******
Monday 20 February 2023  14:14:24 +0200 (0:00:00.049)       0:10:10.175 *******
Monday 20 February 2023  14:14:24 +0200 (0:00:00.043)       0:10:10.219 *******
Monday 20 February 2023  14:14:24 +0200 (0:00:00.050)       0:10:10.269 *******
Monday 20 February 2023  14:14:24 +0200 (0:00:00.042)       0:10:10.312 *******
Monday 20 February 2023  14:14:24 +0200 (0:00:00.045)       0:10:10.357 *******
Monday 20 February 2023  14:14:24 +0200 (0:00:00.047)       0:10:10.404 *******
Monday 20 February 2023  14:14:24 +0200 (0:00:00.044)       0:10:10.449 *******
Monday 20 February 2023  14:14:24 +0200 (0:00:00.042)       0:10:10.491 *******
Monday 20 February 2023  14:14:25 +0200 (0:00:00.886)       0:10:11.378 *******

TASK [kubespray-defaults : Configure defaults] *****************************************************
ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
Monday 20 February 2023  14:14:25 +0200 (0:00:00.057)       0:10:11.436 *******
Monday 20 February 2023  14:14:25 +0200 (0:00:00.060)       0:10:11.496 *******
Monday 20 February 2023  14:14:25 +0200 (0:00:00.042)       0:10:11.539 *******
Monday 20 February 2023  14:14:25 +0200 (0:00:00.047)       0:10:11.587 *******
Monday 20 February 2023  14:14:25 +0200 (0:00:00.042)       0:10:11.630 *******
Monday 20 February 2023  14:14:25 +0200 (0:00:00.043)       0:10:11.673 *******
Monday 20 February 2023  14:14:26 +0200 (0:00:00.055)       0:10:11.729 *******
Monday 20 February 2023  14:14:26 +0200 (0:00:00.048)       0:10:11.778 *******
Monday 20 February 2023  14:14:26 +0200 (0:00:00.060)       0:10:11.839 *******
Monday 20 February 2023  14:14:26 +0200 (0:00:00.047)       0:10:11.887 *******
Monday 20 February 2023  14:14:26 +0200 (0:00:00.063)       0:10:11.950 *******
Monday 20 February 2023  14:14:26 +0200 (0:00:00.048)       0:10:11.999 *******
Monday 20 February 2023  14:14:26 +0200 (0:00:00.048)       0:10:12.047 *******
Monday 20 February 2023  14:14:26 +0200 (0:00:00.047)       0:10:12.095 *******
Monday 20 February 2023  14:14:26 +0200 (0:00:00.047)       0:10:12.143 *******
Monday 20 February 2023  14:14:26 +0200 (0:00:00.047)       0:10:12.190 *******
Monday 20 February 2023  14:14:26 +0200 (0:00:00.050)       0:10:12.241 *******
Monday 20 February 2023  14:14:26 +0200 (0:00:00.048)       0:10:12.289 *******
Monday 20 February 2023  14:14:26 +0200 (0:00:00.047)       0:10:12.337 *******
Monday 20 February 2023  14:14:26 +0200 (0:00:00.047)       0:10:12.385 *******
Monday 20 February 2023  14:14:26 +0200 (0:00:00.047)       0:10:12.433 *******
Monday 20 February 2023  14:14:26 +0200 (0:00:00.048)       0:10:12.481 *******

PLAY [k8s_cluster] *********************************************************************************
Monday 20 February 2023  14:14:26 +0200 (0:00:00.135)       0:10:12.617 *******
Monday 20 February 2023  14:14:26 +0200 (0:00:00.055)       0:10:12.673 *******
Monday 20 February 2023  14:14:27 +0200 (0:00:00.048)       0:10:12.721 *******
Monday 20 February 2023  14:14:27 +0200 (0:00:00.043)       0:10:12.765 *******
Monday 20 February 2023  14:14:27 +0200 (0:00:00.043)       0:10:12.808 *******
Monday 20 February 2023  14:14:27 +0200 (0:00:00.042)       0:10:12.850 *******
Monday 20 February 2023  14:14:27 +0200 (0:00:00.043)       0:10:12.894 *******
Monday 20 February 2023  14:14:27 +0200 (0:00:00.125)       0:10:13.020 *******
Monday 20 February 2023  14:14:27 +0200 (0:00:00.044)       0:10:13.064 *******
Monday 20 February 2023  14:14:27 +0200 (0:00:00.042)       0:10:13.107 *******
Monday 20 February 2023  14:14:28 +0200 (0:00:00.890)       0:10:13.997 *******

TASK [kubespray-defaults : Configure defaults] *****************************************************
ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
Monday 20 February 2023  14:14:28 +0200 (0:00:00.055)       0:10:14.053 *******
Monday 20 February 2023  14:14:28 +0200 (0:00:00.058)       0:10:14.112 *******
Monday 20 February 2023  14:14:28 +0200 (0:00:00.043)       0:10:14.155 *******
Monday 20 February 2023  14:14:28 +0200 (0:00:00.048)       0:10:14.204 *******
Monday 20 February 2023  14:14:28 +0200 (0:00:00.042)       0:10:14.247 *******
Monday 20 February 2023  14:14:28 +0200 (0:00:00.043)       0:10:14.290 *******
Monday 20 February 2023  14:14:28 +0200 (0:00:00.053)       0:10:14.343 *******
Monday 20 February 2023  14:14:28 +0200 (0:00:00.038)       0:10:14.382 *******
Monday 20 February 2023  14:14:28 +0200 (0:00:00.038)       0:10:14.421 *******
Monday 20 February 2023  14:14:28 +0200 (0:00:00.043)       0:10:14.464 *******
Monday 20 February 2023  14:14:28 +0200 (0:00:00.039)       0:10:14.504 *******

TASK [kubernetes/node : set kubelet_cgroup_driver_detected fact for containerd] ********************
ok: [node1]
Monday 20 February 2023  14:14:28 +0200 (0:00:00.055)       0:10:14.560 *******

TASK [kubernetes/node : set kubelet_cgroup_driver] *************************************************
ok: [node1]
Monday 20 February 2023  14:14:28 +0200 (0:00:00.056)       0:10:14.616 *******
Monday 20 February 2023  14:14:28 +0200 (0:00:00.039)       0:10:14.655 *******
Monday 20 February 2023  14:14:29 +0200 (0:00:00.039)       0:10:14.694 *******

TASK [kubernetes/node : os specific vars] **********************************************************
ok: [node1] => (item=/Users/max/DevOps/kubespray/roles/kubernetes/node/vars/ubuntu-20.yml)
Monday 20 February 2023  14:14:29 +0200 (0:00:00.072)       0:10:14.767 *******

TASK [kubernetes/node : Pre-upgrade | check if kubelet container exists] ***************************
ok: [node1]
Monday 20 February 2023  14:14:30 +0200 (0:00:01.273)       0:10:16.041 *******
Monday 20 February 2023  14:14:30 +0200 (0:00:00.038)       0:10:16.080 *******
Monday 20 February 2023  14:14:30 +0200 (0:00:00.039)       0:10:16.120 *******
Monday 20 February 2023  14:14:30 +0200 (0:00:00.040)       0:10:16.160 *******

TASK [kubernetes/node : Ensure /var/lib/cni exists] ************************************************
changed: [node1]
Monday 20 February 2023  14:14:31 +0200 (0:00:01.251)       0:10:17.412 *******
Monday 20 February 2023  14:14:31 +0200 (0:00:00.040)       0:10:17.453 *******

TASK [kubernetes/node : install | Copy kubelet binary from download dir] ***************************
changed: [node1]
Monday 20 February 2023  14:14:34 +0200 (0:00:02.421)       0:10:19.874 *******
Monday 20 February 2023  14:14:34 +0200 (0:00:00.043)       0:10:19.918 *******
Monday 20 February 2023  14:14:34 +0200 (0:00:00.043)       0:10:19.961 *******
Monday 20 February 2023  14:14:34 +0200 (0:00:00.041)       0:10:20.002 *******
Monday 20 February 2023  14:14:34 +0200 (0:00:00.041)       0:10:20.044 *******
Monday 20 February 2023  14:14:34 +0200 (0:00:00.042)       0:10:20.086 *******
Monday 20 February 2023  14:14:34 +0200 (0:00:00.040)       0:10:20.127 *******
Monday 20 February 2023  14:14:34 +0200 (0:00:00.041)       0:10:20.169 *******
Monday 20 February 2023  14:14:34 +0200 (0:00:00.044)       0:10:20.213 *******
Monday 20 February 2023  14:14:34 +0200 (0:00:00.041)       0:10:20.255 *******
Monday 20 February 2023  14:14:34 +0200 (0:00:00.042)       0:10:20.297 *******
Monday 20 February 2023  14:14:34 +0200 (0:00:00.041)       0:10:20.339 *******
Monday 20 February 2023  14:14:34 +0200 (0:00:00.040)       0:10:20.380 *******

TASK [kubernetes/node : Ensure nodePort range is reserved] *****************************************
changed: [node1]
Monday 20 February 2023  14:14:35 +0200 (0:00:01.276)       0:10:21.657 *******

TASK [kubernetes/node : Verify if br_netfilter module exists] **************************************
ok: [node1]
Monday 20 February 2023  14:14:37 +0200 (0:00:01.461)       0:10:23.119 *******

TASK [kubernetes/node : Verify br_netfilter module path exists] ************************************
ok: [node1]
Monday 20 February 2023  14:14:38 +0200 (0:00:01.284)       0:10:24.403 *******

TASK [kubernetes/node : Enable br_netfilter module] ************************************************
changed: [node1]
Monday 20 February 2023  14:14:39 +0200 (0:00:01.270)       0:10:25.674 *******

TASK [kubernetes/node : Persist br_netfilter module] ***********************************************
changed: [node1]
Monday 20 February 2023  14:14:42 +0200 (0:00:02.652)       0:10:28.326 *******

TASK [kubernetes/node : Check if bridge-nf-call-iptables key exists] *******************************
ok: [node1]
Monday 20 February 2023  14:14:43 +0200 (0:00:01.270)       0:10:29.596 *******

TASK [kubernetes/node : Enable bridge-nf-call tables] **********************************************
changed: [node1] => (item=net.bridge.bridge-nf-call-iptables)
changed: [node1] => (item=net.bridge.bridge-nf-call-arptables)
changed: [node1] => (item=net.bridge.bridge-nf-call-ip6tables)
Monday 20 February 2023  14:14:47 +0200 (0:00:03.675)       0:10:33.272 *******

TASK [kubernetes/node : Modprobe Kernel Module for IPVS] *******************************************
changed: [node1] => (item=ip_vs)
changed: [node1] => (item=ip_vs_rr)
changed: [node1] => (item=ip_vs_wrr)
changed: [node1] => (item=ip_vs_sh)
Monday 20 February 2023  14:14:52 +0200 (0:00:04.907)       0:10:38.180 *******

TASK [kubernetes/node : Modprobe nf_conntrack_ipv4] ************************************************
fatal: [node1]: FAILED! => {"changed": false, "msg": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.15.0-1029-gcp\n", "name": "nf_conntrack_ipv4", "params": "", "rc": 1, "state": "present", "stderr": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.15.0-1029-gcp\n", "stderr_lines": ["modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.15.0-1029-gcp"], "stdout": "", "stdout_lines": []}
...ignoring
Monday 20 February 2023  14:14:53 +0200 (0:00:01.317)       0:10:39.497 *******

TASK [kubernetes/node : Persist ip_vs modules] *****************************************************
changed: [node1]
Monday 20 February 2023  14:14:56 +0200 (0:00:02.717)       0:10:42.214 *******
Monday 20 February 2023  14:14:56 +0200 (0:00:00.040)       0:10:42.255 *******
Monday 20 February 2023  14:14:56 +0200 (0:00:00.040)       0:10:42.296 *******
Monday 20 February 2023  14:14:56 +0200 (0:00:00.041)       0:10:42.337 *******
Monday 20 February 2023  14:14:56 +0200 (0:00:00.040)       0:10:42.378 *******

TASK [kubernetes/node : Set kubelet api version to v1beta1] ****************************************
ok: [node1]
Monday 20 February 2023  14:14:56 +0200 (0:00:00.053)       0:10:42.431 *******

TASK [kubernetes/node : Write kubelet environment config file (kubeadm)] ***************************
changed: [node1]
Monday 20 February 2023  14:14:59 +0200 (0:00:02.650)       0:10:45.082 *******

TASK [kubernetes/node : Write kubelet config file] *************************************************
changed: [node1]
Monday 20 February 2023  14:15:02 +0200 (0:00:02.772)       0:10:47.854 *******

TASK [kubernetes/node : Write kubelet systemd init file] *******************************************
changed: [node1]
Monday 20 February 2023  14:15:04 +0200 (0:00:02.693)       0:10:50.548 *******
Monday 20 February 2023  14:15:04 +0200 (0:00:00.000)       0:10:50.548 *******

RUNNING HANDLER [kubernetes/node : Node | restart kubelet] *****************************************
changed: [node1]
Monday 20 February 2023  14:15:06 +0200 (0:00:01.241)       0:10:51.790 *******

RUNNING HANDLER [kubernetes/node : Kubelet | reload systemd] ***************************************
ok: [node1]
Monday 20 February 2023  14:15:07 +0200 (0:00:01.755)       0:10:53.546 *******

RUNNING HANDLER [kubernetes/node : Kubelet | restart kubelet] **************************************
changed: [node1]
Monday 20 February 2023  14:15:09 +0200 (0:00:01.760)       0:10:55.306 *******

TASK [kubernetes/node : Enable kubelet] ************************************************************
changed: [node1]
Monday 20 February 2023  14:15:11 +0200 (0:00:02.062)       0:10:57.369 *******

RUNNING HANDLER [kubernetes/node : Kubelet | restart kubelet] **************************************
changed: [node1]

PLAY [kube_control_plane] **************************************************************************
Monday 20 February 2023  14:15:13 +0200 (0:00:01.805)       0:10:59.175 *******
Monday 20 February 2023  14:15:13 +0200 (0:00:00.047)       0:10:59.223 *******
Monday 20 February 2023  14:15:13 +0200 (0:00:00.049)       0:10:59.272 *******
Monday 20 February 2023  14:15:13 +0200 (0:00:00.044)       0:10:59.316 *******
Monday 20 February 2023  14:15:13 +0200 (0:00:00.042)       0:10:59.359 *******
Monday 20 February 2023  14:15:13 +0200 (0:00:00.045)       0:10:59.404 *******
Monday 20 February 2023  14:15:13 +0200 (0:00:00.044)       0:10:59.449 *******
Monday 20 February 2023  14:15:13 +0200 (0:00:00.047)       0:10:59.497 *******
Monday 20 February 2023  14:15:13 +0200 (0:00:00.044)       0:10:59.541 *******
Monday 20 February 2023  14:15:13 +0200 (0:00:00.042)       0:10:59.584 *******
Monday 20 February 2023  14:15:14 +0200 (0:00:01.005)       0:11:00.589 *******

TASK [kubespray-defaults : Configure defaults] *****************************************************
ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
Monday 20 February 2023  14:15:14 +0200 (0:00:00.055)       0:11:00.644 *******
Monday 20 February 2023  14:15:15 +0200 (0:00:00.061)       0:11:00.706 *******
Monday 20 February 2023  14:15:15 +0200 (0:00:00.044)       0:11:00.750 *******
Monday 20 February 2023  14:15:15 +0200 (0:00:00.047)       0:11:00.798 *******
Monday 20 February 2023  14:15:15 +0200 (0:00:00.042)       0:11:00.840 *******
Monday 20 February 2023  14:15:15 +0200 (0:00:00.043)       0:11:00.884 *******
Monday 20 February 2023  14:15:15 +0200 (0:00:00.136)       0:11:01.021 *******
Monday 20 February 2023  14:15:15 +0200 (0:00:00.040)       0:11:01.062 *******
Monday 20 February 2023  14:15:15 +0200 (0:00:00.039)       0:11:01.101 *******
Monday 20 February 2023  14:15:15 +0200 (0:00:00.040)       0:11:01.141 *******
Monday 20 February 2023  14:15:15 +0200 (0:00:00.038)       0:11:01.180 *******
Monday 20 February 2023  14:15:15 +0200 (0:00:00.039)       0:11:01.219 *******
Monday 20 February 2023  14:15:15 +0200 (0:00:00.055)       0:11:01.275 *******
Monday 20 February 2023  14:15:15 +0200 (0:00:00.057)       0:11:01.333 *******
Monday 20 February 2023  14:15:15 +0200 (0:00:00.060)       0:11:01.393 *******
Monday 20 February 2023  14:15:15 +0200 (0:00:00.060)       0:11:01.454 *******
Monday 20 February 2023  14:15:15 +0200 (0:00:00.056)       0:11:01.510 *******
Monday 20 February 2023  14:15:15 +0200 (0:00:00.040)       0:11:01.551 *******
Monday 20 February 2023  14:15:15 +0200 (0:00:00.052)       0:11:01.603 *******
Monday 20 February 2023  14:15:15 +0200 (0:00:00.039)       0:11:01.643 *******
Monday 20 February 2023  14:15:16 +0200 (0:00:00.055)       0:11:01.698 *******

TASK [kubernetes/control-plane : Pre-upgrade | Delete master manifests if etcd secrets changed] ****
ok: [node1] => (item=kube-apiserver)
ok: [node1] => (item=kube-controller-manager)
ok: [node1] => (item=kube-scheduler)
Monday 20 February 2023  14:15:20 +0200 (0:00:04.137)       0:11:05.836 *******
Monday 20 February 2023  14:15:20 +0200 (0:00:00.052)       0:11:05.889 *******
Monday 20 February 2023  14:15:20 +0200 (0:00:00.041)       0:11:05.931 *******
Monday 20 February 2023  14:15:20 +0200 (0:00:00.043)       0:11:05.974 *******

TASK [kubernetes/control-plane : Create kube-scheduler config] *************************************
changed: [node1]
Monday 20 February 2023  14:15:24 +0200 (0:00:03.798)       0:11:09.772 *******
Monday 20 February 2023  14:15:24 +0200 (0:00:00.041)       0:11:09.814 *******
Monday 20 February 2023  14:15:24 +0200 (0:00:00.039)       0:11:09.854 *******
Monday 20 February 2023  14:15:24 +0200 (0:00:00.040)       0:11:09.895 *******
Monday 20 February 2023  14:15:24 +0200 (0:00:00.055)       0:11:09.950 *******
Monday 20 February 2023  14:15:24 +0200 (0:00:00.042)       0:11:09.992 *******
Monday 20 February 2023  14:15:24 +0200 (0:00:00.038)       0:11:10.031 *******

TASK [kubernetes/control-plane : Install | Copy kubectl binary from download dir] ******************
changed: [node1]
Monday 20 February 2023  14:15:26 +0200 (0:00:01.786)       0:11:11.817 *******

TASK [kubernetes/control-plane : Install kubectl bash completion] **********************************
changed: [node1]
Monday 20 February 2023  14:15:27 +0200 (0:00:01.378)       0:11:13.196 *******

TASK [kubernetes/control-plane : Set kubectl bash completion file permissions] *********************
changed: [node1]
Monday 20 February 2023  14:15:28 +0200 (0:00:01.289)       0:11:14.486 *******
Monday 20 February 2023  14:15:28 +0200 (0:00:00.039)       0:11:14.526 *******

TASK [kubernetes/control-plane : Check which kube-control nodes are already members of the cluster] ***
fatal: [node1]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/kubectl", "get", "nodes", "--selector=node-role.kubernetes.io/control-plane", "-o", "json"], "delta": "0:00:00.055624", "end": "2023-02-20 12:15:30.066514", "msg": "non-zero return code", "rc": 1, "start": "2023-02-20 12:15:30.010890", "stderr": "The connection to the server localhost:8080 was refused - did you specify the right host or port?", "stderr_lines": ["The connection to the server localhost:8080 was refused - did you specify the right host or port?"], "stdout": "", "stdout_lines": []}
...ignoring
Monday 20 February 2023  14:15:30 +0200 (0:00:01.338)       0:11:15.864 *******
Monday 20 February 2023  14:15:30 +0200 (0:00:00.046)       0:11:15.911 *******

TASK [kubernetes/control-plane : Set fact first_kube_control_plane] ********************************
ok: [node1]
Monday 20 February 2023  14:15:30 +0200 (0:00:00.056)       0:11:15.967 *******
Monday 20 February 2023  14:15:30 +0200 (0:00:00.040)       0:11:16.007 *******

TASK [kubernetes/control-plane : kubeadm | Check if kubeadm has already run] ***********************
ok: [node1]
Monday 20 February 2023  14:15:31 +0200 (0:00:01.231)       0:11:17.238 *******
Monday 20 February 2023  14:15:31 +0200 (0:00:00.062)       0:11:17.301 *******
Monday 20 February 2023  14:15:31 +0200 (0:00:00.054)       0:11:17.355 *******

TASK [kubernetes/control-plane : kubeadm | aggregate all SANs] *************************************
ok: [node1]
Monday 20 February 2023  14:15:31 +0200 (0:00:00.201)       0:11:17.556 *******
Monday 20 February 2023  14:15:31 +0200 (0:00:00.045)       0:11:17.601 *******
Monday 20 February 2023  14:15:31 +0200 (0:00:00.043)       0:11:17.645 *******
Monday 20 February 2023  14:15:32 +0200 (0:00:00.042)       0:11:17.688 *******
Monday 20 February 2023  14:15:32 +0200 (0:00:00.040)       0:11:17.728 *******

TASK [kubernetes/control-plane : Set kubeadm api version to v1beta3] *******************************
ok: [node1]
Monday 20 February 2023  14:15:32 +0200 (0:00:00.056)       0:11:17.785 *******

TASK [kubernetes/control-plane : kubeadm | Create kubeadm config] **********************************
changed: [node1]
Monday 20 February 2023  14:15:35 +0200 (0:00:02.985)       0:11:20.770 *******
Monday 20 February 2023  14:15:35 +0200 (0:00:00.041)       0:11:20.812 *******
Monday 20 February 2023  14:15:35 +0200 (0:00:00.039)       0:11:20.851 *******
Monday 20 February 2023  14:15:35 +0200 (0:00:00.041)       0:11:20.893 *******
Monday 20 February 2023  14:15:35 +0200 (0:00:00.040)       0:11:20.933 *******
Monday 20 February 2023  14:15:35 +0200 (0:00:00.049)       0:11:20.983 *******
Monday 20 February 2023  14:15:35 +0200 (0:00:00.039)       0:11:21.023 *******

TASK [kubernetes/control-plane : kubeadm | Initialize first master] ********************************
changed: [node1]
Monday 20 February 2023  14:15:49 +0200 (0:00:14.588)       0:11:35.612 *******
Monday 20 February 2023  14:15:50 +0200 (0:00:00.640)       0:11:36.253 *******
Monday 20 February 2023  14:15:50 +0200 (0:00:00.058)       0:11:36.311 *******

TASK [kubernetes/control-plane : Create kubeadm token for joining nodes with 24h expiration (default)] ***
ok: [node1]
Monday 20 February 2023  14:15:51 +0200 (0:00:00.570)       0:11:36.881 *******

TASK [kubernetes/control-plane : Set kubeadm_token] ************************************************
ok: [node1]
Monday 20 February 2023  14:15:51 +0200 (0:00:00.059)       0:11:36.941 *******
Monday 20 February 2023  14:15:51 +0200 (0:00:00.039)       0:11:36.980 *******

TASK [kubernetes/control-plane : kubeadm | Join other masters] *************************************
included: /Users/max/DevOps/kubespray/roles/kubernetes/control-plane/tasks/kubeadm-secondary.yml for node1
Monday 20 February 2023  14:15:51 +0200 (0:00:00.069)       0:11:37.049 *******

TASK [kubernetes/control-plane : Set kubeadm_discovery_address] ************************************
ok: [node1]
Monday 20 February 2023  14:15:51 +0200 (0:00:00.124)       0:11:37.174 *******

TASK [kubernetes/control-plane : Upload certificates so they are fresh and not expired] ************
changed: [node1]
Monday 20 February 2023  14:15:53 +0200 (0:00:01.549)       0:11:38.723 *******

TASK [kubernetes/control-plane : Parse certificate key if not set] *********************************
ok: [node1]
Monday 20 February 2023  14:15:53 +0200 (0:00:00.101)       0:11:38.825 *******
Monday 20 February 2023  14:15:53 +0200 (0:00:00.041)       0:11:38.866 *******

TASK [kubernetes/control-plane : Wait for k8s apiserver] *******************************************
ok: [node1]
Monday 20 February 2023  14:15:54 +0200 (0:00:01.602)       0:11:40.468 *******

TASK [kubernetes/control-plane : check already run] ************************************************
ok: [node1] => {
    "msg": false
}
Monday 20 February 2023  14:15:54 +0200 (0:00:00.057)       0:11:40.526 *******
Monday 20 February 2023  14:15:54 +0200 (0:00:00.040)       0:11:40.566 *******
Monday 20 February 2023  14:15:54 +0200 (0:00:00.040)       0:11:40.607 *******
Monday 20 February 2023  14:15:54 +0200 (0:00:00.054)       0:11:40.661 *******

TASK [kubernetes/control-plane : kubeadm | Remove taint for master with node role] *****************
changed: [node1] => (item=node-role.kubernetes.io/master:NoSchedule-)
changed: [node1] => (item=node-role.kubernetes.io/control-plane:NoSchedule-)
Monday 20 February 2023  14:15:56 +0200 (0:00:01.436)       0:11:42.098 *******
Monday 20 February 2023  14:15:56 +0200 (0:00:00.040)       0:11:42.138 *******

TASK [kubernetes/control-plane : Include kubeadm secondary server apiserver fixes] *****************
included: /Users/max/DevOps/kubespray/roles/kubernetes/control-plane/tasks/kubeadm-fix-apiserver.yml for node1
Monday 20 February 2023  14:15:56 +0200 (0:00:00.071)       0:11:42.210 *******

TASK [kubernetes/control-plane : Update server field in component kubeconfigs] *********************
changed: [node1] => (item=admin.conf)
changed: [node1] => (item=controller-manager.conf)
changed: [node1] => (item=kubelet.conf)
changed: [node1] => (item=scheduler.conf)
Monday 20 February 2023  14:16:01 +0200 (0:00:05.353)       0:11:47.563 *******

TASK [kubernetes/control-plane : Update etcd-servers for apiserver] ********************************
ok: [node1]
Monday 20 February 2023  14:16:03 +0200 (0:00:01.527)       0:11:49.091 *******

TASK [kubernetes/control-plane : Include kubelet client cert rotation fixes] ***********************
included: /Users/max/DevOps/kubespray/roles/kubernetes/control-plane/tasks/kubelet-fix-client-cert-rotation.yml for node1
Monday 20 February 2023  14:16:03 +0200 (0:00:00.075)       0:11:49.167 *******

TASK [kubernetes/control-plane : Fixup kubelet client cert rotation 1/2] ***************************
ok: [node1]
Monday 20 February 2023  14:16:04 +0200 (0:00:01.307)       0:11:50.474 *******

TASK [kubernetes/control-plane : Fixup kubelet client cert rotation 2/2] ***************************
ok: [node1]
Monday 20 February 2023  14:16:06 +0200 (0:00:01.311)       0:11:51.786 *******

TASK [kubernetes/control-plane : Install script to renew K8S control plane certificates] ***********
changed: [node1]
Monday 20 February 2023  14:16:08 +0200 (0:00:02.780)       0:11:54.567 *******
Monday 20 February 2023  14:16:08 +0200 (0:00:00.047)       0:11:54.614 *******
Monday 20 February 2023  14:16:09 +0200 (0:00:00.125)       0:11:54.739 *******

TASK [kubernetes/client : Set external kube-apiserver endpoint] ************************************
ok: [node1]
Monday 20 February 2023  14:16:09 +0200 (0:00:00.062)       0:11:54.802 *******

TASK [kubernetes/client : Create kube config dir for current/ansible become user] ******************
changed: [node1]
Monday 20 February 2023  14:16:10 +0200 (0:00:01.440)       0:11:56.243 *******

TASK [kubernetes/client : Copy admin kubeconfig to current/ansible become user home] ***************
changed: [node1]
Monday 20 February 2023  14:16:12 +0200 (0:00:01.515)       0:11:57.759 *******
Monday 20 February 2023  14:16:12 +0200 (0:00:00.039)       0:11:57.799 *******

TASK [kubernetes/client : Wait for k8s apiserver] **************************************************
ok: [node1]
Monday 20 February 2023  14:16:13 +0200 (0:00:01.465)       0:11:59.264 *******
Monday 20 February 2023  14:16:13 +0200 (0:00:00.039)       0:11:59.304 *******
Monday 20 February 2023  14:16:13 +0200 (0:00:00.039)       0:11:59.344 *******
Monday 20 February 2023  14:16:13 +0200 (0:00:00.043)       0:11:59.387 *******
Monday 20 February 2023  14:16:13 +0200 (0:00:00.039)       0:11:59.426 *******
Monday 20 February 2023  14:16:13 +0200 (0:00:00.044)       0:11:59.470 *******
Monday 20 February 2023  14:16:13 +0200 (0:00:00.054)       0:11:59.525 *******

TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Wait for kube-apiserver] *******************
ok: [node1]
Monday 20 February 2023  14:16:15 +0200 (0:00:01.727)       0:12:01.253 *******

TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Add ClusterRoleBinding to admit nodes] *****
changed: [node1]
Monday 20 February 2023  14:16:18 +0200 (0:00:02.740)       0:12:03.994 *******

TASK [kubernetes-apps/cluster_roles : Apply workaround to allow all nodes with cert O=system:nodes to register] ***
ok: [node1]
Monday 20 February 2023  14:16:20 +0200 (0:00:02.466)       0:12:06.460 *******
Monday 20 February 2023  14:16:20 +0200 (0:00:00.042)       0:12:06.503 *******
Monday 20 February 2023  14:16:20 +0200 (0:00:00.042)       0:12:06.545 *******
Monday 20 February 2023  14:16:20 +0200 (0:00:00.044)       0:12:06.589 *******
Monday 20 February 2023  14:16:20 +0200 (0:00:00.041)       0:12:06.631 *******
Monday 20 February 2023  14:16:20 +0200 (0:00:00.039)       0:12:06.671 *******

TASK [kubernetes-apps/cluster_roles : PriorityClass | Copy k8s-cluster-critical-pc.yml file] *******
changed: [node1]
Monday 20 February 2023  14:16:23 +0200 (0:00:02.714)       0:12:09.386 *******

TASK [kubernetes-apps/cluster_roles : PriorityClass | Create k8s-cluster-critical] *****************
ok: [node1]
Monday 20 February 2023  14:16:25 +0200 (0:00:01.605)       0:12:10.991 *******

RUNNING HANDLER [kubernetes/control-plane : Master | restart kubelet] ******************************
changed: [node1]
Monday 20 February 2023  14:16:26 +0200 (0:00:01.466)       0:12:12.458 *******

RUNNING HANDLER [kubernetes/control-plane : Master | wait for master static pods] ******************
changed: [node1]
Monday 20 February 2023  14:16:28 +0200 (0:00:01.488)       0:12:13.947 *******

RUNNING HANDLER [kubernetes/control-plane : Master | Restart kube-scheduler] ***********************
changed: [node1]
Monday 20 February 2023  14:16:30 +0200 (0:00:02.048)       0:12:15.996 *******

RUNNING HANDLER [kubernetes/control-plane : Master | Restart kube-controller-manager] **************
changed: [node1]
Monday 20 February 2023  14:16:31 +0200 (0:00:01.416)       0:12:17.413 *******

RUNNING HANDLER [kubernetes/control-plane : Master | reload systemd] *******************************
ok: [node1]
Monday 20 February 2023  14:16:33 +0200 (0:00:02.005)       0:12:19.419 *******

RUNNING HANDLER [kubernetes/control-plane : Master | reload kubelet] *******************************
changed: [node1]
Monday 20 February 2023  14:16:35 +0200 (0:00:01.666)       0:12:21.085 *******
Monday 20 February 2023  14:16:35 +0200 (0:00:00.040)       0:12:21.126 *******

RUNNING HANDLER [kubernetes/control-plane : Master | Remove scheduler container containerd/crio] ***
changed: [node1]
Monday 20 February 2023  14:16:37 +0200 (0:00:02.333)       0:12:23.459 *******
Monday 20 February 2023  14:16:37 +0200 (0:00:00.038)       0:12:23.498 *******

RUNNING HANDLER [kubernetes/control-plane : Master | Remove controller manager container containerd/crio] ***
changed: [node1]
Monday 20 February 2023  14:16:39 +0200 (0:00:01.703)       0:12:25.201 *******

RUNNING HANDLER [kubernetes/control-plane : Master | wait for kube-scheduler] **********************
ok: [node1]
Monday 20 February 2023  14:16:41 +0200 (0:00:01.534)       0:12:26.736 *******

RUNNING HANDLER [kubernetes/control-plane : Master | wait for kube-controller-manager] *************
ok: [node1]
Monday 20 February 2023  14:16:42 +0200 (0:00:01.638)       0:12:28.374 *******

RUNNING HANDLER [kubernetes/control-plane : Master | wait for the apiserver to be running] *********
ok: [node1]

PLAY [k8s_cluster] *********************************************************************************
Monday 20 February 2023  14:16:44 +0200 (0:00:01.738)       0:12:30.113 *******
Monday 20 February 2023  14:16:44 +0200 (0:00:00.048)       0:12:30.161 *******
Monday 20 February 2023  14:16:44 +0200 (0:00:00.054)       0:12:30.216 *******
Monday 20 February 2023  14:16:44 +0200 (0:00:00.045)       0:12:30.261 *******
Monday 20 February 2023  14:16:44 +0200 (0:00:00.044)       0:12:30.306 *******
Monday 20 February 2023  14:16:44 +0200 (0:00:00.044)       0:12:30.351 *******
Monday 20 February 2023  14:16:44 +0200 (0:00:00.046)       0:12:30.397 *******
Monday 20 February 2023  14:16:44 +0200 (0:00:00.049)       0:12:30.446 *******
Monday 20 February 2023  14:16:44 +0200 (0:00:00.052)       0:12:30.499 *******
Monday 20 February 2023  14:16:44 +0200 (0:00:00.044)       0:12:30.543 *******
Monday 20 February 2023  14:16:45 +0200 (0:00:00.889)       0:12:31.433 *******

TASK [kubespray-defaults : Configure defaults] *****************************************************
ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
Monday 20 February 2023  14:16:45 +0200 (0:00:00.058)       0:12:31.492 *******
Monday 20 February 2023  14:16:45 +0200 (0:00:00.062)       0:12:31.554 *******
Monday 20 February 2023  14:16:45 +0200 (0:00:00.044)       0:12:31.598 *******
Monday 20 February 2023  14:16:45 +0200 (0:00:00.049)       0:12:31.648 *******
Monday 20 February 2023  14:16:46 +0200 (0:00:00.044)       0:12:31.692 *******
Monday 20 February 2023  14:16:46 +0200 (0:00:00.043)       0:12:31.736 *******
Monday 20 February 2023  14:16:46 +0200 (0:00:00.057)       0:12:31.794 *******

TASK [kubernetes/kubeadm : Set kubeadm_discovery_address] ******************************************
ok: [node1]
Monday 20 February 2023  14:16:46 +0200 (0:00:00.119)       0:12:31.913 *******

TASK [kubernetes/kubeadm : Check if kubelet.conf exists] *******************************************
ok: [node1]
Monday 20 February 2023  14:16:47 +0200 (0:00:01.284)       0:12:33.198 *******

TASK [kubernetes/kubeadm : Check if kubeadm CA cert is accessible] *********************************
ok: [node1]
Monday 20 February 2023  14:16:47 +0200 (0:00:00.413)       0:12:33.611 *******

TASK [kubernetes/kubeadm : Calculate kubeadm CA cert hash] *****************************************
ok: [node1]
Monday 20 February 2023  14:16:48 +0200 (0:00:00.423)       0:12:34.034 *******
Monday 20 February 2023  14:16:48 +0200 (0:00:00.043)       0:12:34.078 *******
Monday 20 February 2023  14:16:48 +0200 (0:00:00.042)       0:12:34.120 *******

TASK [kubernetes/kubeadm : Set kubeadm api version to v1beta2] *************************************
ok: [node1]
Monday 20 February 2023  14:16:48 +0200 (0:00:00.055)       0:12:34.175 *******
Monday 20 February 2023  14:16:48 +0200 (0:00:00.042)       0:12:34.217 *******
Monday 20 February 2023  14:16:48 +0200 (0:00:00.044)       0:12:34.262 *******
Monday 20 February 2023  14:16:48 +0200 (0:00:00.043)       0:12:34.305 *******
Monday 20 February 2023  14:16:48 +0200 (0:00:00.061)       0:12:34.367 *******

TASK [kubernetes/kubeadm : Update server field in kube-proxy kubeconfig] ***************************
changed: [node1]
Monday 20 February 2023  14:16:49 +0200 (0:00:00.674)       0:12:35.041 *******

TASK [kubernetes/kubeadm : Set ca.crt file permission] *********************************************
ok: [node1]
Monday 20 February 2023  14:16:50 +0200 (0:00:01.343)       0:12:36.385 *******

TASK [kubernetes/kubeadm : Restart all kube-proxy pods to ensure that they load the new configmap] ***
changed: [node1]
Monday 20 February 2023  14:16:51 +0200 (0:00:00.680)       0:12:37.066 *******
Monday 20 February 2023  14:16:51 +0200 (0:00:00.056)       0:12:37.123 *******

TASK [kubernetes/node-label : Kubernetes Apps | Wait for kube-apiserver] ***************************
ok: [node1]
Monday 20 February 2023  14:16:52 +0200 (0:00:01.493)       0:12:38.616 *******

TASK [kubernetes/node-label : Set role node label to empty list] ***********************************
ok: [node1]
Monday 20 February 2023  14:16:52 +0200 (0:00:00.054)       0:12:38.670 *******
Monday 20 February 2023  14:16:53 +0200 (0:00:00.041)       0:12:38.712 *******

TASK [kubernetes/node-label : Set inventory node label to empty list] ******************************
ok: [node1]
Monday 20 February 2023  14:16:53 +0200 (0:00:00.055)       0:12:38.767 *******
Monday 20 February 2023  14:16:53 +0200 (0:00:00.039)       0:12:38.807 *******

TASK [kubernetes/node-label : debug] ***************************************************************
ok: [node1] => {
    "role_node_labels": []
}
Monday 20 February 2023  14:16:53 +0200 (0:00:00.055)       0:12:38.862 *******

TASK [kubernetes/node-label : debug] ***************************************************************
ok: [node1] => {
    "inventory_node_labels": []
}
Monday 20 February 2023  14:16:53 +0200 (0:00:00.058)       0:12:38.921 *******
Monday 20 February 2023  14:16:53 +0200 (0:00:00.050)       0:12:38.971 *******
Monday 20 February 2023  14:16:53 +0200 (0:00:00.053)       0:12:39.025 *******
Monday 20 February 2023  14:16:53 +0200 (0:00:00.057)       0:12:39.083 *******
Monday 20 February 2023  14:16:53 +0200 (0:00:00.045)       0:12:39.128 *******
Monday 20 February 2023  14:16:53 +0200 (0:00:00.044)       0:12:39.173 *******
Monday 20 February 2023  14:16:53 +0200 (0:00:00.044)       0:12:39.218 *******
Monday 20 February 2023  14:16:53 +0200 (0:00:00.047)       0:12:39.265 *******
Monday 20 February 2023  14:16:53 +0200 (0:00:00.044)       0:12:39.310 *******
Monday 20 February 2023  14:16:53 +0200 (0:00:00.046)       0:12:39.356 *******
Monday 20 February 2023  14:16:53 +0200 (0:00:00.045)       0:12:39.401 *******
Monday 20 February 2023  14:16:53 +0200 (0:00:00.044)       0:12:39.446 *******
Monday 20 February 2023  14:16:53 +0200 (0:00:00.044)       0:12:39.491 *******
Monday 20 February 2023  14:16:53 +0200 (0:00:00.061)       0:12:39.552 *******

TASK [network_plugin/calico : Slurp CNI config] ****************************************************
ok: [node1]
Monday 20 February 2023  14:16:55 +0200 (0:00:01.275)       0:12:40.827 *******
Monday 20 February 2023  14:16:55 +0200 (0:00:00.044)       0:12:40.872 *******
Monday 20 February 2023  14:16:55 +0200 (0:00:00.059)       0:12:40.932 *******
Monday 20 February 2023  14:16:55 +0200 (0:00:00.045)       0:12:40.977 *******

TASK [network_plugin/calico : Calico | Gather os specific variables] *******************************
ok: [node1] => (item=/Users/max/DevOps/kubespray/roles/network_plugin/calico/vars/../vars/debian.yml)
Monday 20 February 2023  14:16:55 +0200 (0:00:00.076)       0:12:41.053 *******
Monday 20 February 2023  14:16:55 +0200 (0:00:00.043)       0:12:41.097 *******

TASK [network_plugin/calico : include_tasks] *******************************************************
included: /Users/max/DevOps/kubespray/roles/network_plugin/calico/tasks/install.yml for node1
Monday 20 February 2023  14:16:55 +0200 (0:00:00.118)       0:12:41.216 *******
Monday 20 February 2023  14:16:55 +0200 (0:00:00.047)       0:12:41.263 *******

TASK [network_plugin/calico : Calico | Copy calicoctl binary from download dir] ********************
changed: [node1]
Monday 20 February 2023  14:16:57 +0200 (0:00:01.973)       0:12:43.237 *******

TASK [network_plugin/calico : Calico | Write Calico cni config] ************************************
changed: [node1]
Monday 20 February 2023  14:17:00 +0200 (0:00:02.771)       0:12:46.009 *******
Monday 20 February 2023  14:17:00 +0200 (0:00:00.043)       0:12:46.052 *******
Monday 20 February 2023  14:17:00 +0200 (0:00:00.060)       0:12:46.113 *******
Monday 20 February 2023  14:17:00 +0200 (0:00:00.044)       0:12:46.158 *******
Monday 20 February 2023  14:17:00 +0200 (0:00:00.047)       0:12:46.205 *******

TASK [network_plugin/calico : Calico | Install calicoctl wrapper script] ***************************
changed: [node1]
Monday 20 February 2023  14:17:03 +0200 (0:00:02.655)       0:12:48.860 *******
Monday 20 February 2023  14:17:03 +0200 (0:00:00.044)       0:12:48.904 *******

TASK [network_plugin/calico : Calico | Check if calico network pool has already been configured] ***
ok: [node1]
Monday 20 February 2023  14:17:04 +0200 (0:00:01.410)       0:12:50.315 *******
Monday 20 February 2023  14:17:04 +0200 (0:00:00.049)       0:12:50.365 *******
Monday 20 February 2023  14:17:04 +0200 (0:00:00.046)       0:12:50.411 *******
Monday 20 February 2023  14:17:04 +0200 (0:00:00.047)       0:12:50.459 *******

TASK [network_plugin/calico : Calico | Check if extra directory is needed] *************************
ok: [node1]
Monday 20 February 2023  14:17:06 +0200 (0:00:01.438)       0:12:51.898 *******
Monday 20 February 2023  14:17:06 +0200 (0:00:00.048)       0:12:51.947 *******

TASK [network_plugin/calico : Calico | Set kdd path when calico > v3.22.2] *************************
ok: [node1]
Monday 20 February 2023  14:17:06 +0200 (0:00:00.066)       0:12:52.013 *******

TASK [network_plugin/calico : Calico | Create calico manifests for kdd] ****************************
changed: [node1]
Monday 20 February 2023  14:17:07 +0200 (0:00:01.495)       0:12:53.509 *******

TASK [network_plugin/calico : Calico | Create Calico Kubernetes datastore resources] ***************
ok: [node1]
Monday 20 February 2023  14:17:09 +0200 (0:00:02.015)       0:12:55.524 *******

TASK [network_plugin/calico : Calico | Get existing FelixConfiguration] ****************************
fatal: [node1]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "get", "felixconfig", "default", "-o", "json"], "delta": "0:00:00.078754", "end": "2023-02-20 12:17:11.076927", "msg": "non-zero return code", "rc": 1, "start": "2023-02-20 12:17:10.998173", "stderr": "resource does not exist: FelixConfiguration(default) with error: felixconfigurations.crd.projectcalico.org \"default\" not found", "stderr_lines": ["resource does not exist: FelixConfiguration(default) with error: felixconfigurations.crd.projectcalico.org \"default\" not found"], "stdout": "null", "stdout_lines": ["null"]}
...ignoring
Monday 20 February 2023  14:17:11 +0200 (0:00:01.437)       0:12:56.961 *******

TASK [network_plugin/calico : Calico | Set kubespray FelixConfiguration] ***************************
ok: [node1]
Monday 20 February 2023  14:17:11 +0200 (0:00:00.064)       0:12:57.026 *******
Monday 20 February 2023  14:17:11 +0200 (0:00:00.047)       0:12:57.073 *******

TASK [network_plugin/calico : Calico | Configure calico FelixConfiguration] ************************
ok: [node1]
Monday 20 February 2023  14:17:12 +0200 (0:00:01.521)       0:12:58.595 *******

TASK [network_plugin/calico : Calico | Get existing calico network pool] ***************************
fatal: [node1]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "get", "ippool", "default-pool", "-o", "json"], "delta": "0:00:00.075467", "end": "2023-02-20 12:17:14.133261", "msg": "non-zero return code", "rc": 1, "start": "2023-02-20 12:17:14.057794", "stderr": "resource does not exist: IPPool(default-pool) with error: ippools.crd.projectcalico.org \"default-pool\" not found", "stderr_lines": ["resource does not exist: IPPool(default-pool) with error: ippools.crd.projectcalico.org \"default-pool\" not found"], "stdout": "null", "stdout_lines": ["null"]}
...ignoring
Monday 20 February 2023  14:17:14 +0200 (0:00:01.334)       0:12:59.929 *******

TASK [network_plugin/calico : Calico | Set kubespray calico network pool] **************************
ok: [node1]
Monday 20 February 2023  14:17:14 +0200 (0:00:00.063)       0:12:59.993 *******
Monday 20 February 2023  14:17:14 +0200 (0:00:00.046)       0:13:00.039 *******

TASK [network_plugin/calico : Calico | Configure calico network pool] ******************************
ok: [node1]
Monday 20 February 2023  14:17:15 +0200 (0:00:01.420)       0:13:01.460 *******
Monday 20 February 2023  14:17:15 +0200 (0:00:00.050)       0:13:01.510 *******
Monday 20 February 2023  14:17:15 +0200 (0:00:00.048)       0:13:01.559 *******
Monday 20 February 2023  14:17:15 +0200 (0:00:00.050)       0:13:01.609 *******
Monday 20 February 2023  14:17:15 +0200 (0:00:00.049)       0:13:01.658 *******
Monday 20 February 2023  14:17:16 +0200 (0:00:00.038)       0:13:01.696 *******
Monday 20 February 2023  14:17:16 +0200 (0:00:00.038)       0:13:01.734 *******
Monday 20 February 2023  14:17:16 +0200 (0:00:00.049)       0:13:01.783 *******

TASK [network_plugin/calico : Calico | Get existing BGP Configuration] *****************************
fatal: [node1]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "get", "bgpconfig", "default", "-o", "json"], "delta": "0:00:00.074854", "end": "2023-02-20 12:17:17.629600", "msg": "non-zero return code", "rc": 1, "start": "2023-02-20 12:17:17.554746", "stderr": "resource does not exist: BGPConfiguration(default) with error: bgpconfigurations.crd.projectcalico.org \"default\" not found", "stderr_lines": ["resource does not exist: BGPConfiguration(default) with error: bgpconfigurations.crd.projectcalico.org \"default\" not found"], "stdout": "null", "stdout_lines": ["null"]}
...ignoring
Monday 20 February 2023  14:17:17 +0200 (0:00:01.723)       0:13:03.507 *******

TASK [network_plugin/calico : Calico | Set kubespray BGP Configuration] ****************************
ok: [node1]
Monday 20 February 2023  14:17:17 +0200 (0:00:00.066)       0:13:03.573 *******
Monday 20 February 2023  14:17:17 +0200 (0:00:00.047)       0:13:03.620 *******

TASK [network_plugin/calico : Calico | Set up BGP Configuration] ***********************************
ok: [node1]
Monday 20 February 2023  14:17:19 +0200 (0:00:01.471)       0:13:05.092 *******

TASK [network_plugin/calico : Calico | Create calico manifests] ************************************
changed: [node1] => (item={'name': 'calico-config', 'file': 'calico-config.yml', 'type': 'cm'})
changed: [node1] => (item={'name': 'calico-node', 'file': 'calico-node.yml', 'type': 'ds'})
changed: [node1] => (item={'name': 'calico', 'file': 'calico-node-sa.yml', 'type': 'sa'})
changed: [node1] => (item={'name': 'calico', 'file': 'calico-cr.yml', 'type': 'clusterrole'})
changed: [node1] => (item={'name': 'calico', 'file': 'calico-crb.yml', 'type': 'clusterrolebinding'})
changed: [node1] => (item={'name': 'kubernetes-services-endpoint', 'file': 'kubernetes-services-endpoint.yml', 'type': 'cm'})
Monday 20 February 2023  14:17:35 +0200 (0:00:16.064)       0:13:21.157 *******
Monday 20 February 2023  14:17:35 +0200 (0:00:00.049)       0:13:21.206 *******
Monday 20 February 2023  14:17:35 +0200 (0:00:00.045)       0:13:21.252 *******
Monday 20 February 2023  14:17:35 +0200 (0:00:00.044)       0:13:21.297 *******
Monday 20 February 2023  14:17:35 +0200 (0:00:00.048)       0:13:21.346 *******

TASK [network_plugin/calico : Start Calico resources] **********************************************
ok: [node1] => (item=calico-config.yml)
ok: [node1] => (item=calico-node.yml)
ok: [node1] => (item=calico-node-sa.yml)
ok: [node1] => (item=calico-cr.yml)
ok: [node1] => (item=calico-crb.yml)
ok: [node1] => (item=kubernetes-services-endpoint.yml)
Monday 20 February 2023  14:17:45 +0200 (0:00:09.849)       0:13:31.195 *******
Monday 20 February 2023  14:17:45 +0200 (0:00:00.053)       0:13:31.249 *******
Monday 20 February 2023  14:17:45 +0200 (0:00:00.043)       0:13:31.292 *******

TASK [network_plugin/calico : Calico | Create Calico ipam manifests] *******************************
changed: [node1] => (item={'name': 'calico', 'file': 'calico-ipamconfig.yml', 'type': 'ipam'})
Monday 20 February 2023  14:17:48 +0200 (0:00:02.735)       0:13:34.027 *******

TASK [network_plugin/calico : Calico | Create ipamconfig resources] ********************************
ok: [node1]
Monday 20 February 2023  14:17:50 +0200 (0:00:02.607)       0:13:36.635 *******
Monday 20 February 2023  14:17:51 +0200 (0:00:00.053)       0:13:36.689 *******
Monday 20 February 2023  14:17:51 +0200 (0:00:00.059)       0:13:36.749 *******
Monday 20 February 2023  14:17:51 +0200 (0:00:00.042)       0:13:36.791 *******
Monday 20 February 2023  14:17:51 +0200 (0:00:00.054)       0:13:36.846 *******
Monday 20 February 2023  14:17:51 +0200 (0:00:00.062)       0:13:36.908 *******
Monday 20 February 2023  14:17:51 +0200 (0:00:00.040)       0:13:36.949 *******
Monday 20 February 2023  14:17:51 +0200 (0:00:00.057)       0:13:37.006 *******
Monday 20 February 2023  14:17:51 +0200 (0:00:00.040)       0:13:37.046 *******
Monday 20 February 2023  14:17:51 +0200 (0:00:00.055)       0:13:37.102 *******
Monday 20 February 2023  14:17:51 +0200 (0:00:00.041)       0:13:37.144 *******
Monday 20 February 2023  14:17:51 +0200 (0:00:00.041)       0:13:37.186 *******
Monday 20 February 2023  14:17:51 +0200 (0:00:00.055)       0:13:37.241 *******
Monday 20 February 2023  14:17:51 +0200 (0:00:00.044)       0:13:37.286 *******
Monday 20 February 2023  14:17:51 +0200 (0:00:00.041)       0:13:37.327 *******
Monday 20 February 2023  14:17:51 +0200 (0:00:00.055)       0:13:37.382 *******
Monday 20 February 2023  14:17:51 +0200 (0:00:00.041)       0:13:37.424 *******
Monday 20 February 2023  14:17:51 +0200 (0:00:00.093)       0:13:37.517 *******
Monday 20 February 2023  14:17:51 +0200 (0:00:00.110)       0:13:37.628 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.055)       0:13:37.683 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.040)       0:13:37.723 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.053)       0:13:37.777 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.040)       0:13:37.818 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.071)       0:13:37.889 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.042)       0:13:37.931 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.040)       0:13:37.972 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.040)       0:13:38.012 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.042)       0:13:38.055 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.040)       0:13:38.095 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.058)       0:13:38.153 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.040)       0:13:38.194 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.051)       0:13:38.245 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.040)       0:13:38.285 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.049)       0:13:38.335 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.051)       0:13:38.386 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.040)       0:13:38.426 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.040)       0:13:38.467 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.053)       0:13:38.520 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.039)       0:13:38.560 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.074)       0:13:38.634 *******
Monday 20 February 2023  14:17:52 +0200 (0:00:00.039)       0:13:38.674 *******
Monday 20 February 2023  14:17:53 +0200 (0:00:00.055)       0:13:38.729 *******
Monday 20 February 2023  14:17:53 +0200 (0:00:00.039)       0:13:38.769 *******
Monday 20 February 2023  14:17:53 +0200 (0:00:00.039)       0:13:38.809 *******
Monday 20 February 2023  14:17:53 +0200 (0:00:00.041)       0:13:38.851 *******
Monday 20 February 2023  14:17:53 +0200 (0:00:00.040)       0:13:38.891 *******
Monday 20 February 2023  14:17:53 +0200 (0:00:00.039)       0:13:38.931 *******
Monday 20 February 2023  14:17:53 +0200 (0:00:00.040)       0:13:38.972 *******
Monday 20 February 2023  14:17:53 +0200 (0:00:00.040)       0:13:39.012 *******
Monday 20 February 2023  14:17:53 +0200 (0:00:00.039)       0:13:39.052 *******
Monday 20 February 2023  14:17:53 +0200 (0:00:00.042)       0:13:39.094 *******
Monday 20 February 2023  14:17:53 +0200 (0:00:00.056)       0:13:39.151 *******
Monday 20 February 2023  14:17:53 +0200 (0:00:00.057)       0:13:39.209 *******
Monday 20 February 2023  14:17:53 +0200 (0:00:00.039)       0:13:39.249 *******
Monday 20 February 2023  14:17:53 +0200 (0:00:00.057)       0:13:39.306 *******
Monday 20 February 2023  14:17:53 +0200 (0:00:00.055)       0:13:39.361 *******
Monday 20 February 2023  14:17:53 +0200 (0:00:00.071)       0:13:39.433 *******

PLAY [calico_rr] ***********************************************************************************
skipping: no hosts matched

PLAY [kube_control_plane[0]] ***********************************************************************
Monday 20 February 2023  14:17:53 +0200 (0:00:00.102)       0:13:39.535 *******
Monday 20 February 2023  14:17:53 +0200 (0:00:00.048)       0:13:39.584 *******
Monday 20 February 2023  14:17:53 +0200 (0:00:00.049)       0:13:39.633 *******
Monday 20 February 2023  14:17:54 +0200 (0:00:00.044)       0:13:39.678 *******
Monday 20 February 2023  14:17:54 +0200 (0:00:00.042)       0:13:39.720 *******
Monday 20 February 2023  14:17:54 +0200 (0:00:00.052)       0:13:39.773 *******
Monday 20 February 2023  14:17:54 +0200 (0:00:00.044)       0:13:39.817 *******
Monday 20 February 2023  14:17:54 +0200 (0:00:00.048)       0:13:39.866 *******
Monday 20 February 2023  14:17:54 +0200 (0:00:00.044)       0:13:39.910 *******
Monday 20 February 2023  14:17:54 +0200 (0:00:00.043)       0:13:39.953 *******
Monday 20 February 2023  14:17:55 +0200 (0:00:00.889)       0:13:40.843 *******

TASK [kubespray-defaults : Configure defaults] *****************************************************
ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
Monday 20 February 2023  14:17:55 +0200 (0:00:00.056)       0:13:40.899 *******
Monday 20 February 2023  14:17:55 +0200 (0:00:00.060)       0:13:40.960 *******
Monday 20 February 2023  14:17:55 +0200 (0:00:00.043)       0:13:41.003 *******
Monday 20 February 2023  14:17:55 +0200 (0:00:00.050)       0:13:41.053 *******
Monday 20 February 2023  14:17:55 +0200 (0:00:00.043)       0:13:41.096 *******
Monday 20 February 2023  14:17:55 +0200 (0:00:00.042)       0:13:41.140 *******
Monday 20 February 2023  14:17:55 +0200 (0:00:00.053)       0:13:41.193 *******

TASK [win_nodes/kubernetes_patch : Ensure that user manifests directory exists] ********************
changed: [node1]
Monday 20 February 2023  14:17:56 +0200 (0:00:01.434)       0:13:42.628 *******

TASK [win_nodes/kubernetes_patch : Check current nodeselector for kube-proxy daemonset] ************
ok: [node1]
Monday 20 February 2023  14:17:58 +0200 (0:00:01.388)       0:13:44.017 *******

TASK [win_nodes/kubernetes_patch : Apply nodeselector patch for kube-proxy daemonset] **************
changed: [node1]
Monday 20 February 2023  14:17:59 +0200 (0:00:01.382)       0:13:45.400 *******

TASK [win_nodes/kubernetes_patch : debug] **********************************************************
ok: [node1] => {
    "msg": [
        "daemonset.apps/kube-proxy patched (no change)"
    ]
}
Monday 20 February 2023  14:17:59 +0200 (0:00:00.063)       0:13:45.464 *******

TASK [win_nodes/kubernetes_patch : debug] **********************************************************
ok: [node1] => {
    "msg": []
}

PLAY [kube_control_plane] **************************************************************************
Monday 20 February 2023  14:18:00 +0200 (0:00:00.227)       0:13:45.692 *******
Monday 20 February 2023  14:18:00 +0200 (0:00:00.052)       0:13:45.744 *******
Monday 20 February 2023  14:18:00 +0200 (0:00:00.052)       0:13:45.797 *******
Monday 20 February 2023  14:18:00 +0200 (0:00:00.048)       0:13:45.845 *******
Monday 20 February 2023  14:18:00 +0200 (0:00:00.044)       0:13:45.890 *******
Monday 20 February 2023  14:18:00 +0200 (0:00:00.049)       0:13:45.940 *******
Monday 20 February 2023  14:18:00 +0200 (0:00:00.047)       0:13:45.987 *******
Monday 20 February 2023  14:18:00 +0200 (0:00:00.052)       0:13:46.040 *******
Monday 20 February 2023  14:18:00 +0200 (0:00:00.048)       0:13:46.089 *******
Monday 20 February 2023  14:18:00 +0200 (0:00:00.046)       0:13:46.135 *******
Monday 20 February 2023  14:18:01 +0200 (0:00:00.897)       0:13:47.032 *******

TASK [kubespray-defaults : Configure defaults] *****************************************************
ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
Monday 20 February 2023  14:18:01 +0200 (0:00:00.059)       0:13:47.092 *******
Monday 20 February 2023  14:18:01 +0200 (0:00:00.066)       0:13:47.158 *******
Monday 20 February 2023  14:18:01 +0200 (0:00:00.045)       0:13:47.203 *******
Monday 20 February 2023  14:18:01 +0200 (0:00:00.051)       0:13:47.255 *******
Monday 20 February 2023  14:18:01 +0200 (0:00:00.045)       0:13:47.300 *******
Monday 20 February 2023  14:18:01 +0200 (0:00:00.049)       0:13:47.350 *******
Monday 20 February 2023  14:18:01 +0200 (0:00:00.057)       0:13:47.407 *******
Monday 20 February 2023  14:18:01 +0200 (0:00:00.043)       0:13:47.450 *******
Monday 20 February 2023  14:18:01 +0200 (0:00:00.042)       0:13:47.493 *******
Monday 20 February 2023  14:18:01 +0200 (0:00:00.042)       0:13:47.535 *******
Monday 20 February 2023  14:18:01 +0200 (0:00:00.063)       0:13:47.599 *******
Monday 20 February 2023  14:18:01 +0200 (0:00:00.074)       0:13:47.673 *******
Monday 20 February 2023  14:18:02 +0200 (0:00:00.043)       0:13:47.717 *******
Monday 20 February 2023  14:18:02 +0200 (0:00:00.046)       0:13:47.764 *******
Monday 20 February 2023  14:18:02 +0200 (0:00:00.056)       0:13:47.821 *******
Monday 20 February 2023  14:18:02 +0200 (0:00:00.046)       0:13:47.867 *******
Monday 20 February 2023  14:18:02 +0200 (0:00:00.043)       0:13:47.910 *******
Monday 20 February 2023  14:18:02 +0200 (0:00:00.075)       0:13:47.986 *******
Monday 20 February 2023  14:18:02 +0200 (0:00:00.045)       0:13:48.031 *******
Monday 20 February 2023  14:18:02 +0200 (0:00:00.090)       0:13:48.122 *******
Monday 20 February 2023  14:18:02 +0200 (0:00:00.111)       0:13:48.233 *******
Monday 20 February 2023  14:18:02 +0200 (0:00:00.053)       0:13:48.287 *******
Monday 20 February 2023  14:18:02 +0200 (0:00:00.056)       0:13:48.343 *******
Monday 20 February 2023  14:18:02 +0200 (0:00:00.072)       0:13:48.415 *******
Monday 20 February 2023  14:18:02 +0200 (0:00:00.042)       0:13:48.457 *******
Monday 20 February 2023  14:18:02 +0200 (0:00:00.073)       0:13:48.531 *******
Monday 20 February 2023  14:18:02 +0200 (0:00:00.065)       0:13:48.597 *******
Monday 20 February 2023  14:18:03 +0200 (0:00:00.182)       0:13:48.779 *******
Monday 20 February 2023  14:18:03 +0200 (0:00:00.094)       0:13:48.873 *******
Monday 20 February 2023  14:18:03 +0200 (0:00:00.048)       0:13:48.922 *******

TASK [policy_controller/calico : Create calico-kube-controllers manifests] *************************
changed: [node1] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-controllers.yml', 'type': 'deployment'})
changed: [node1] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-sa.yml', 'type': 'sa'})
changed: [node1] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-cr.yml', 'type': 'clusterrole'})
changed: [node1] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-crb.yml', 'type': 'clusterrolebinding'})
Monday 20 February 2023  14:18:14 +0200 (0:00:11.385)       0:14:00.307 *******

TASK [policy_controller/calico : Start of Calico kube controllers] *********************************
ok: [node1] => (item=calico-kube-controllers.yml)
ok: [node1] => (item=calico-kube-sa.yml)
ok: [node1] => (item=calico-kube-cr.yml)
ok: [node1] => (item=calico-kube-crb.yml)
Monday 20 February 2023  14:18:21 +0200 (0:00:06.643)       0:14:06.951 *******
Monday 20 February 2023  14:18:21 +0200 (0:00:00.043)       0:14:06.994 *******
Monday 20 February 2023  14:18:21 +0200 (0:00:00.041)       0:14:07.036 *******
Monday 20 February 2023  14:18:21 +0200 (0:00:00.040)       0:14:07.077 *******
Monday 20 February 2023  14:18:21 +0200 (0:00:00.043)       0:14:07.120 *******
Monday 20 February 2023  14:18:21 +0200 (0:00:00.042)       0:14:07.163 *******
Monday 20 February 2023  14:18:21 +0200 (0:00:00.056)       0:14:07.219 *******
Monday 20 February 2023  14:18:21 +0200 (0:00:00.040)       0:14:07.260 *******
Monday 20 February 2023  14:18:21 +0200 (0:00:00.041)       0:14:07.301 *******
Monday 20 February 2023  14:18:21 +0200 (0:00:00.043)       0:14:07.344 *******
Monday 20 February 2023  14:18:21 +0200 (0:00:00.041)       0:14:07.386 *******
Monday 20 February 2023  14:18:21 +0200 (0:00:00.041)       0:14:07.427 *******
Monday 20 February 2023  14:18:21 +0200 (0:00:00.057)       0:14:07.485 *******
Monday 20 February 2023  14:18:21 +0200 (0:00:00.039)       0:14:07.525 *******
Monday 20 February 2023  14:18:21 +0200 (0:00:00.062)       0:14:07.587 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.089)       0:14:07.677 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.051)       0:14:07.729 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.041)       0:14:07.770 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.040)       0:14:07.811 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.044)       0:14:07.855 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.041)       0:14:07.897 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.057)       0:14:07.954 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.040)       0:14:07.995 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.040)       0:14:08.036 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.043)       0:14:08.080 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.041)       0:14:08.121 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.040)       0:14:08.162 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.041)       0:14:08.203 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.042)       0:14:08.246 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.056)       0:14:08.302 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.044)       0:14:08.346 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.040)       0:14:08.386 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.041)       0:14:08.428 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.040)       0:14:08.468 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.041)       0:14:08.510 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.041)       0:14:08.551 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.044)       0:14:08.596 *******
Monday 20 February 2023  14:18:22 +0200 (0:00:00.056)       0:14:08.652 *******
Monday 20 February 2023  14:18:23 +0200 (0:00:00.040)       0:14:08.693 *******
Monday 20 February 2023  14:18:23 +0200 (0:00:00.040)       0:14:08.734 *******
Monday 20 February 2023  14:18:23 +0200 (0:00:00.041)       0:14:08.776 *******
Monday 20 February 2023  14:18:23 +0200 (0:00:00.043)       0:14:08.819 *******
Monday 20 February 2023  14:18:23 +0200 (0:00:00.042)       0:14:08.862 *******
Monday 20 February 2023  14:18:23 +0200 (0:00:00.070)       0:14:08.932 *******

TASK [kubernetes-apps/ansible : Kubernetes Apps | Wait for kube-apiserver] *************************
ok: [node1]
Monday 20 February 2023  14:18:25 +0200 (0:00:02.288)       0:14:11.221 *******

TASK [kubernetes-apps/ansible : Kubernetes Apps | Register coredns deployment annotation `createdby`] ***
fatal: [node1]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/kubectl", "--kubeconfig", "/etc/kubernetes/admin.conf", "get", "deploy", "-n", "kube-system", "coredns", "-o", "jsonpath={ .spec.template.metadata.annotations.createdby }"], "delta": "0:00:00.078191", "end": "2023-02-20 12:18:27.229915", "msg": "non-zero return code", "rc": 1, "start": "2023-02-20 12:18:27.151724", "stderr": "Error from server (NotFound): deployments.apps \"coredns\" not found", "stderr_lines": ["Error from server (NotFound): deployments.apps \"coredns\" not found"], "stdout": "", "stdout_lines": []}
...ignoring
Monday 20 February 2023  14:18:27 +0200 (0:00:01.814)       0:14:13.036 *******

TASK [kubernetes-apps/ansible : Kubernetes Apps | Register coredns service annotation `createdby`] ***
fatal: [node1]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/kubectl", "--kubeconfig", "/etc/kubernetes/admin.conf", "get", "svc", "-n", "kube-system", "coredns", "-o", "jsonpath={ .metadata.annotations.createdby }"], "delta": "0:00:00.076592", "end": "2023-02-20 12:18:28.747825", "msg": "non-zero return code", "rc": 1, "start": "2023-02-20 12:18:28.671233", "stderr": "Error from server (NotFound): services \"coredns\" not found", "stderr_lines": ["Error from server (NotFound): services \"coredns\" not found"], "stdout": "", "stdout_lines": []}
...ignoring
Monday 20 February 2023  14:18:28 +0200 (0:00:01.569)       0:14:14.606 *******

TASK [kubernetes-apps/ansible : Kubernetes Apps | Delete kubeadm CoreDNS] **************************
ok: [node1]
Monday 20 February 2023  14:18:30 +0200 (0:00:01.546)       0:14:16.152 *******

TASK [kubernetes-apps/ansible : Kubernetes Apps | Delete kubeadm Kube-DNS service] *****************
ok: [node1]
Monday 20 February 2023  14:18:31 +0200 (0:00:01.398)       0:14:17.551 *******

TASK [kubernetes-apps/ansible : Kubernetes Apps | Lay Down CoreDNS templates] **********************
changed: [node1] => (item={'name': 'coredns', 'file': 'coredns-clusterrole.yml', 'type': 'clusterrole'})
changed: [node1] => (item={'name': 'coredns', 'file': 'coredns-clusterrolebinding.yml', 'type': 'clusterrolebinding'})
changed: [node1] => (item={'name': 'coredns', 'file': 'coredns-config.yml', 'type': 'configmap'})
changed: [node1] => (item={'name': 'coredns', 'file': 'coredns-deployment.yml', 'type': 'deployment'})
changed: [node1] => (item={'name': 'coredns', 'file': 'coredns-sa.yml', 'type': 'sa'})
changed: [node1] => (item={'name': 'coredns', 'file': 'coredns-svc.yml', 'type': 'svc'})
changed: [node1] => (item={'name': 'dns-autoscaler', 'file': 'dns-autoscaler.yml', 'type': 'deployment'})
changed: [node1] => (item={'name': 'dns-autoscaler', 'file': 'dns-autoscaler-clusterrole.yml', 'type': 'clusterrole'})
changed: [node1] => (item={'name': 'dns-autoscaler', 'file': 'dns-autoscaler-clusterrolebinding.yml', 'type': 'clusterrolebinding'})
changed: [node1] => (item={'name': 'dns-autoscaler', 'file': 'dns-autoscaler-sa.yml', 'type': 'sa'})
Monday 20 February 2023  14:19:00 +0200 (0:00:29.078)       0:14:46.629 *******
Monday 20 February 2023  14:19:01 +0200 (0:00:00.085)       0:14:46.714 *******

TASK [kubernetes-apps/ansible : Kubernetes Apps | set up necessary nodelocaldns parameters] ********
ok: [node1]
Monday 20 February 2023  14:19:01 +0200 (0:00:00.137)       0:14:46.852 *******

TASK [kubernetes-apps/ansible : Kubernetes Apps | Lay Down nodelocaldns Template] ******************
changed: [node1] => (item={'name': 'nodelocaldns', 'file': 'nodelocaldns-config.yml', 'type': 'configmap'})
changed: [node1] => (item={'name': 'nodelocaldns', 'file': 'nodelocaldns-sa.yml', 'type': 'sa'})
changed: [node1] => (item={'name': 'nodelocaldns', 'file': 'nodelocaldns-daemonset.yml', 'type': 'daemonset'})
Monday 20 February 2023  14:19:10 +0200 (0:00:09.054)       0:14:55.907 *******
Monday 20 February 2023  14:19:10 +0200 (0:00:00.060)       0:14:55.968 *******

TASK [kubernetes-apps/ansible : Kubernetes Apps | Start Resources] *********************************
ok: [node1] => (item=coredns-clusterrole.yml)
ok: [node1] => (item=coredns-clusterrolebinding.yml)
ok: [node1] => (item=coredns-config.yml)
ok: [node1] => (item=coredns-deployment.yml)
ok: [node1] => (item=coredns-sa.yml)
ok: [node1] => (item=coredns-svc.yml)
ok: [node1] => (item=dns-autoscaler.yml)
ok: [node1] => (item=dns-autoscaler-clusterrole.yml)
ok: [node1] => (item=dns-autoscaler-clusterrolebinding.yml)
ok: [node1] => (item=dns-autoscaler-sa.yml)
ok: [node1] => (item=nodelocaldns-config.yml)
ok: [node1] => (item=nodelocaldns-sa.yml)
ok: [node1] => (item=nodelocaldns-daemonset.yml)
Monday 20 February 2023  14:19:32 +0200 (0:00:21.714)       0:15:17.683 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.055)       0:15:17.738 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.056)       0:15:17.795 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.042)       0:15:17.838 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.043)       0:15:17.881 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.043)       0:15:17.924 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.045)       0:15:17.970 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.044)       0:15:18.014 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.043)       0:15:18.058 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.047)       0:15:18.106 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.063)       0:15:18.169 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.059)       0:15:18.229 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.040)       0:15:18.270 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.040)       0:15:18.311 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.054)       0:15:18.365 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.040)       0:15:18.405 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.043)       0:15:18.449 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.040)       0:15:18.489 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.039)       0:15:18.529 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.040)       0:15:18.570 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.047)       0:15:18.617 *******
Monday 20 February 2023  14:19:32 +0200 (0:00:00.047)       0:15:18.664 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.049)       0:15:18.714 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.046)       0:15:18.760 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.046)       0:15:18.807 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.046)       0:15:18.853 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.055)       0:15:18.909 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.040)       0:15:18.950 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.042)       0:15:18.993 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.039)       0:15:19.032 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.040)       0:15:19.073 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.039)       0:15:19.113 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.040)       0:15:19.153 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.040)       0:15:19.194 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.045)       0:15:19.239 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.042)       0:15:19.282 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.041)       0:15:19.323 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.044)       0:15:19.368 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.059)       0:15:19.427 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.043)       0:15:19.470 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.107)       0:15:19.578 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.040)       0:15:19.618 *******
Monday 20 February 2023  14:19:33 +0200 (0:00:00.040)       0:15:19.659 *******
Monday 20 February 2023  14:19:34 +0200 (0:00:00.041)       0:15:19.700 *******
Monday 20 February 2023  14:19:34 +0200 (0:00:00.055)       0:15:19.756 *******
Monday 20 February 2023  14:19:34 +0200 (0:00:00.054)       0:15:19.810 *******
Monday 20 February 2023  14:19:34 +0200 (0:00:00.067)       0:15:19.878 *******
Monday 20 February 2023  14:19:34 +0200 (0:00:00.040)       0:15:19.918 *******
Monday 20 February 2023  14:19:34 +0200 (0:00:00.043)       0:15:19.961 *******
Monday 20 February 2023  14:19:34 +0200 (0:00:00.041)       0:15:20.002 *******
Monday 20 February 2023  14:19:34 +0200 (0:00:00.039)       0:15:20.042 *******
Monday 20 February 2023  14:19:34 +0200 (0:00:00.071)       0:15:20.113 *******
Monday 20 February 2023  14:19:34 +0200 (0:00:00.081)       0:15:20.195 *******
Monday 20 February 2023  14:19:34 +0200 (0:00:00.055)       0:15:20.251 *******
Monday 20 February 2023  14:19:34 +0200 (0:00:00.070)       0:15:20.321 *******
Monday 20 February 2023  14:19:34 +0200 (0:00:00.043)       0:15:20.364 *******
Monday 20 February 2023  14:19:34 +0200 (0:00:00.039)       0:15:20.404 *******
Monday 20 February 2023  14:19:34 +0200 (0:00:00.039)       0:15:20.444 *******
Monday 20 February 2023  14:19:34 +0200 (0:00:00.061)       0:15:20.505 *******
Monday 20 February 2023  14:19:34 +0200 (0:00:00.079)       0:15:20.585 *******
Monday 20 February 2023  14:19:34 +0200 (0:00:00.040)       0:15:20.626 *******
Monday 20 February 2023  14:19:34 +0200 (0:00:00.039)       0:15:20.666 *******
Monday 20 February 2023  14:19:35 +0200 (0:00:00.040)       0:15:20.706 *******
Monday 20 February 2023  14:19:35 +0200 (0:00:00.054)       0:15:20.760 *******
Monday 20 February 2023  14:19:35 +0200 (0:00:00.073)       0:15:20.834 *******
Monday 20 February 2023  14:19:35 +0200 (0:00:00.039)       0:15:20.874 *******
Monday 20 February 2023  14:19:35 +0200 (0:00:00.039)       0:15:20.914 *******
Monday 20 February 2023  14:19:35 +0200 (0:00:00.058)       0:15:20.972 *******
Monday 20 February 2023  14:19:35 +0200 (0:00:00.074)       0:15:21.047 *******
Monday 20 February 2023  14:19:35 +0200 (0:00:00.043)       0:15:21.090 *******
Monday 20 February 2023  14:19:35 +0200 (0:00:00.042)       0:15:21.133 *******
Monday 20 February 2023  14:19:35 +0200 (0:00:00.067)       0:15:21.200 *******
Monday 20 February 2023  14:19:35 +0200 (0:00:00.044)       0:15:21.245 *******
Monday 20 February 2023  14:19:35 +0200 (0:00:00.045)       0:15:21.291 *******
Monday 20 February 2023  14:19:35 +0200 (0:00:00.086)       0:15:21.378 *******
Monday 20 February 2023  14:19:35 +0200 (0:00:00.041)       0:15:21.419 *******
Monday 20 February 2023  14:19:35 +0200 (0:00:00.054)       0:15:21.474 *******
Monday 20 February 2023  14:19:35 +0200 (0:00:00.041)       0:15:21.515 *******
Monday 20 February 2023  14:19:35 +0200 (0:00:00.054)       0:15:21.570 *******
Monday 20 February 2023  14:19:35 +0200 (0:00:00.043)       0:15:21.614 *******
Monday 20 February 2023  14:19:35 +0200 (0:00:00.054)       0:15:21.668 *******
Monday 20 February 2023  14:19:36 +0200 (0:00:00.040)       0:15:21.709 *******
Monday 20 February 2023  14:19:36 +0200 (0:00:00.055)       0:15:21.764 *******
Monday 20 February 2023  14:19:36 +0200 (0:00:00.040)       0:15:21.805 *******
Monday 20 February 2023  14:19:36 +0200 (0:00:00.057)       0:15:21.863 *******
Monday 20 February 2023  14:19:36 +0200 (0:00:00.040)       0:15:21.903 *******
Monday 20 February 2023  14:19:36 +0200 (0:00:00.069)       0:15:21.973 *******
Monday 20 February 2023  14:19:36 +0200 (0:00:00.043)       0:15:22.016 *******
Monday 20 February 2023  14:19:36 +0200 (0:00:00.062)       0:15:22.078 *******
Monday 20 February 2023  14:19:36 +0200 (0:00:00.074)       0:15:22.153 *******
Monday 20 February 2023  14:19:36 +0200 (0:00:00.043)       0:15:22.196 *******
Monday 20 February 2023  14:19:36 +0200 (0:00:00.071)       0:15:22.268 *******
Monday 20 February 2023  14:19:36 +0200 (0:00:00.046)       0:15:22.315 *******
Monday 20 February 2023  14:19:36 +0200 (0:00:00.042)       0:15:22.357 *******
Monday 20 February 2023  14:19:36 +0200 (0:00:00.044)       0:15:22.402 *******
Monday 20 February 2023  14:19:36 +0200 (0:00:00.058)       0:15:22.460 *******
Monday 20 February 2023  14:19:36 +0200 (0:00:00.042)       0:15:22.503 *******
Monday 20 February 2023  14:19:36 +0200 (0:00:00.042)       0:15:22.545 *******
Monday 20 February 2023  14:19:36 +0200 (0:00:00.047)       0:15:22.593 *******
Monday 20 February 2023  14:19:36 +0200 (0:00:00.058)       0:15:22.652 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.042)       0:15:22.695 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.057)       0:15:22.752 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.042)       0:15:22.795 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.074)       0:15:22.869 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.053)       0:15:22.923 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.040)       0:15:22.964 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.040)       0:15:23.004 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.040)       0:15:23.045 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.059)       0:15:23.105 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.080)       0:15:23.185 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.041)       0:15:23.226 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.042)       0:15:23.269 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.041)       0:15:23.310 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.044)       0:15:23.354 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.041)       0:15:23.396 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.041)       0:15:23.438 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.042)       0:15:23.480 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.041)       0:15:23.522 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.042)       0:15:23.565 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.044)       0:15:23.609 *******
Monday 20 February 2023  14:19:37 +0200 (0:00:00.041)       0:15:23.651 *******
Monday 20 February 2023  14:19:38 +0200 (0:00:00.041)       0:15:23.692 *******
Monday 20 February 2023  14:19:38 +0200 (0:00:00.041)       0:15:23.733 *******
Monday 20 February 2023  14:19:38 +0200 (0:00:00.042)       0:15:23.776 *******
Monday 20 February 2023  14:19:38 +0200 (0:00:00.057)       0:15:23.834 *******
Monday 20 February 2023  14:19:38 +0200 (0:00:00.048)       0:15:23.882 *******
Monday 20 February 2023  14:19:38 +0200 (0:00:00.049)       0:15:23.932 *******
Monday 20 February 2023  14:19:38 +0200 (0:00:00.048)       0:15:23.981 *******
Monday 20 February 2023  14:19:38 +0200 (0:00:00.049)       0:15:24.031 *******
Monday 20 February 2023  14:19:38 +0200 (0:00:00.048)       0:15:24.079 *******
Monday 20 February 2023  14:19:38 +0200 (0:00:00.051)       0:15:24.130 *******

TASK [kubernetes-apps/metallb : Kubernetes Apps | Lay Down MetalLB] ********************************
changed: [node1] => (item=metallb.yml)
changed: [node1] => (item=metallb-config.yml)
Monday 20 February 2023  14:19:44 +0200 (0:00:05.767)       0:15:29.897 *******

TASK [kubernetes-apps/metallb : Kubernetes Apps | Install and configure MetalLB] *******************
ok: [node1] => (item={'diff': [], 'dest': '/etc/kubernetes/metallb.yml', 'src': '/home/serhieiev/.ansible/tmp/ansible-tmp-1676895578.610294-41401-186526269987165/source', 'md5sum': 'b7a35acb867a0804fd1a3aa7d3cf446a', 'checksum': '1590e0ad827f011241455aa2b3e3beb6dc52bbcf', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 9608, 'invocation': {'module_args': {'src': '/home/serhieiev/.ansible/tmp/ansible-tmp-1676895578.610294-41401-186526269987165/source', 'dest': '/etc/kubernetes/metallb.yml', 'mode': 420, 'follow': False, '_original_basename': 'metallb.yml.j2', 'checksum': '1590e0ad827f011241455aa2b3e3beb6dc52bbcf', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': 'metallb.yml', 'ansible_loop_var': 'item'})
ok: [node1] => (item={'diff': [], 'dest': '/etc/kubernetes/metallb-config.yml', 'src': '/home/serhieiev/.ansible/tmp/ansible-tmp-1676895581.471999-41401-186698275211625/source', 'md5sum': '6856beeb98a9778cf8db1c54077e2ae3', 'checksum': '71fcc9f7fd9bbcdadaf07e128fc1f0e1d59c82da', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 240, 'invocation': {'module_args': {'src': '/home/serhieiev/.ansible/tmp/ansible-tmp-1676895581.471999-41401-186698275211625/source', 'dest': '/etc/kubernetes/metallb-config.yml', 'mode': 420, 'follow': False, '_original_basename': 'metallb-config.yml.j2', 'checksum': '71fcc9f7fd9bbcdadaf07e128fc1f0e1d59c82da', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': 'metallb-config.yml', 'ansible_loop_var': 'item'})
Monday 20 February 2023  14:19:48 +0200 (0:00:03.964)       0:15:33.861 *******
Monday 20 February 2023  14:19:48 +0200 (0:00:00.042)       0:15:33.904 *******
Monday 20 February 2023  14:19:48 +0200 (0:00:00.040)       0:15:33.944 *******
Monday 20 February 2023  14:19:48 +0200 (0:00:00.045)       0:15:33.989 *******
Monday 20 February 2023  14:19:48 +0200 (0:00:00.045)       0:15:34.034 *******
Monday 20 February 2023  14:19:48 +0200 (0:00:00.046)       0:15:34.080 *******
Monday 20 February 2023  14:19:48 +0200 (0:00:00.042)       0:15:34.123 *******

PLAY [Apply resolv.conf changes now that cluster DNS is up] ****************************************
Monday 20 February 2023  14:19:48 +0200 (0:00:00.197)       0:15:34.321 *******
Monday 20 February 2023  14:19:48 +0200 (0:00:00.046)       0:15:34.367 *******
Monday 20 February 2023  14:19:48 +0200 (0:00:00.052)       0:15:34.420 *******
Monday 20 February 2023  14:19:48 +0200 (0:00:00.043)       0:15:34.463 *******
Monday 20 February 2023  14:19:48 +0200 (0:00:00.042)       0:15:34.505 *******
Monday 20 February 2023  14:19:48 +0200 (0:00:00.041)       0:15:34.547 *******
Monday 20 February 2023  14:19:48 +0200 (0:00:00.043)       0:15:34.590 *******
Monday 20 February 2023  14:19:48 +0200 (0:00:00.046)       0:15:34.636 *******
Monday 20 February 2023  14:19:49 +0200 (0:00:00.050)       0:15:34.687 *******
Monday 20 February 2023  14:19:49 +0200 (0:00:00.041)       0:15:34.729 *******
Monday 20 February 2023  14:19:49 +0200 (0:00:00.893)       0:15:35.622 *******

TASK [kubespray-defaults : Configure defaults] *****************************************************
ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
Monday 20 February 2023  14:19:50 +0200 (0:00:00.053)       0:15:35.676 *******
Monday 20 February 2023  14:19:50 +0200 (0:00:00.059)       0:15:35.735 *******
Monday 20 February 2023  14:19:50 +0200 (0:00:00.041)       0:15:35.777 *******
Monday 20 February 2023  14:19:50 +0200 (0:00:00.045)       0:15:35.823 *******
Monday 20 February 2023  14:19:50 +0200 (0:00:00.044)       0:15:35.867 *******
Monday 20 February 2023  14:19:50 +0200 (0:00:00.041)       0:15:35.908 *******
Monday 20 February 2023  14:19:50 +0200 (0:00:00.051)       0:15:35.960 *******

TASK [adduser : User | Create User Group] **********************************************************
ok: [node1]
Monday 20 February 2023  14:19:51 +0200 (0:00:01.479)       0:15:37.439 *******

TASK [adduser : User | Create User] ****************************************************************
ok: [node1]
Monday 20 February 2023  14:19:53 +0200 (0:00:01.558)       0:15:38.998 *******
Monday 20 February 2023  14:19:53 +0200 (0:00:00.050)       0:15:39.049 *******
Monday 20 February 2023  14:19:53 +0200 (0:00:00.041)       0:15:39.090 *******
Monday 20 February 2023  14:19:53 +0200 (0:00:00.040)       0:15:39.131 *******
Monday 20 February 2023  14:19:53 +0200 (0:00:00.040)       0:15:39.171 *******
Monday 20 February 2023  14:19:53 +0200 (0:00:00.048)       0:15:39.220 *******
Monday 20 February 2023  14:19:53 +0200 (0:00:00.040)       0:15:39.261 *******
Monday 20 February 2023  14:19:53 +0200 (0:00:00.043)       0:15:39.304 *******
Monday 20 February 2023  14:19:53 +0200 (0:00:00.110)       0:15:39.415 *******
Monday 20 February 2023  14:19:53 +0200 (0:00:00.040)       0:15:39.455 *******
Monday 20 February 2023  14:19:53 +0200 (0:00:00.040)       0:15:39.496 *******
Monday 20 February 2023  14:19:53 +0200 (0:00:00.067)       0:15:39.563 *******
Monday 20 February 2023  14:19:53 +0200 (0:00:00.041)       0:15:39.604 *******
Monday 20 February 2023  14:19:53 +0200 (0:00:00.043)       0:15:39.648 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.040)       0:15:39.688 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.039)       0:15:39.728 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.040)       0:15:39.769 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.040)       0:15:39.810 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.040)       0:15:39.850 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.043)       0:15:39.893 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.040)       0:15:39.934 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.040)       0:15:39.974 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.040)       0:15:40.015 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.040)       0:15:40.055 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.040)       0:15:40.096 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.043)       0:15:40.140 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.040)       0:15:40.180 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.041)       0:15:40.221 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.040)       0:15:40.262 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.040)       0:15:40.302 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.040)       0:15:40.343 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.043)       0:15:40.387 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.041)       0:15:40.428 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.040)       0:15:40.469 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.040)       0:15:40.509 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.041)       0:15:40.550 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.039)       0:15:40.590 *******
Monday 20 February 2023  14:19:54 +0200 (0:00:00.043)       0:15:40.634 *******
Monday 20 February 2023  14:19:55 +0200 (0:00:00.041)       0:15:40.675 *******
Monday 20 February 2023  14:19:55 +0200 (0:00:00.039)       0:15:40.715 *******
Monday 20 February 2023  14:19:55 +0200 (0:00:00.040)       0:15:40.756 *******
Monday 20 February 2023  14:19:55 +0200 (0:00:00.040)       0:15:40.796 *******
Monday 20 February 2023  14:19:55 +0200 (0:00:00.040)       0:15:40.837 *******
Monday 20 February 2023  14:19:55 +0200 (0:00:00.043)       0:15:40.880 *******
Monday 20 February 2023  14:19:55 +0200 (0:00:00.040)       0:15:40.921 *******
Monday 20 February 2023  14:19:55 +0200 (0:00:00.041)       0:15:40.962 *******

TASK [kubernetes/preinstall : check if booted with ostree] *****************************************
ok: [node1]
Monday 20 February 2023  14:19:56 +0200 (0:00:01.422)       0:15:42.385 *******

TASK [kubernetes/preinstall : set is_fedora_coreos] ************************************************
ok: [node1]
Monday 20 February 2023  14:19:58 +0200 (0:00:01.383)       0:15:43.768 *******

TASK [kubernetes/preinstall : set is_fedora_coreos] ************************************************
ok: [node1]
Monday 20 February 2023  14:19:58 +0200 (0:00:00.056)       0:15:43.824 *******

TASK [kubernetes/preinstall : check resolvconf] ****************************************************
ok: [node1]
Monday 20 February 2023  14:19:59 +0200 (0:00:01.480)       0:15:45.304 *******

TASK [kubernetes/preinstall : check existence of /etc/resolvconf/resolv.conf.d] ********************
ok: [node1]
Monday 20 February 2023  14:20:01 +0200 (0:00:01.555)       0:15:46.860 *******

TASK [kubernetes/preinstall : check status of /etc/resolv.conf] ************************************
ok: [node1]
Monday 20 February 2023  14:20:02 +0200 (0:00:01.365)       0:15:48.225 *******

TASK [kubernetes/preinstall : get content of /etc/resolv.conf] *************************************
ok: [node1]
Monday 20 February 2023  14:20:03 +0200 (0:00:01.359)       0:15:49.584 *******

TASK [kubernetes/preinstall : get currently configured nameservers] ********************************
ok: [node1]
Monday 20 February 2023  14:20:04 +0200 (0:00:00.118)       0:15:49.703 *******

TASK [kubernetes/preinstall : NetworkManager | Check if host has NetworkManager] *******************
ok: [node1]
Monday 20 February 2023  14:20:05 +0200 (0:00:01.344)       0:15:51.047 *******

TASK [kubernetes/preinstall : check systemd-resolved] **********************************************
ok: [node1]
Monday 20 February 2023  14:20:06 +0200 (0:00:01.475)       0:15:52.523 *******

TASK [kubernetes/preinstall : set default dns if remove_default_searchdomains is false] ************
ok: [node1]
Monday 20 February 2023  14:20:06 +0200 (0:00:00.062)       0:15:52.585 *******

TASK [kubernetes/preinstall : set dns facts] *******************************************************
ok: [node1]
Monday 20 February 2023  14:20:06 +0200 (0:00:00.063)       0:15:52.649 *******

TASK [kubernetes/preinstall : check if kubelet is configured] **************************************
ok: [node1]
Monday 20 February 2023  14:20:08 +0200 (0:00:01.486)       0:15:54.136 *******

TASK [kubernetes/preinstall : check if early DNS configuration stage] ******************************
ok: [node1]
Monday 20 February 2023  14:20:08 +0200 (0:00:00.057)       0:15:54.193 *******

TASK [kubernetes/preinstall : target resolv.conf files] ********************************************
ok: [node1]
Monday 20 February 2023  14:20:08 +0200 (0:00:00.060)       0:15:54.254 *******
Monday 20 February 2023  14:20:08 +0200 (0:00:00.042)       0:15:54.296 *******

TASK [kubernetes/preinstall : check if /etc/dhclient.conf exists] **********************************
ok: [node1]
Monday 20 February 2023  14:20:09 +0200 (0:00:01.348)       0:15:55.645 *******
Monday 20 February 2023  14:20:10 +0200 (0:00:00.041)       0:15:55.686 *******

TASK [kubernetes/preinstall : check if /etc/dhcp/dhclient.conf exists] *****************************
ok: [node1]
Monday 20 February 2023  14:20:11 +0200 (0:00:01.326)       0:15:57.013 *******

TASK [kubernetes/preinstall : target dhclient conf file for /etc/dhcp/dhclient.conf] ***************
ok: [node1]
Monday 20 February 2023  14:20:11 +0200 (0:00:00.058)       0:15:57.072 *******
Monday 20 February 2023  14:20:11 +0200 (0:00:00.040)       0:15:57.112 *******

TASK [kubernetes/preinstall : target dhclient hook file for Debian family] *************************
ok: [node1]
Monday 20 February 2023  14:20:11 +0200 (0:00:00.056)       0:15:57.169 *******

TASK [kubernetes/preinstall : generate search domains to resolvconf] *******************************
ok: [node1]
Monday 20 February 2023  14:20:11 +0200 (0:00:00.061)       0:15:57.231 *******

TASK [kubernetes/preinstall : pick coredns cluster IP or default resolver] *************************
ok: [node1]
Monday 20 February 2023  14:20:11 +0200 (0:00:00.133)       0:15:57.364 *******

TASK [kubernetes/preinstall : generate nameservers for resolvconf, including cluster DNS] **********
ok: [node1]
Monday 20 February 2023  14:20:11 +0200 (0:00:00.065)       0:15:57.430 *******
Monday 20 February 2023  14:20:11 +0200 (0:00:00.041)       0:15:57.471 *******

TASK [kubernetes/preinstall : gather os specific variables] ****************************************
ok: [node1] => (item=/Users/max/DevOps/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml)
Monday 20 February 2023  14:20:11 +0200 (0:00:00.071)       0:15:57.543 *******
Monday 20 February 2023  14:20:11 +0200 (0:00:00.040)       0:15:57.583 *******

TASK [kubernetes/preinstall : check /usr readonly] *************************************************
ok: [node1]
Monday 20 February 2023  14:20:13 +0200 (0:00:01.602)       0:15:59.186 *******
Monday 20 February 2023  14:20:13 +0200 (0:00:00.041)       0:15:59.228 *******
Monday 20 February 2023  14:20:13 +0200 (0:00:00.041)       0:15:59.270 *******
Monday 20 February 2023  14:20:13 +0200 (0:00:00.041)       0:15:59.312 *******
Monday 20 February 2023  14:20:13 +0200 (0:00:00.072)       0:15:59.384 *******
Monday 20 February 2023  14:20:13 +0200 (0:00:00.045)       0:15:59.430 *******
Monday 20 February 2023  14:20:13 +0200 (0:00:00.041)       0:15:59.471 *******
Monday 20 February 2023  14:20:13 +0200 (0:00:00.040)       0:15:59.511 *******
Monday 20 February 2023  14:20:13 +0200 (0:00:00.059)       0:15:59.571 *******
Monday 20 February 2023  14:20:13 +0200 (0:00:00.051)       0:15:59.623 *******
Monday 20 February 2023  14:20:13 +0200 (0:00:00.044)       0:15:59.668 *******
Monday 20 February 2023  14:20:14 +0200 (0:00:00.045)       0:15:59.713 *******
Monday 20 February 2023  14:20:14 +0200 (0:00:00.080)       0:15:59.794 *******
Monday 20 February 2023  14:20:14 +0200 (0:00:00.086)       0:15:59.880 *******
Monday 20 February 2023  14:20:14 +0200 (0:00:00.045)       0:15:59.926 *******
Monday 20 February 2023  14:20:14 +0200 (0:00:00.043)       0:15:59.970 *******

TASK [kubernetes/preinstall : Write resolved.conf] *************************************************
changed: [node1]
Monday 20 February 2023  14:20:17 +0200 (0:00:02.956)       0:16:02.926 *******
Monday 20 February 2023  14:20:17 +0200 (0:00:00.041)       0:16:02.967 *******
Monday 20 February 2023  14:20:17 +0200 (0:00:00.041)       0:16:03.009 *******
Monday 20 February 2023  14:20:17 +0200 (0:00:00.041)       0:16:03.051 *******
Monday 20 February 2023  14:20:17 +0200 (0:00:00.046)       0:16:03.097 *******
Monday 20 February 2023  14:20:17 +0200 (0:00:00.044)       0:16:03.142 *******
Monday 20 February 2023  14:20:17 +0200 (0:00:00.045)       0:16:03.188 *******
Monday 20 February 2023  14:20:17 +0200 (0:00:00.045)       0:16:03.233 *******
Monday 20 February 2023  14:20:17 +0200 (0:00:00.040)       0:16:03.274 *******
Monday 20 February 2023  14:20:17 +0200 (0:00:00.040)       0:16:03.314 *******
Monday 20 February 2023  14:20:17 +0200 (0:00:00.042)       0:16:03.357 *******
Monday 20 February 2023  14:20:17 +0200 (0:00:00.041)       0:16:03.398 *******
Monday 20 February 2023  14:20:17 +0200 (0:00:00.040)       0:16:03.439 *******
Monday 20 February 2023  14:20:17 +0200 (0:00:00.040)       0:16:03.479 *******
Monday 20 February 2023  14:20:17 +0200 (0:00:00.040)       0:16:03.520 *******
Monday 20 February 2023  14:20:17 +0200 (0:00:00.040)       0:16:03.560 *******
Monday 20 February 2023  14:20:17 +0200 (0:00:00.043)       0:16:03.604 *******
Monday 20 February 2023  14:20:17 +0200 (0:00:00.041)       0:16:03.645 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.041)       0:16:03.686 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.050)       0:16:03.737 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.040)       0:16:03.778 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.040)       0:16:03.818 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.043)       0:16:03.862 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.041)       0:16:03.903 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.040)       0:16:03.944 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.041)       0:16:03.985 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.041)       0:16:04.027 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.073)       0:16:04.101 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.042)       0:16:04.143 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.041)       0:16:04.185 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.040)       0:16:04.226 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.040)       0:16:04.266 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.040)       0:16:04.307 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.040)       0:16:04.347 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.042)       0:16:04.390 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.040)       0:16:04.430 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.041)       0:16:04.472 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.045)       0:16:04.517 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.041)       0:16:04.558 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.040)       0:16:04.599 *******
Monday 20 February 2023  14:20:18 +0200 (0:00:00.042)       0:16:04.642 *******
Monday 20 February 2023  14:20:19 +0200 (0:00:00.040)       0:16:04.682 *******
Monday 20 February 2023  14:20:19 +0200 (0:00:00.045)       0:16:04.728 *******
Monday 20 February 2023  14:20:19 +0200 (0:00:00.054)       0:16:04.782 *******
Monday 20 February 2023  14:20:19 +0200 (0:00:00.054)       0:16:04.836 *******
Monday 20 February 2023  14:20:19 +0200 (0:00:00.040)       0:16:04.877 *******

TASK [kubernetes/preinstall : Configure dhclient to supersede search/domain/nameservers] ***********
changed: [node1]
Monday 20 February 2023  14:20:20 +0200 (0:00:01.351)       0:16:06.228 *******

TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (non-RH)] *******************
ok: [node1]
Monday 20 February 2023  14:20:23 +0200 (0:00:02.621)       0:16:08.850 *******
Monday 20 February 2023  14:20:23 +0200 (0:00:00.051)       0:16:08.901 *******
Monday 20 February 2023  14:20:23 +0200 (0:00:00.043)       0:16:08.945 *******
Monday 20 February 2023  14:20:23 +0200 (0:00:00.043)       0:16:08.989 *******
Monday 20 February 2023  14:20:23 +0200 (0:00:00.000)       0:16:08.989 *******

RUNNING HANDLER [kubernetes/preinstall : Preinstall | propagate resolvconf to k8s components] ******
changed: [node1]
Monday 20 February 2023  14:20:24 +0200 (0:00:01.340)       0:16:10.330 *******

RUNNING HANDLER [kubernetes/preinstall : Preinstall | reload kubelet] ******************************
changed: [node1]
Monday 20 February 2023  14:20:26 +0200 (0:00:01.905)       0:16:12.235 *******

RUNNING HANDLER [kubernetes/preinstall : Preinstall | kube-apiserver configured] *******************
ok: [node1]
Monday 20 February 2023  14:20:27 +0200 (0:00:01.426)       0:16:13.661 *******

RUNNING HANDLER [kubernetes/preinstall : Preinstall | kube-controller configured] ******************
ok: [node1]
Monday 20 February 2023  14:20:29 +0200 (0:00:01.535)       0:16:15.197 *******
Monday 20 February 2023  14:20:29 +0200 (0:00:00.040)       0:16:15.237 *******
Monday 20 February 2023  14:20:29 +0200 (0:00:00.048)       0:16:15.286 *******
Monday 20 February 2023  14:20:29 +0200 (0:00:00.039)       0:16:15.325 *******

RUNNING HANDLER [kubernetes/preinstall : Preinstall | restart kube-apiserver crio/containerd] ******
changed: [node1]
Monday 20 February 2023  14:20:31 +0200 (0:00:01.713)       0:16:17.039 *******
FAILED - RETRYING: [node1]: Preinstall | wait for the apiserver to be running (60 retries left).

RUNNING HANDLER [kubernetes/preinstall : Preinstall | wait for the apiserver to be running] ********
ok: [node1]
Monday 20 February 2023  14:20:38 +0200 (0:00:07.172)       0:16:24.211 *******

RUNNING HANDLER [kubernetes/preinstall : Preinstall | Restart systemd-resolved] ********************
changed: [node1]
Monday 20 February 2023  14:20:40 +0200 (0:00:01.864)       0:16:26.076 *******
Monday 20 February 2023  14:20:40 +0200 (0:00:00.040)       0:16:26.116 *******
Monday 20 February 2023  14:20:40 +0200 (0:00:00.040)       0:16:26.157 *******
Monday 20 February 2023  14:20:40 +0200 (0:00:00.040)       0:16:26.197 *******
Monday 20 February 2023  14:20:40 +0200 (0:00:00.041)       0:16:26.238 *******
Monday 20 February 2023  14:20:40 +0200 (0:00:00.040)       0:16:26.279 *******
Monday 20 February 2023  14:20:40 +0200 (0:00:00.042)       0:16:26.321 *******
Monday 20 February 2023  14:20:40 +0200 (0:00:00.041)       0:16:26.362 *******
Monday 20 February 2023  14:20:40 +0200 (0:00:00.040)       0:16:26.403 *******

TASK [Run calico checks] ***************************************************************************
Monday 20 February 2023  14:20:40 +0200 (0:00:00.198)       0:16:26.601 *******

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip)] **********
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:20:41 +0200 (0:00:00.075)       0:16:26.677 *******

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip_mode)] *****
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:20:41 +0200 (0:00:00.074)       0:16:26.751 *******

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (calcio_ipam_autoallocateblocks)] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:20:41 +0200 (0:00:00.076)       0:16:26.827 *******
Monday 20 February 2023  14:20:41 +0200 (0:00:00.057)       0:16:26.884 *******

TASK [network_plugin/calico : Stop if supported Calico versions] ***********************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:20:41 +0200 (0:00:00.076)       0:16:26.960 *******
ASYNC OK on node1: jid=301384573424.21229

TASK [network_plugin/calico : Get current calico cluster version] **********************************
ok: [node1]
Monday 20 February 2023  14:20:47 +0200 (0:00:05.993)       0:16:32.954 *******

TASK [network_plugin/calico : Check that current calico version is enough for upgrade] *************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:20:47 +0200 (0:00:00.082)       0:16:33.036 *******
Monday 20 February 2023  14:20:47 +0200 (0:00:00.066)       0:16:33.103 *******
Monday 20 February 2023  14:20:47 +0200 (0:00:00.057)       0:16:33.160 *******

TASK [network_plugin/calico : Check vars defined correctly] ****************************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:20:47 +0200 (0:00:00.075)       0:16:33.235 *******

TASK [network_plugin/calico : Check calico network backend defined correctly] **********************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:20:47 +0200 (0:00:00.077)       0:16:33.313 *******

TASK [network_plugin/calico : Check ipip and vxlan mode defined correctly] *************************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:20:47 +0200 (0:00:00.077)       0:16:33.390 *******
Monday 20 February 2023  14:20:47 +0200 (0:00:00.056)       0:16:33.447 *******

TASK [network_plugin/calico : Check ipip and vxlan mode if simultaneously enabled] *****************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:20:47 +0200 (0:00:00.078)       0:16:33.526 *******

TASK [network_plugin/calico : Get Calico default-pool configuration] *******************************
ok: [node1]
Monday 20 February 2023  14:20:48 +0200 (0:00:00.546)       0:16:34.073 *******

TASK [network_plugin/calico : Set calico_pool_conf] ************************************************
ok: [node1]
Monday 20 February 2023  14:20:48 +0200 (0:00:00.076)       0:16:34.149 *******

TASK [network_plugin/calico : Check if inventory match current cluster configuration] **************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
Monday 20 February 2023  14:20:48 +0200 (0:00:00.087)       0:16:34.237 *******
Monday 20 February 2023  14:20:48 +0200 (0:00:00.056)       0:16:34.293 *******
Monday 20 February 2023  14:20:48 +0200 (0:00:00.055)       0:16:34.349 *******

PLAY RECAP *****************************************************************************************
localhost                  : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
node1                      : ok=769  changed=149  unreachable=0    failed=0    skipped=1276 rescued=0    ignored=9

Monday 20 February 2023  14:20:48 +0200 (0:00:00.083)       0:16:34.432 *******
===============================================================================
kubernetes-apps/ansible : Kubernetes Apps | Lay Down CoreDNS templates --------------------- 29.08s
download : download_file | Validate mirrors ------------------------------------------------ 28.06s
kubernetes-apps/ansible : Kubernetes Apps | Start Resources -------------------------------- 21.72s
network_plugin/calico : Calico | Create calico manifests ----------------------------------- 16.06s
kubernetes/control-plane : kubeadm | Initialize first master ------------------------------- 14.59s
policy_controller/calico : Create calico-kube-controllers manifests ------------------------ 11.38s
kubernetes/preinstall : Update package management cache (APT) ------------------------------ 11.23s
download : download_container | Download image if required --------------------------------- 11.13s
network_plugin/calico : Start Calico resources ---------------------------------------------- 9.85s
etcd : reload etcd -------------------------------------------------------------------------- 9.78s
kubernetes-apps/ansible : Kubernetes Apps | Lay Down nodelocaldns Template ------------------ 9.05s
kubernetes/preinstall : Install packages requirements --------------------------------------- 8.77s
kubernetes/preinstall : Ensure kube-bench parameters are set -------------------------------- 8.00s
container-engine/containerd : containerd | Unpack containerd archive ------------------------ 7.82s
kubernetes/preinstall : Preinstall | wait for the apiserver to be running ------------------- 7.17s
container-engine/containerd : containerd | Remove orphaned binary --------------------------- 7.10s
download : download_container | Download image if required ---------------------------------- 6.66s
policy_controller/calico : Start of Calico kube controllers --------------------------------- 6.64s
download : download_container | Download image if required ---------------------------------- 6.46s
etcd : Configure | Check if etcd cluster is healthy ----------------------------------------- 6.35s